#!/home/lindahl/.pyenv/versions/3.6.4/bin/python

import os
import logging
import argparse
import json
import csv
import sys

import cdx_toolkit

loglevel = os.getenv('LOGLEVEL') or 'INFO'
logging.basicConfig(level=loglevel)

ARGS = argparse.ArgumentParser(description='cdx_toolkit iterator command line tool')
ARGS.add_argument('--cc', action='store_true', help='direct the query to the Common Crawl CDX server')
ARGS.add_argument('--ia', action='store_true', help='direct the query to the Internet Archive CDX server')
ARGS.add_argument('--limit', type=int, action='store')
ARGS.add_argument('--cc-duration', action='store')
ARGS.add_argument('--cc-sort', action='store', help='default mixed, alternatively: ascending')
ARGS.add_argument('--from', action='store')
ARGS.add_argument('--to', action='store')
#ARGS.add_argument('--closest', action='store')  # this is a get() thing, not an iter thing
ARGS.add_argument('--all-fields', action='store_true')
ARGS.add_argument('--fields', action='store', default='url,status,timestamp', help='try --all-fields if you need the list')
ARGS.add_argument('--jsonl', action='store_true')
ARGS.add_argument('--csv', action='store_true')
ARGS.add_argument('url')

args = ARGS.parse_args()

if not args.url:
    raise ValueError('must specify an url to iterate, example: commoncrawl.org/*')
if (args.cc and args.ia) or not (args.cc or args.ia):
    raise ValueError('must pick one of -cc or --ia')

if args.cc:
    kwargs = {}
    if args.cc_duration:
        kwargs['cc_duration'] = args.cc_duration
    if args.cc_sort:
        kwargs['cc_sort'] = args.cc_sort
    cdx = cdx_toolkit.CDXFetcher(source='cc', **kwargs)
if args.ia:
    cdx = cdx_toolkit.CDXFetcher(source='ia')

fields = set(args.fields.split(','))

fields_to_cc = {'statuscode': 'status', 'original': 'url'}

if args.csv:
    writer = csv.DictWriter(sys.stdout, fieldnames=sorted(list(fields)))
    writer.writeheader()

kwargs = {}
if args.limit:
    kwargs['limit'] = args.limit
if 'from' in vars(args):  # python, uh, from is a reserved word
    kwargs['from'] = vars(args)['from']
if args.to:
    kwargs['to'] = args.to

for obj in cdx.items(args.url, **kwargs):
    try:
        if args.ia:
            for k, v in fields_to_cc.items():
                if k in obj:
                    obj[v] = obj[k]
                    del obj[k]
        if args.all_fields:
            printme = obj
        else:
            printme = dict([(k, obj[k]) for k in fields if k in obj])
    except KeyError:
        print('Missing field, fields are {!r} and object is {!r}'.format(fields, obj))
        raise
    if args.jsonl:
        print(json.dumps(printme, sort_keys=True))
    elif args.csv:
        writer.writerow(printme)
    else:
        print(printme)
