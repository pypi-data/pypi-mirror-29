Metadata-Version: 1.1
Name: pyfma
Version: 0.1.0
Summary: Fused multiply-add for Python
Home-page: https://github.com/nschloe/pyfma
Author: Nico Schl√∂mer
Author-email: nico.schloemer@gmail.com
License: License :: OSI Approved :: MIT License
Download-URL: https://pypi.python.org/pypi/pyfma
Description-Content-Type: UNKNOWN
Description: pyfma
        =====
        
        `Fused
        multiply-add <https://en.wikipedia.org/wiki/Multiply%E2%80%93accumulate_operation#Fused_multiply%E2%80%93add>`__
        for Python.
        
        |CircleCI| |PyPi Version| |GitHub stars|
        
        Fused multiply-add computes ``(x*y) + z`` with a *single rounding*.
        Useful for dot products, matrix multiplications, polynomial evaluations
        (e.g., with Horner's rule), Newton's method for evaluating functions,
        convolutions, artificial neural networks etc.
        
        Use as
        
        ::
        
            import pyfma
        
            out = pyfma.fma(3.0, 2.0, 1.0)  # 3.0*2.0 + 1.0 = 7.0
        
        Also works with NumPy inputs:
        
        ::
        
            import numpy
            import pyfma
        
            x = numpy.random.rand(3, 4, 5)
            y = numpy.random.rand(3, 4, 5)
            z = numpy.random.rand(3, 4, 5)
        
            out = pyfma.fma(x, y, z)
        
        Built with `pybind11 <https://github.com/pybind/pybind11>`__.
        
            **Caution** The C/C++ implementation of FMA in *MS Windows* is
            `reportedly broken <https://bugs.python.org/msg312480>`__. Use with
            care.
        
        Installation
        ~~~~~~~~~~~~
        
        pyfma can be `installed from the Python Package
        Index <https://pypi.python.org/pypi/pyfma/>`__, so with
        
        ::
        
            pip install -U pyfma
        
        you can install/upgrade.
        
        Manual installation
        ^^^^^^^^^^^^^^^^^^^
        
        For manual installation (if you're a developer or just really keen on
        getting the bleeding edge version of pyfma), there are two
        possibilities:
        
        -  Get the sources, type ``sudo python setup.py install``. This does the
           trick most the time.
        -  As a fallback, there's a CMake-based installation. Simply go
           ``cmake    /path/to/sources/`` and ``make``.
        
        Testing
        ~~~~~~~
        
        To run the pyfma unit tests, check out this repository and type
        
        ::
        
            pytest
        
        Distribution
        ~~~~~~~~~~~~
        
        To create a new release
        
        1. bump the ``__version__`` number (in ``setup.py`` *and*
           ``src/pyfma.i``)
        
        2. publish to PyPi and GitHub:
        
           ::
        
               make publish
        
        License
        ~~~~~~~
        
        pyfma is published under the `MIT
        license <https://en.wikipedia.org/wiki/MIT_License>`__.
        
        .. |CircleCI| image:: https://img.shields.io/circleci/project/github/nschloe/pyfma/master.svg
           :target: https://circleci.com/gh/nschloe/pyfma/tree/master
        .. |PyPi Version| image:: https://img.shields.io/pypi/v/pyfma.svg
           :target: https://pypi.python.org/pypi/pyfma
        .. |GitHub stars| image:: https://img.shields.io/github/stars/nschloe/pyfma.svg?style=social&label=Stars
           :target: https://github.com/nschloe/pyfma
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Libraries
