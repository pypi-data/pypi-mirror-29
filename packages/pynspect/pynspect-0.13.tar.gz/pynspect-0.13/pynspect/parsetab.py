
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CONSTANT DATETIME FLOAT FUNCTION INTEGER IPV4 IPV6 LBRACK LPAREN OP_AND OP_AND_P OP_DIVIDE OP_EQ OP_EXISTS OP_GE OP_GT OP_IN OP_IS OP_LE OP_LIKE OP_LT OP_MINUS OP_MODULO OP_NE OP_NOT OP_OR OP_OR_P OP_PLUS OP_TIMES OP_XOR OP_XOR_P RBRACK RPAREN VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'VARIABLE':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[9,34,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,34,34,34,34,34,34,34,]),'OP_MODULO':([1,3,5,7,9,14,16,22,52,65,83,84,],[27,-36,-35,-39,-38,-37,-33,-34,-40,-42,-43,-41,]),'LBRACK':([0,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'INTEGER':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[3,31,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,31,31,31,31,31,31,31,]),'OP_EXISTS':([0,18,19,23,37,38,40,41,54,55,],[11,11,11,11,11,11,11,11,11,11,]),'OP_TIMES':([1,3,5,7,9,14,16,22,52,65,83,84,],[28,-36,-35,-39,-38,-37,-33,-34,-40,-42,-43,-41,]),'FLOAT':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[14,36,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,36,36,36,36,36,36,36,]),'OP_XOR_P':([1,3,5,6,7,8,9,12,14,16,17,21,22,39,52,56,57,58,59,60,61,65,71,74,75,76,77,78,79,80,81,82,83,84,],[-32,-36,-35,-12,-39,-14,-38,-16,-37,-33,-26,55,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-11,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,]),'OP_XOR':([1,3,4,5,6,7,8,9,12,14,15,16,17,20,21,22,39,52,56,57,58,59,60,61,65,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-32,-36,-6,-35,-12,-39,-14,-38,-16,-37,41,-33,-26,-8,-10,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-5,-11,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,-7,-9,]),'OP_AND':([1,3,4,5,6,7,8,9,12,14,16,17,20,21,22,39,52,56,57,58,59,60,61,65,71,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-32,-36,37,-35,-12,-39,-14,-38,-16,-37,-33,-26,-8,-10,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-11,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,-7,-9,]),'DATETIME':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[5,35,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,35,35,35,35,35,35,35,]),'OP_LT':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,44,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_MINUS':([1,3,5,7,9,14,16,22,52,65,83,84,],[25,-36,-35,-39,-38,-37,-33,-34,-40,-42,-43,-41,]),'IPV4':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[16,30,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,30,30,30,30,30,30,30,]),'OP_DIVIDE':([1,3,5,7,9,14,16,22,52,65,83,84,],[26,-36,-35,-39,-38,-37,-33,-34,-40,-42,-43,-41,]),'LPAREN':([0,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'OP_IS':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,50,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_NE':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,49,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_GE':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,42,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_OR':([1,3,4,5,6,7,8,9,12,13,14,15,16,17,20,21,22,39,52,56,57,58,59,60,61,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-32,-36,-6,-35,-12,-39,-14,-38,-16,40,-37,-4,-33,-26,-8,-10,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-5,-11,-3,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,-7,-9,]),'FUNCTION':([0,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'OP_EQ':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,45,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_AND_P':([1,3,5,6,7,8,9,12,14,16,17,22,39,52,56,57,58,59,60,61,65,74,75,76,77,78,79,80,81,82,83,84,],[-32,-36,-35,38,-39,-14,-38,-16,-37,-33,-26,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,]),'COMMA':([29,30,31,33,34,35,36,],[62,63,64,66,67,68,69,]),'OP_LE':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,46,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'CONSTANT':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[7,33,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,33,33,33,33,33,33,33,]),'RBRACK':([29,30,31,32,33,34,35,36,87,88,89,90,91,92,93,],[-45,-44,-47,65,-50,-49,-46,-48,-52,-51,-54,-57,-56,-53,-55,]),'IPV6':([0,2,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,62,63,64,66,67,68,69,],[22,29,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,29,29,29,29,29,29,29,]),'$end':([1,3,4,5,6,7,8,9,10,12,13,14,15,16,17,20,21,22,39,52,56,57,58,59,60,61,65,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-32,-36,-6,-35,-12,-39,-14,-38,0,-16,-2,-37,-4,-33,-26,-8,-10,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-5,-11,-1,-3,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,-7,-9,]),'OP_PLUS':([1,3,5,7,9,14,16,22,52,65,83,84,],[24,-36,-35,-39,-38,-37,-33,-34,-40,-42,-43,-41,]),'OP_NOT':([0,18,19,37,38,40,41,54,55,],[23,23,23,23,23,23,23,23,23,]),'OP_OR_P':([1,3,5,6,7,8,9,12,14,16,17,20,21,22,39,52,56,57,58,59,60,61,65,71,74,75,76,77,78,79,80,81,82,83,84,86,],[-32,-36,-35,-12,-39,-14,-38,-16,-37,-33,-26,54,-10,-34,-15,-40,-13,-27,-28,-30,-31,-29,-42,-11,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,-9,]),'RPAREN':([1,3,4,5,6,7,8,9,12,13,14,15,16,17,19,20,21,22,39,51,52,53,56,57,58,59,60,61,65,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-32,-36,-6,-35,-12,-39,-14,-38,-16,-2,-37,-4,-33,-26,52,-8,-10,-34,-15,83,-40,84,-13,-27,-28,-30,-31,-29,-42,-5,-11,-1,-3,-23,-22,-24,-20,-25,-17,-18,-21,-19,-43,-41,-7,-9,]),'OP_IN':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,48,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_LIKE':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,47,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),'OP_GT':([1,3,5,7,9,14,16,17,22,52,57,58,59,60,61,65,83,84,],[-32,-36,-35,-39,-38,-37,-33,43,-34,-40,-27,-28,-30,-31,-29,-42,-43,-41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'factor':([0,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'and_expression':([0,18,19,37,40,41,],[15,15,15,70,15,15,]),'not_expression':([0,18,19,37,38,40,41,54,55,],[6,6,6,6,6,6,6,6,6,]),'or_p_expression':([0,18,19,37,40,41,54,],[4,4,4,4,4,4,85,]),'expression':([0,18,19,40,],[10,51,53,72,]),'list':([2,62,63,64,66,67,68,69,],[32,87,88,89,90,91,92,93,]),'xor_p_expression':([0,18,19,37,40,41,54,55,],[20,20,20,20,20,20,20,86,]),'cmp_expression':([0,11,18,19,23,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,],[12,39,12,12,12,12,12,12,12,74,75,76,77,78,79,80,81,82,12,12,]),'xor_expression':([0,18,19,40,41,],[13,13,13,13,73,]),'ex_expression':([0,18,19,23,37,38,40,41,54,55,],[8,8,8,56,8,8,8,8,8,8,]),'and_p_expression':([0,18,19,37,38,40,41,54,55,],[21,21,21,21,71,21,21,21,21,]),'term':([0,11,18,19,23,24,25,26,27,28,37,38,40,41,42,43,44,45,46,47,48,49,50,54,55,],[17,17,17,17,17,57,58,59,60,61,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',261),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',262),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',270),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',271),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',279),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',280),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',288),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',289),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',297),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',298),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',307),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',308),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',316),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',317),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',325),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',326),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',335),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',336),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',337),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',338),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',339),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',340),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',341),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',342),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',343),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',344),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',352),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',353),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',354),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',355),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',356),
  ('term -> factor','term',1,'p_term','gparser.py',357),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',365),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',366),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',367),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',368),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',369),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',370),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',371),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',372),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',373),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',374),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',375),
  ('list -> IPV4','list',1,'p_list','gparser.py',386),
  ('list -> IPV6','list',1,'p_list','gparser.py',387),
  ('list -> DATETIME','list',1,'p_list','gparser.py',388),
  ('list -> INTEGER','list',1,'p_list','gparser.py',389),
  ('list -> FLOAT','list',1,'p_list','gparser.py',390),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',391),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',392),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',393),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',394),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',395),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',396),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',397),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',398),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',399),
]
