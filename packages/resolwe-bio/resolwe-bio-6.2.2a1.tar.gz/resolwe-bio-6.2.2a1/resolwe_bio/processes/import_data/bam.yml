# ============
# Import - BAM
# ============
---

- slug: upload-bam
  name: BAM file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:latest
    resources:
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 1.0.17
  type: data:alignment:bam:upload
  flow_collection: sample
  category: upload
  persistence: RAW
  description: >
    Upload a mapping file in BAM format.
  input:
    - name: src
      label: Mapping (BAM)
      type: basic:file
      description: >
        A mapping file in BAM format. The file will be indexed on upload, so additional BAI files are not required.
      validate_regex: '\.(bam)$'
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
        re-import {{ src.file_temp }} {{ src.file }} "bam" "bam" 0.3 extract

        samtools index "${NAME}.bam" 2> stderr.txt
        indexrc=$?

        grep -Fq 'fail to index' stderr.txt
        indexerr=$?

        if [ -f "stderr.txt" ]; then
            cat stderr.txt
        fi

        # Position sort and re-index if indexing failed
        if [ $indexerr -eq 0 ] || [ $indexrc -ne 0 ]; then
            echo "SORTING input BAM file per coordinate:"
            samtools sort -o "${NAME}_aligned.bam" "${NAME}.bam" >&2
            echo "{\"proc.progress\":0.4,\"proc.rc\":$?}"
            mv "${NAME}_aligned.bam" "${NAME}.bam"
            echo "{\"proc.rc\":$?}"
            echo "INDEXING input BAM file"
            samtools index "${NAME}.bam"
            echo "{\"proc.rc\":$?}"
        fi

        echo "{\"bam\":{\"file\":\"${NAME}.bam\"},\"bai\":{\"file\":\"${NAME}.bam.bai\"}}"

- slug: upload-bam-indexed
  name: BAM file and index
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:latest
    resources:
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 1.0.12
  type: data:alignment:bam:upload
  category: upload
  flow_collection: sample
  persistence: RAW
  description: >
    Upload a mapping file in BAM format with index.
  input:
    - name: src
      label: Mapping (BAM)
      type: basic:file
      description: >
        A mapping file in BAM format.
      validate_regex: '\.(bam)$'
    - name: src2
      label: bam index (*.bam.bai file)
      type: basic:file
      description: >
        An index file of a BAM mapping file (ending with bam.bai).
      validate_regex: '\.(bam.bai)$'
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
        re-import {{ src.file_temp }} {{ src.file }} "bam" "bam" 0.3 extract
        BAM_NAME=${NAME}.bam

        re-import {{ src2.file_temp|default(src2.file) }} {{ src2.file }} "bai" "bai" 0.3 extract
        BAI_NAME=${NAME}.bai

        if [ "${BAM_NAME}.bai" = "${BAI_NAME}" ]; then
            echo "{\"bam\":{\"file\":\"${BAM_NAME}\"},\"bai\":{\"file\":\"${BAI_NAME}\"}}"
        else
            echo "{\"proc.error\":\"BAI should have the same name as BAM with .bai extension\"}"
        fi

- slug: upload-bam-primary
  name: Primary hybrid BAM file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:1.1.0
    resources:
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 0.0.1
  type: data:alignment:bam:primary
  flow_collection: sample
  category: upload
  persistence: RAW
  description: >
    Upload a primary mapping file in BAM format.
  input:
    - name: bam
      label: Hybrid bam
      type: data:alignment:bam
      required: false
      description: >
        Primary bam will be appended to the same sample where hybrid bam is.
    - name: src
      label: Mapping (BAM)
      type: basic:file
      description: >
        A mapping file in BAM format. The file will be indexed on upload, so additional BAI files are not required.
      validate_regex: '\.(bam)$'
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
        re-import {{ src.file_temp }} {{ src.file }} "bam" "bam" 0.3 extract

        samtools index "${NAME}.bam"
        re-checkrc
        re-progress 0.8

        re-save-file bam "${NAME}.bam"
        re-save-file bai "${NAME}.bam.bai"

- slug: upload-bam-secondary
  name: Secondary hybrid BAM file
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:1.1.0
    resources:
      network: true
  data_name: '{{ src.file|default("?") }}'
  version: 0.0.1
  type: data:alignment:bam:secondary
  flow_collection: sample
  category: upload
  persistence: RAW
  description: >
    Upload a secondary mapping file in BAM format.
  input:
    - name: bam
      label: Hybrid bam
      type: data:alignment:bam
      required: false
      description: >
        Secondary bam will be appended to the same sample where hybrid bam is.
    - name: src
      label: Mapping (BAM)
      type: basic:file
      description: >
        A mapping file in BAM format. The file will be indexed on upload, so additional BAI files are not required.
      validate_regex: '\.(bam)$'
  output:
    - name: bam
      label: Uploaded file
      type: basic:file
    - name: bai
      label: Index BAI
      type: basic:file
  run:
    runtime: polyglot
    language: bash
    program: |
        re-import {{ src.file_temp }} {{ src.file }} "bam" "bam" 0.3 extract

        samtools index "${NAME}.bam"
        re-checkrc
        re-progress 0.8
        
        re-save-file bam "${NAME}.bam"
        re-save-file bai "${NAME}.bam.bai"
