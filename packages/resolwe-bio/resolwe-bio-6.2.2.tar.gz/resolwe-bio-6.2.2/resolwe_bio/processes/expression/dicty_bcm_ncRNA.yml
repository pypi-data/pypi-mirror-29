# ========================
# Expression - BCM - ncRNA
# ========================
---

- slug: expression-bcm-ncrna
  name: Expression ncRNA (BCM)
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/legacy:latest
  data_name: "{{ alignment.bam.file|basename|default('?') }}"
  version: 1.1.4
  type: data:expression:ncrna
  category: analyses
  flow_collection: sample
  persistence: CACHED
  description: >
    Compute gene expression profile for ncRNA experiments. Developed by Bioinformatics Laboratory, Faculty of Computer and Information Science,
    University of Ljubljana, Slovenia and Shaulsky Lab, Department of Molecular and Human Genetics, Baylor College of
    Medicine, Houston, TX, USA.
  input:
    - name: alignment
      label: Aligned sequence
      type: data:alignment:bam
    - name: gff
      label: Features (GFF3)
      type: data:annotation:gff3
    - name: mappable
      label: Mappability
      type: data:mappability:bcm
    - name: stranded
      label: Strand-specific library
      type: basic:boolean
      default: false
  output:
    - name: exp
      label: Expression (RPKUM ncRNA)
      type: basic:file
      description: Non chrR reads scaled by uniquely mappable part of exons.
    - name: rpkm
      label: Expression (RPKM ncRNA)
      type: basic:file
      description: Non chrR reads scaled by exon length.
    - name: rc
      label: Read counts
      type: basic:file
      description: Reads uniquely mapped to gene exons.
    - name: exp_json
      label: Expression (RPKUM ncRNA) (json)
      type: basic:json
    - name: exp_type
      label: Expression Type (default output)
      type: basic:string
    - name: source
      label: Gene ID source
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      function compute_coverage {
        xtabcoverage.py --tab {{ proc.data_dir }}"/"{{ proc.data_id }}"/${1}" --tab-coverage-col 1 --gff3 {{ gff.gff.file }} > tmp.bedgraph
        bedGraphToBigWig tmp.bedgraph chrom.sizes "${1}.bw"
        rm tmp.bedgraph
      }

      re-save exp_type 'RPKUM ncRNA'

      echo "XEXPRESSION..."
      xexpression.py {{ gff.gff.file }} {{ alignment.bam.file }} --rc --rpkm --rpkum {{mappable.mappability.file}} --ncrna {% if stranded %} --stranded {% endif %}
      re-checkrc "Expression analysis failed"
      re-progress 0.5

      samtools idxstats {{ alignment.bam.file }} | cut -f -2 | head -n -1 > chrom.sizes
      re-checkrc

      if [ -f {{ proc.data_dir }}"/"{{ proc.data_id }}"/expression_rc.tab.gz" ]
      then
        compute_coverage "expression_rc.tab.gz"
        re-checkrc "Computing coverage failed"
        re-save-file rc expression_rc.tab.gz expression_rc.tab.gz.bw
      fi
      if [ -f {{ proc.data_dir }}"/"{{ proc.data_id }}"/expression_rpkm.tab.gz" ]
      then
        compute_coverage "expression_rpkm.tab.gz"
        re-checkrc "Computing coverage failed"
        re-save-file rpkm expression_rpkm.tab.gz expression_rpkm.tab.gz.bw
      fi
      if [ -f {{ proc.data_dir }}"/"{{ proc.data_id }}"/expression_rpkum.tab.gz" ]
      then
        compute_coverage "expression_rpkum.tab.gz"
        re-checkrc "Computing coverage failed"
        expression2storage.py "expression_rpkum.tab.gz"
        re-checkrc "Saving to JSON storage failed"
        re-save-file exp expression_rpkum.tab.gz expression_rpkum.tab.gz.bw
      fi
      re-save source {{gff.source}}
