Metadata-Version: 1.1
Name: python-storyboardclient
Version: 0.1.0
Summary: Python Client library for StoryBoard
Home-page: http://www.openstack.org/
Author: OpenStack
Author-email: openstack-dev@lists.openstack.org
License: UNKNOWN
Description-Content-Type: UNKNOWN
Description: =======================
        python-storyboardclient
        =======================
        
        Python Client library for StoryBoard
        
        * Free software: Apache license
        * Documentation: http://docs.openstack.org/infra/storyboard/
        * Source: http://git.openstack.org/cgit/openstack-infra/python-storyboardclient
        * Bugs: https://storyboard.openstack.org/#!/project/755
        
        Features
        --------
        
        * TODO
        
        Notes
        -----
        
        This is the StoryBoard python client! It lets you interact with
        StoryBoard from the comfort of your own terminal! There is no
        command to run this; instead you can import it into scripts. This
        lets you perform complex actions on things in StoryBoard, eg: add an
        helpful comment on all stories with 'cannot store contact information'
        in the description, pointing users at the relevant docs, but only
        if there is no comment to this effect already. (There is an example
        of such a script in :doc:`usage`)
        
        Some sample commands are given in usage.rst. In general, most
        resources (ie: stories, tasks, projects, and so on)
        have a ``get_all()`` and ``get()`` method. The latter takes
        the resource's id as a parameter, thought it can also take
        other attributes (eg: tag name).
        
        To create a new resource, use the ``create()`` method. The
        necessary parameters depend on the resource, and if not
        documented, can be worked out from the relevant .py
        file in the code for the StoryBoard API.
        
        The ``update()`` method will update mutable fields of the resource (again,
        these vary depending on the resource).
        
        Finally, ``delete()`` will delete things.
        
        Happy task-tracking!
        
        
Platform: UNKNOWN
Classifier: Environment :: OpenStack
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
