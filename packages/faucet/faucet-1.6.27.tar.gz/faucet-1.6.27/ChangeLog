CHANGES
=======

1.6.27
------

* PIP typo
* Version bump
* pip claims setuptools not installed, when install request is on same command line as ryu. Make ryu a seperate install command
* Preversion 1.6.27

1.6.26
------

* Pre-install Ryu in base-test image
* Version bump
* Test coldstart safety with BGP
* Clarify BGP limitations even further
* New pytype throws pyi-error for os
* pytype
* Switch from getopt to argparse
* \_set\_port\_status()
* discovered\_ports
* Synchronize Prometheus port state with DP at connect time
* Revert "Update sphinx from 1.7.0 to 1.7.1"
* Update sphinx from 1.7.0 to 1.7.1
* Test suite and documentation fixes
* Parse FAUCET LLDP messages
* Parse LLDP helper
* Add LLDP receiving TODOs
* Enable logging of LLDP
* Need to disable LLDP receiving incrementally
* Incremental support for receiving LLDP
* faucet\_dp\_mac
* Move LACP match to VLAN table
* We need to handle packets without a VLAN tag (control plane traffic)
* Revert "Move LACP match to VLAN table."
* Move LACP match to VLAN table
* LACP/LLDP packets should use separately configurable MAC rather than native VLAN's
* Move default FAUCET\_MAC to valve\_packet.py
* Encode DPID in LLDP packets
* Stack ACL test needs to be single, because uses static port
* ACL stack test needs to trigger learning
* Don't need to verify no error deconfiguring addresses for switch interfaces
* bcast\_blocked should fail with one try if we see a packet
* Stacking broadcast tests should retry as necessary
* Don't learn hosts with broadcast destinations from stacking port
* Flood manager needs eth\_src table
* Add Ethernet broadcast tests
* Log L3 dst address also when learning. Test broadcast connectivity when stacking
* OVS switch interfaces should not have any IP config
* Rate limit update\_metrics() only on packet in, not in background
* Revert "MaxPorts tests both need update metric rate 0."
* MaxPorts tests both need update metric rate 0
* Still cannot 1Hz update yet
* 1Hz updates except for ban test
* Install dsniff
* Revert "Rate limit metric updates to 1Hz by default."
* Make Prom scraper more efficient
* Rate limit metric updates to 1Hz by default
* reduce pps for learning test to avoid kernel load
* kernel ARP processing on many macvlans overloads test environment
* Disable IPv6 on L2 scaling test (kernel overload)
* Add hook to allow simplification of host interfaces
* Use common sysctls for tests
* Need to handle ReadTimeout
* Update Ryu to 4.23
* Simplify scrape Prometheus
* splitlines()
* Server side limit export of prometheus variables
* Disable dump\_packet\_counters()
* update NoviFlow docs to have larger tables for test automation
* Remove final dump\_counters, increase scale again to 4096
* Reduce L2 to 2048 because Travis cannot handle more
* Increase metric update interval to 3s
* Need to break from L2 when non power of 2
* Reduce L2 to 3072 (need to select correct max if not power of 2)
* Increase L2 scale to 4096
* Make update metrics rate limiter configurable
* Reduce L2 scale from 4096 to 3072
* Rate limit counter updates to 0.5Hz
* Need to relax L2 disagree retry
* Rate limit metric updates to 1Hz
* Increase L2 scale test to 4096
* Make learned\_macs updates less expensive
* resolve\_ports()
* Adding stacked ACL reachability test
* resolve\_port\_numbers()
* Enable multi-port output ACL actions
* Stack tests need OVS\_TYPE
* Attempt flood ping after meter applied
* Default to kernel based OVS unless using meters
* OVS 2.9.0 supports meters, so test them and switch to netdev based bridges to get access to them
* Documentation cleanup for output dict
* Only call update\_metrics() for ports that were updated
* With lots of hosts, learned\_macs and counters can be temporarily desynchronized while being updated
* Add prometheus rule for creating instance\_dpid:ignored\_packet\_ins:rate1m
* Preversion 1.6.26

1.6.25
------

* Update version
* Better explain vlan\_neighbors variable
* Workaround stale netns
* dps -> dp
* Dead nexthop cache entries need to be expired
* total\_port\_vlan\_hosts\_count doesn't account for stacking
* Make faucet\_bgp cold/warm/start safe
* Revert "Remove vlan total hosts/by port count run time check."
* add\_cache\_host() didn't handle existing entry on different port
* Remove vlan total hosts/by port count run time check
* Revert mesh tests
* Runtime consistency checks for learning metrics
* Don't verify learn counters in mesh test yet
* HostCacheEntry incorrectly used cache\_time in key
* verify learn counters in IPv4 and 6 routing meshes
* Helper to verify learning counters
* Explicitly decode of\_dp\_desc\_stats labels as UTF8
* bgp handler should use keys for DP ID and VLAN
* diagnostic changes for faucet\_bgp (and re-enable bgp\_connect\_mode paramater)
* Correct default for Gauge Prometheus address
* Default Gauge Prometheus address
* Preversion 1.6.25

1.6.24
------

* Build faucet-event-adapter-rabbitmq-pi on pi build cluster
* Need to rollback coldstart check for BGP as well, because with faucet\_bgp rollback, it's not safe again
* Roll back faucet\_bgp due to https://github.com/faucetsdn/faucet/issues/1706
* Use PromGauge, not Gauge
* Rename test thread param
* Need to use threads when testing
* Remove confusing PromGauge reference
* Configure IPv4 BGP peers first
* Add TODO to make MAC table updates less expensive
* Add TODO to rate limit update\_metrics() calls
* Revert "Don't call update\_metrics() at all on packet in."
* Delete FaucetUntaggedBGPIPv46RouteTest
* Allow config of BGP config mode
* Fix log handler
