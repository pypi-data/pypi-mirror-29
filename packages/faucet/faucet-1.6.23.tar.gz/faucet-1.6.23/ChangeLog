CHANGES
=======

1.6.23
------

* Bump versions
* Improve performance of resolver with inverse index of routing table (gateways to destinations), and fix incorrect type for IPv6 NA IP address
* Incremental add/del route wrappers for VLANs
* Incremental implementation take #2 for routing table
* sanity restore
* routes -> routing\_table
* Revert "Move ip\_gw lists to RoutingTable."
* Revert "prefixlen."
* Revert "Routing table reference."
* Revert "pylint."
* pylint
* Routing table reference
* prefixlen
* Move ip\_gw lists to RoutingTable
* routes -> routing\_table
* Incremental implementation of IP routing table
* Add TODO for FIB rate limiting
* Reduce default packet in rate limit. rate
* Move packet in rate limiter to earliest possible point in handler chain
* Reduce number of times L3 headers are parsed
* Add counter for ignored packet ins
* Add test for oferror
* Sphinx 1.7 changes how main arguments are parsed
* pylint
* Should use extend
* pytype
* pylint
* Move OFError handler and send\_flows() to Valve implementation (and more efficient recent flow queue)
* Remove couchdb from architecture diagram
* Remove more CouchDB dependencies
* remove more couchdb dependencies
* Remove support for CouchDB
* Comments for flow\_timeout()
* Configure switch not to send us flow removed messages if not needed (default case)
* Test coverage to 76%
* Test IPv6 NA
* Test coverage for IPv6 FIB route
* Add test for ARP reply from host
* Test case for ICMPv6 RAs
* Can't use ofp.OFPP\_LOCAL as a test interface
* couple minor changes:
* use delete\_strict in Valve.lacp\_up()
* LACP intercept length should be longer
* Use common signal\_handler/start
* Common event should be in valve\_ryuapp
* Use common base signal handler
* Use same config\_stat method
* Gauge can use ConfigWatcher()
* Use common ConfigWatcher implementation
* Pre-version

1.6.22
------

* Fix ln -s for pre-commit
* Update version
* Revert "Upgrade DPDK to 18.02."
* Upgrade DPDK to 18.02
* Docs for ACL mirror action
* TODOs
* Put faucet pipeline config in own file
* Use common start/stop watchers
* Start watchers
* Add start/stop watcher helpers
* Switch from coveralls to codecov
* Revert "Faucet and Gauge can use same signal handler."
* Revert "RyuAppBase."
* RyuAppBase
* Faucet and Gauge can use same signal handler
* Still a list
* Still incorrect watchers iterator
* Watchers is a dict itself
* Revert "enumerate order."
* enumerate order
* Gauge should hang up on unknown DPs
* Increase min test coverage
* Add coverage for add/del route
* Test coverage for add/del route
* Test coverage for datapath disconnect
* Test coverage for learn FIB route from packet
* Provide initial configuration for pyup
* Increase min coverage
* MirrorACL test case fix
* Test coverage for TFM
* Only call learn\_hosts() where necessary
* pylint
* Remove unnecessary test attributes
* Reorganize Valve tests to base class without tests
* Re-enable pytype
* pytype
* pytype
* pytype
* Revert test\_valve.py change to base class
* Revert pytype
* Revert "Revert "pytype.""
* Disable pytype to investigate coverage decrease
* Revert "pytype."
* pytype
* pytype
* Revert "pytype."
* pytype
* Pre-version v1.6.21

1.6.21
------

* Release v1.6.21
* appease 2to3
* Add --display-labels option to fctl
* Exclude base class from testing
* pylint
* Test LLDP results in packet outs
* Remove unused matches
* Remove unneeded ryuapp variables
* Move common initializers to valve\_ryuapp.py
* Miss call to self.get\_setting()
* Setting needs to be upper
* Move get\_setting() method to valve\_ryuapp.py
* Revert "Move more common features to valve\_ryuapp.py."
* Revert "Move common logging/setting parsing to valve\_ryuapp."
* Move common logging/setting parsing to valve\_ryuapp
* Move more common features to valve\_ryuapp.py
* Use common RyuApp class
* Test request\_reload\_config()
* Increase test coverage for valves manager loads\_configs()
* Add testing for valve managers load\_configs()
* Move hard to test code out of faucet.py
* reload\_config() doesn't need to return cold start flag
* Add coveralls.io badge
* Increase minimum test coverage
* Increase test coverage for fctl
* Reparse args for testability
* Test new\_valve()
* pylint
* Add test coverage for main
* Increase minimum test coverage
* Don't have to hardcode astroid
* Test coverage for fctl
* pytype found corner case with no resolver flows
* New pytype workaround
* Prevsion 1.6.21

1.6.20
------

* Revert "Test new\_valve()."
* Version bump for release
* Test config file change detection
* Test new\_valve()
* Test parse\_configs()
* Move new\_valve to valves manager
* pylint
* Fix ofdescstats handler
* Increase minimum unit test coverage
* Use port state helper
* Add port state decoder
* Move ofdescstats\_handler to valve
* Move more un-unit testable code out of faucet.py
* Test valve packet in
* More test coverage for valves manager
* Need to give callable to valves manager so can send flows to DP by ID
* Initial coverage for valves manager
* faucet.py no longer needs config hashes
* Move config change stat to valves\_manager
* BGP gets metrics as initializer
* Incremental move of BGP to valves manager
* Incremental move of update\_metrics to valves\_manager
* Incremental move faucet.py state to valves\_manager
* Add ValvesManager class (incremental change)
* Ryu 4.22
* Need to reset nexthop retries if we get more packets for long-term dead nexthop
* Clarify ACL change detection
* Test other valves which may not be stacked
* Verify stacking flooding
* Clarify flooding test messages further
* Clarify messages from flooding test
* Run docker pull explicitly to avoid Travis timeout
* Increase test coverage handling packet in
* pylint
* Move pkt\_meta parsing to valve
* Test handling of unknown port number
* Check port number is known for port status handling messages
* Use common mirroring actions implementation
* Fix port name reference in interface mirroring
* Simplify use of resolve\_port()
* dp ref
* Consider only other stacked values
* Updated configuration docs with new config changes
* Fixed controller crash on using port names instead of number
* Updated documentation to include PKI Setup
* Resolves issue #1547. Mirror interface supports more than one port. Modified config to allow single mirror port and list. Added unit tests to check multi port mirroring
* Learn test tuning
* Increase minimum coverage
* Force initialization of test stack
* Update minimum code coverage threshold
* Coverage for update\_config\_metrics
* Add valve\_flood coverage
* pylint
* Sanity check stacking
* Test coverage for mirroring
* More adaptive timeout for Learn test. Add coverage for Prometheus config variables
* pytype for check\_faucet\_config.py
* Add coverage for ofchannel\_log
* Quiten test\_check\_config.py
* Add test coverage for check\_faucet\_config
* Fix Learn test
* Add coverage for valve\_flowreorder()
* git hook path
* pre-commit update
* pre-commit update
* Doc changes to recommend pre-commit hook
* Fail int tests if code coverage drops below minimum
* Test ping unknown neighbor
* Add route for which gateway unresolvable
* Test run of event notifier
* Test LLDP beacon
* Fix unclosed file warning
* Sanity test TFM parser
* Test GenericTFM
* Add support for lists of acls\_in
* Reduce Learn test pace slightly (unrealistically low latency)

1.6.19
------

* Re-install blackhole FIB routes periodically
* Bump versions for release
* Clean up documentation on installing and running faucet
* Test stack and non stack DPs
* Allow Prometheus variables to be tested
* Move test suite onto new faucet start script
* Moves documentation and sample scripts to new faucet start script
* Move VM documentation to Sphinx
* Fix config parsing for meters
* Noviflow docs: icmpv6 match moved to table 6 instead of 3
* avoid hardcoded port in FaucetDeleteConfigReloadTest
* Test opstatus\_reconf
* Add port level config item opstatus\_reconf, default True. If False, the pipeline is not reconfigured if operational state of the port changes
* push up base and python3 images for docker-compose
* Event server should reject multiple clients, and also keep only most recent N events when the queue is full
* All hosts must have nonzero eth\_dst counters
* Add retries for flow tables in Prometheus
* Add test for Prometheus flow logging
* Add unit tests for gauge config
* dps shouldn't be a required key for gauge.yaml #1441
* Reduce dimensions for Prometheus flow table logging
* Prometheus/Influx now logs DP ID
* Initial implementation of Prometheus flow table counters
* Incremental implementation of flow table counters for Prometheus
* map old OF match names to new
* Update faucet\_mininet\_test\_base.py
* Update faucet\_mininet\_test\_base.py
* Update faucet\_mininet\_test\_base.py
* Need to translate back to old matches for Ryu ofctl
* Remove old style unsupported tp\_dst match
* Add flow counters for Gauge Prometheus
* Drop support for old style OF1.0 matches (nw\_src, nw\_dst et al)
* Run more unit tests in pre-commit hook
* Pre-version 1.6.15

1.6.14
------

* Release faucet 1.6.14
* pylint
* Better check for bad include format and fix errors
* Fix typo
* Fix #1414
* Fix #1412
* Fix #1415
* Fix #1410 and #1411
* Fix #1409 and #1408
* Fix #1407 and #1406
* Fix #1405 and #1401
* Fix #1404
* Fix #1403
* Fix #1402
* Fix #1398
* Fix #1400
* Fix #1399
* Update docker documentation
* Add note that only one client is supported
* Allocate new port if iperf client or server fail to start
* typo
* Explicitly set iperf client IP
* Revert "Revert "Add routing IPv6 routing test address by loopback interface.""
* Revert "Add routing IPv6 routing test address by loopback interface."
* Add routing IPv6 routing test address by loopback interface
* TODO to fix IPv6 test host addresses for consistent ND
* Revert "IPv6 routing tests can fail occasionally because we don't find the FAUCET VIP in the IPv6 neighbor table."
* IPv6 routing tests can fail occasionally because we don't find the FAUCET VIP in the IPv6 neighbor table. This is because the source address of the neighbor discovery request was not predictable and FAUCET might not reply to it
* FaucetConfigReloadAclTest should verify port 4 can't be learned as well
* FaucetConfigReloadAclTest less redundant
* FaucetConfigReloadAclTest can fail due to hosts learned check before Prometheus updated
* FaucetConfigReloadAclTest might expire a host under load
* Remove logs every controller start attempt, log prom output from both FAUCET and Gauge automatically
* More thorough check that FAUCET is listening on Prometheus port
* Check controller health again after test start/switch connection
* Revert "Temporarily add .fuzz to enable deletion of orphan repo on Dockerhub."
* Temporarily add .fuzz to enable deletion of orphan repo on Dockerhub
* Remove exception logs before restarting test
* New pylint catches missing returns
* workaround pylint bug
* Put default for FAUCET\_EVENT\_SOCK in get\_setting()
* Fix console command
* Fix acl
* Rebase
* Add fuzz testing for faucet packet handling\
* Move gnmi dockerfile into the gnmi directory
* Update pi builder script to build new base images
* adjust entrypoint permissions; add group
* add /var/run/faucet
* add in from @gizmoguy
* lock pytype to a commit that works
* docs should clarify usage is an env for docker run
* fixing requested changes
* rework dockerfiles using su-exec in a base image
* put sudo back
* extra dependencies, ovs lock requires root
* set ipv6 conf
* simplify build time for tests
* build the base-tests along with the tests
* switch Dockerfiles mostly to non-root; fixes #1391
* remove section that is no longer accurate
* update DPDK to 17.11
* Preversion 1.6.14

1.6.13
------

* Release 1.6.13
* Add link to Poseidon tutorial
* Clean up pydoc strings
* Fix error logging
* Add additional sanity checking over state of event socket\_path
* Add docker flag for starting with ipv6 enabled
* Switch to using napoleon for generating code documentation
* Add descriptions of faucet/gauge
* Fix Sphinx build warnings
* Optimized config-fuzzer and related files
* Make documentation more consistent
* Fixed markup error
* Fix formating of ASCII diagram
* Faucet Testing with OVS on hardware
* Tidy documentation
* Exclude README.rst from Sphinx build
* move configuration documentation from source files to an rst file
* fix build warnings
* Add documentation of config to Conf object source files
* Revert "Try https://blog.travis-ci.com/2017-12-01-new-update-schedule-for-linux-build-images."
* Try https://blog.travis-ci.com/2017-12-01-new-update-schedule-for-linux-build-images
* FAUCET\_EVENT\_SOCK can be a bool (default path) or an explicit path
* Add missing dependencies required for installing python libraries
* Check event\_sock actually needed
* hotfix changing FAUCET\_EVENT\_SOCK to a bool
* fix formatting for md -> rst
* minimize exposure of /var/run; md -> rst;
* adds a rabbitmq adapter to get events from the socket
* Revert "Add another shard."
* Add another shard
* incorrect pylint import warning
* STAT\_RELOAD environment variable not explicitly set, so can be left over from previous test in the environment
* Refactor tag/var parser for flow table dumps to common function
* Run unit tests as pre-commit check
* Event logging tested in int. tests
* event logging tested in int. tests
* pylint
* Fix event log test to wait for all messages
* Verify event\_ids sent all arrived
* Need metrics
* Add event\_id counter
* Explicitly check event queue if empty
* Reset test event socket always on test setUp()
* add FAUCET\_EVENT\_SOCK to compose files
* Add error message if event socket not created
* Update faucet\_experimental\_event.py
* mkstemp() is for amateurs
* event sock can be too long
* Experimental event notification
* Init event notification socket
* Initial events
* max\_resolve\_backoff\_time duplicated
* String tests had multiple DP sections
* pytype
* Check for duplicate YAML keys
* Check dp\_conf is a dict
* add dockerfile for ARM prometheus 2.0
* ARM prometheus 2.0 isn't ready yet, roll back to older version
* Fix up some bad faucet.rules.yml paths for prometheus 2.0 upgrade
* Preversion 1.6.11
* Revert "Shard on route/non routing tests."

1.6.10
------

* Use docker test image
* Break/fix
* make env vars consistent; add stat env var
* Make checkout quiet
* Don't need "-b"
* Build Pi fix
* Build script for Pi on Pi
* Remove test for unknown router VLAN (need alternate test for global VLAN undefined)
* Don't route on a DP, if not all VLANs configured on that DP
* fix environment variables for db and admin user
* add release target; closes #767
* OVS 2.8.1 connections to controller unstable under heavy load. Will continue to troubleshoot
* More relaxed OVS connect time to reduce test load
* When cold starting dataplane, reset the host cache to cause routes etc to be re-resolved
* fix extra / typo
* add compose file for rpi
* Re-attempt OVS upgrade to 2.8.1
