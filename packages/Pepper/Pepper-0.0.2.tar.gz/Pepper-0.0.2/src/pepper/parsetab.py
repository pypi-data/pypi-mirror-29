
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "IDENTIFIER NEWLINE OTHER PREPROCESSING_NUMBER PUNCTUATOR STRING_LITERAL WHITESPACE LONG_COMMENT SYSTEM_INCLUDE_LITERAL PREPROCESSING_KEYWORD_INCLUDE PREPROCESSING_KEYWORD_DEFINE PREPROCESSING_KEYWORD_IFDEF PREPROCESSING_KEYWORD_IFNDEF PREPROCESSING_KEYWORD_ENDIF PREPROCESSING_KEYWORD_ELSE PREPROCESSING_KEYWORD_IF PREPROCESSING_KEYWORD_PY\n    program : lines statement\n    \n    lines :\n    \n    lines : lines line\n    \n    line : statement NEWLINE\n    \n    statement : pepper_directive\n    \n    statement : code_expressions\n    \n    pepper_directive : preprocessor_expression\n    \n    preprocessor_expression : include_expression\n                            | define_expression\n                            | ifdef_expression\n                            | ifndef_expression\n                            | endif_expression\n                            | else_expression\n    \n    ifdef_expression : PREPROCESSING_KEYWORD_IFDEF WHITESPACE IDENTIFIER\n    \n    ifndef_expression : PREPROCESSING_KEYWORD_IFNDEF WHITESPACE IDENTIFIER\n    \n    else_expression : PREPROCESSING_KEYWORD_ELSE\n    \n    endif_expression : PREPROCESSING_KEYWORD_ENDIF\n    \n    define_expression : PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER\n    \n    define_expression : PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER WHITESPACE macro_expansion\n    \n    define_expression : PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER '(' identifier_list ')'  WHITESPACE macro_expansion\n    \n    identifier_list : IDENTIFIER\n    \n    identifier_list :\n    \n    identifier_list : identifier_list ',' maybe_space IDENTIFIER\n    \n    maybe_space :\n    \n    maybe_space : WHITESPACE\n    \n    include_expression : include_expression_file\n                       | include_expression_system\n    \n    macro_expansion : code_expressions\n    \n    include_expression_file : PREPROCESSING_KEYWORD_INCLUDE WHITESPACE STRING_LITERAL\n    \n    include_expression_system : PREPROCESSING_KEYWORD_INCLUDE WHITESPACE SYSTEM_INCLUDE_LITERAL\n    \n    code_expressions :\n    \n    code_expressions : code_expressions code_expression\n    \n    safe_code_expression : IDENTIFIER code_expression_parenthetical\n    \n    code_expression : safe_code_expression\n    \n    safe_code_expression : IDENTIFIER\n    \n    code_expression_parenthetical : '(' list_of_expressions ')'\n    \n    safe_code_expression : WHITESPACE\n    \n    safe_code_expression : STRING_LITERAL\n    \n    list_of_expressions : safe_code_expressions\n    \n    list_of_expressions :\n    \n    list_of_expressions : list_of_expressions ',' maybe_space safe_code_expressions\n    \n    safe_code_expressions :\n    \n    safe_code_expressions : safe_code_expressions safe_code_expression\n    \n    safe_code_expression : '<'\n              | '>'\n              | '+'\n              | '-'\n              | '%'\n              | '^'\n              | '&'\n              | '*'\n              | '{'\n              | '}'\n              | '['\n              | ']'\n              | '='\n              | ';'\n              | ':'\n              | '#'\n              | '.'\n              | '?'\n    \n    code_expression :\n              | ','\n              | '('\n              | ')'\n    \n    safe_code_expression : PREPROCESSING_NUMBER\n    "
    
_lr_action_items = {'PREPROCESSING_KEYWORD_DEFINE':([0,2,4,22,],[-2,16,-3,-4,]),'PREPROCESSING_KEYWORD_IFDEF':([0,2,4,22,],[-2,17,-3,-4,]),'PREPROCESSING_KEYWORD_IFNDEF':([0,2,4,22,],[-2,18,-3,-4,]),'PREPROCESSING_KEYWORD_ENDIF':([0,2,4,22,],[-2,19,-3,-4,]),'PREPROCESSING_KEYWORD_ELSE':([0,2,4,22,],[-2,20,-3,-4,]),'PREPROCESSING_KEYWORD_INCLUDE':([0,2,4,22,],[-2,21,-3,-4,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,57,58,59,60,63,65,68,69,77,79,],[-2,-31,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-26,-27,-17,-16,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-18,-14,-15,-29,-30,-31,-36,-19,-28,-31,-20,]),',':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,61,62,63,64,65,66,67,69,70,71,72,73,76,77,80,],[-2,-31,-3,25,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-40,66,-39,-31,-22,-36,-24,-43,25,-21,75,-42,-25,-41,-31,-23,]),'(':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,63,65,69,77,],[-2,-31,-3,26,-4,-32,-34,-63,-64,-65,55,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,64,-31,-36,26,-31,]),')':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,61,62,63,64,65,66,67,69,70,71,72,73,76,77,80,],[-2,-31,-3,27,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-40,65,-39,-31,-22,-36,-24,-43,27,-21,74,-42,-25,-41,-31,-23,]),'IDENTIFIER':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,62,63,64,65,66,67,69,72,73,75,76,77,78,],[-2,-31,-3,28,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,56,57,58,-33,-42,28,-31,70,-36,-24,-43,28,-42,-25,-24,28,-31,80,]),'WHITESPACE':([0,2,4,6,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,56,62,63,65,66,67,69,72,73,74,75,76,77,],[-2,-31,-3,29,50,51,52,53,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,63,29,-31,-36,73,-43,29,-42,-25,77,73,29,-31,]),'STRING_LITERAL':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,30,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,59,-33,-42,30,-31,-36,-24,-43,30,-42,-25,30,-31,]),'<':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,31,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,31,-31,-36,-24,-43,31,-42,-25,31,-31,]),'>':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,32,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,32,-31,-36,-24,-43,32,-42,-25,32,-31,]),'+':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,33,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,33,-31,-36,-24,-43,33,-42,-25,33,-31,]),'-':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,34,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,34,-31,-36,-24,-43,34,-42,-25,34,-31,]),'%':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,35,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,35,-31,-36,-24,-43,35,-42,-25,35,-31,]),'^':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,36,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,36,-31,-36,-24,-43,36,-42,-25,36,-31,]),'&':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,37,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,37,-31,-36,-24,-43,37,-42,-25,37,-31,]),'*':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,38,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,38,-31,-36,-24,-43,38,-42,-25,38,-31,]),'{':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,39,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,39,-31,-36,-24,-43,39,-42,-25,39,-31,]),'}':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,40,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,40,-31,-36,-24,-43,40,-42,-25,40,-31,]),'[':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,41,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,41,-31,-36,-24,-43,41,-42,-25,41,-31,]),']':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,42,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,42,-31,-36,-24,-43,42,-42,-25,42,-31,]),'=':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,43,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,43,-31,-36,-24,-43,43,-42,-25,43,-31,]),';':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,44,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,44,-31,-36,-24,-43,44,-42,-25,44,-31,]),':':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,45,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,45,-31,-36,-24,-43,45,-42,-25,45,-31,]),'#':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,46,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,46,-31,-36,-24,-43,46,-42,-25,46,-31,]),'.':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,47,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,47,-31,-36,-24,-43,47,-42,-25,47,-31,]),'?':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,48,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,48,-31,-36,-24,-43,48,-42,-25,48,-31,]),'PREPROCESSING_NUMBER':([0,2,4,6,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,62,63,65,66,67,69,72,73,76,77,],[-2,-31,-3,49,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-42,49,-31,-36,-24,-43,49,-42,-25,49,-31,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,56,57,58,59,60,63,65,68,69,77,79,],[-2,0,-31,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-26,-27,-17,-16,-4,-32,-34,-63,-64,-65,-35,-37,-38,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-66,-33,-18,-14,-15,-29,-30,-31,-36,-19,-28,-31,-20,]),'SYSTEM_INCLUDE_LITERAL':([53,],[60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'lines':([0,],[2,]),'statement':([2,],[3,]),'line':([2,],[4,]),'pepper_directive':([2,],[5,]),'code_expressions':([2,63,77,],[6,69,69,]),'preprocessor_expression':([2,],[7,]),'include_expression':([2,],[8,]),'define_expression':([2,],[9,]),'ifdef_expression':([2,],[10,]),'ifndef_expression':([2,],[11,]),'endif_expression':([2,],[12,]),'else_expression':([2,],[13,]),'include_expression_file':([2,],[14,]),'include_expression_system':([2,],[15,]),'code_expression':([6,69,],[23,23,]),'safe_code_expression':([6,62,69,76,],[24,67,24,67,]),'code_expression_parenthetical':([28,],[54,]),'list_of_expressions':([55,],[61,]),'safe_code_expressions':([55,72,],[62,76,]),'macro_expansion':([63,77,],[68,79,]),'identifier_list':([64,],[71,]),'maybe_space':([66,75,],[72,78,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> lines statement','program',2,'p_program','parser.py',26),
  ('lines -> <empty>','lines',0,'p_statements_empty','parser.py',34),
  ('lines -> lines line','lines',2,'p_lines_nonempty','parser.py',41),
  ('line -> statement NEWLINE','line',2,'p_line_to_statement','parser.py',49),
  ('statement -> pepper_directive','statement',1,'p_statement_to_pepper_directive','parser.py',56),
  ('statement -> code_expressions','statement',1,'p_statement_to_code_expression','parser.py',63),
  ('pepper_directive -> preprocessor_expression','pepper_directive',1,'p_pepper_directive','parser.py',70),
  ('preprocessor_expression -> include_expression','preprocessor_expression',1,'p_include_expression','parser.py',77),
  ('preprocessor_expression -> define_expression','preprocessor_expression',1,'p_include_expression','parser.py',78),
  ('preprocessor_expression -> ifdef_expression','preprocessor_expression',1,'p_include_expression','parser.py',79),
  ('preprocessor_expression -> ifndef_expression','preprocessor_expression',1,'p_include_expression','parser.py',80),
  ('preprocessor_expression -> endif_expression','preprocessor_expression',1,'p_include_expression','parser.py',81),
  ('preprocessor_expression -> else_expression','preprocessor_expression',1,'p_include_expression','parser.py',82),
  ('ifdef_expression -> PREPROCESSING_KEYWORD_IFDEF WHITESPACE IDENTIFIER','ifdef_expression',3,'p_ifdef_expression','parser.py',89),
  ('ifndef_expression -> PREPROCESSING_KEYWORD_IFNDEF WHITESPACE IDENTIFIER','ifndef_expression',3,'p_ifndef_expression','parser.py',101),
  ('else_expression -> PREPROCESSING_KEYWORD_ELSE','else_expression',1,'p_else_expression','parser.py',113),
  ('endif_expression -> PREPROCESSING_KEYWORD_ENDIF','endif_expression',1,'p_endif_expression','parser.py',121),
  ('define_expression -> PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER','define_expression',3,'p_define_expression_no_expansion','parser.py',129),
  ('define_expression -> PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER WHITESPACE macro_expansion','define_expression',5,'p_define_expression_no_args','parser.py',136),
  ('define_expression -> PREPROCESSING_KEYWORD_DEFINE WHITESPACE IDENTIFIER ( identifier_list ) WHITESPACE macro_expansion','define_expression',8,'p_define_expression_some_args','parser.py',143),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list_singleton','parser.py',150),
  ('identifier_list -> <empty>','identifier_list',0,'p_identifier_list_empty','parser.py',157),
  ('identifier_list -> identifier_list , maybe_space IDENTIFIER','identifier_list',4,'p_identifier_list_multiple','parser.py',164),
  ('maybe_space -> <empty>','maybe_space',0,'p_maybe_whitespace_none','parser.py',172),
  ('maybe_space -> WHITESPACE','maybe_space',1,'p_maybe_whitespace_some','parser.py',179),
  ('include_expression -> include_expression_file','include_expression',1,'p_include_expression_disambiguation','parser.py',186),
  ('include_expression -> include_expression_system','include_expression',1,'p_include_expression_disambiguation','parser.py',187),
  ('macro_expansion -> code_expressions','macro_expansion',1,'p_define_expansion','parser.py',194),
  ('include_expression_file -> PREPROCESSING_KEYWORD_INCLUDE WHITESPACE STRING_LITERAL','include_expression_file',3,'p_include_expression_file','parser.py',201),
  ('include_expression_system -> PREPROCESSING_KEYWORD_INCLUDE WHITESPACE SYSTEM_INCLUDE_LITERAL','include_expression_system',3,'p_include_expression_system','parser.py',208),
  ('code_expressions -> <empty>','code_expressions',0,'p_expressions_empty','parser.py',215),
  ('code_expressions -> code_expressions code_expression','code_expressions',2,'p_expressions','parser.py',222),
  ('safe_code_expression -> IDENTIFIER code_expression_parenthetical','safe_code_expression',2,'p_identifier_call','parser.py',230),
  ('code_expression -> safe_code_expression','code_expression',1,'p_code_expression_to_safe','parser.py',237),
  ('safe_code_expression -> IDENTIFIER','safe_code_expression',1,'p_statement_to_identifier','parser.py',244),
  ('code_expression_parenthetical -> ( list_of_expressions )','code_expression_parenthetical',3,'p_expression_to_list_of_something','parser.py',251),
  ('safe_code_expression -> WHITESPACE','safe_code_expression',1,'p_whitespace_unsafe','parser.py',258),
  ('safe_code_expression -> STRING_LITERAL','safe_code_expression',1,'p_expression_to_string_lit','parser.py',265),
  ('list_of_expressions -> safe_code_expressions','list_of_expressions',1,'p_expression_list_singleton','parser.py',273),
  ('list_of_expressions -> <empty>','list_of_expressions',0,'p_expression_list_empty','parser.py',280),
  ('list_of_expressions -> list_of_expressions , maybe_space safe_code_expressions','list_of_expressions',4,'p_expression_list_multiple','parser.py',287),
  ('safe_code_expressions -> <empty>','safe_code_expressions',0,'p_safe_expressions_empty','parser.py',296),
  ('safe_code_expressions -> safe_code_expressions safe_code_expression','safe_code_expressions',2,'p_safe_expressions','parser.py',303),
  ('safe_code_expression -> <','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',311),
  ('safe_code_expression -> >','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',312),
  ('safe_code_expression -> +','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',313),
  ('safe_code_expression -> -','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',314),
  ('safe_code_expression -> %','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',315),
  ('safe_code_expression -> ^','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',316),
  ('safe_code_expression -> &','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',317),
  ('safe_code_expression -> *','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',318),
  ('safe_code_expression -> {','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',319),
  ('safe_code_expression -> }','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',320),
  ('safe_code_expression -> [','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',321),
  ('safe_code_expression -> ]','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',322),
  ('safe_code_expression -> =','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',323),
  ('safe_code_expression -> ;','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',324),
  ('safe_code_expression -> :','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',325),
  ('safe_code_expression -> #','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',326),
  ('safe_code_expression -> .','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',327),
  ('safe_code_expression -> ?','safe_code_expression',1,'p_safe_code_expressions_ascii_literal','parser.py',328),
  ('code_expression -> <empty>','code_expression',0,'p_statement_to_ascii_literal','parser.py',335),
  ('code_expression -> ,','code_expression',1,'p_statement_to_ascii_literal','parser.py',336),
  ('code_expression -> (','code_expression',1,'p_statement_to_ascii_literal','parser.py',337),
  ('code_expression -> )','code_expression',1,'p_statement_to_ascii_literal','parser.py',338),
  ('safe_code_expression -> PREPROCESSING_NUMBER','safe_code_expression',1,'p_statement_to_preprocessing_number','parser.py',345),
]
