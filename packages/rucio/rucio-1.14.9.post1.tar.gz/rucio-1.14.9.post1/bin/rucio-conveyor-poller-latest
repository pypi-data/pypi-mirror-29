#!/usr/bin/env python
# Copyright European Organization for Nuclear Research (CERN)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Authors:
# - Vincent Garonne, <vincent.garonne@cern.ch>, 2012
# - Mario Lassnig, <mario.lassnig@cern.ch>, 2013-2015
# - Wen Guan, <wen.guan@cern.ch>, 2014-2015

"""
Conveyor is a daemon to manage file transfers.
"""

import argparse
import signal

from rucio.daemons.conveyor.poller_latest import run, stop

if __name__ == "__main__":

    signal.signal(signal.SIGTERM, stop)

    parser = argparse.ArgumentParser()
    parser.add_argument("--run-once", action="store_true", default=False,
                        help='One iteration only')
    parser.add_argument("--total-threads", action="store", default=1, type=int,
                        help='Concurrency control: total number of threads per process')
    parser.add_argument("--last-nhours", action="store", default=1, type=int,
                        help='Poll control: poll FTS jobs in last n hours with given state in "latest" mode')
    parser.add_argument("--fts-wait", action="store", default=1800, type=int,
                        help='Poll control: wait seconds to poll FTS server in "latest" mode')
    parser.add_argument("--external-hosts", nargs='+', type=str,
                        help='Poll control: List of FTS hosts')
    args = parser.parse_args()

    try:
        run(once=args.run_once,
            last_nhours=args.last_nhours,
            fts_wait=args.fts_wait,
            total_threads=args.total_threads,
            external_hosts=args.external_hosts)
    except KeyboardInterrupt:
        stop()
