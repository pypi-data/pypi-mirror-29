CHANGES
=======

* Revert "Try to get bumpversion on travis side"
* Try to get bumpversion on travis side
* Update setup info for pypi
* Extend OSP detection script Add OSP13 detection
* Push on all builds
* Bump version: 0.1.2 â†’ 0.1.3
* Attempt to have travis to push version to pypi automatically on tags
* Update install methods
* [plugins][openstack][cinder] check nas\_secure\_file\_\* options
* Missed DRIVER==
* [plugins][openstack][cinder] check nas\_secure\_file\_\* options
* Update setup.cfg for pypi upload
* [citellus][pacemaker] Checks if the maintenance mode is enabled
* Adjust indent
* [citellus][plugin][cpu] Detect high cpu usage
* [plugins][openstack][rabbitmq] Check if ipv6 is disabled via sysctl
* Remove counter as it comes in py2.7+
* update URL for getting preview and not html source
* Provide some sample json from a host and showcase UI from there
* Datahook unfailchronyd was sometimes populating wrong data into actual results
* Detect unconfigured hugepages that might cause problems with instance launch
* Improve some docstrings
* [plugins][openstack][rabbitmq] queues with no consumers but msgs
* Adjust text so that it shows as 'Profiles' in WebUI
* Implement profiles for grouping plugins
* Always run in smart mode
* Always write results (to copy html if needed
* Not force run unless --run is used
* Force copy of HTML file when magui json output is requested
* Fix some complains from validation software
* Implement rerun of plugins modified on disk only
* Add initial logrotate check
* Relocate standard ceph checks to ceph folder instead of being inside OSP
* [citellus][plugins][nova] Misleading name and description
* Only run test when running on host with controller role (galera)
* Fix shell for invocation on travis-ci
* Symlink plugins to root folder for easy viewing
* Add link to plugin folder and update old plugins
* Fix leak to stdout
* Some minor correctos to presentation
* [plugins][core][system][megaraid]
* [plugins][core][system] Check if net.ifnames=0 is being used
* Detect possible Navicli timeouts on execution in cinder
* We do expect to work on strings, so integer was causing failure
* [plugins][core][system] Check PERC RAID / Megaraid resets Chek if system had a PERC RAID / Megaraid reset
* [plugins][core][system] Check packet drops because ip/nf\_conntrack tables are full
* Remove wording about future fix, as after discussion seems not viable in the way we store it now
* Update readme
* Update changelog with recent changes
* Perform Smart rerun of results to only add new plugins
* Update doc on faraday bundles
* Use the new plugin name metadata
* Implement faraday Bundles by having path with comma separated values
* Refresh citellus.html when updating citellus.json if already existing
* [citellus][horizon] Add check for missing WSGIApplicationGroup in logs
* Adds extra check for running only on controllers
* Run only on controller
* Include branding in metadata
* Adding a dropdown for json selection v2
* Fix leaks to stdout
* Add UT for testing json files from citellus in tests/jsons folder for incorrect behavior like 'out' with text
* [citellus][faraday] Add policies consistency check
* Fixes accessing nova.conf which is missing
* [plugins][openshift][etcd] check etcd certificates
* Fix filtering when saving to json for the meantime
* Do fix Magui and plugins after citellus moved to dict
* Return 'result' for each plugin instead of 'results' with corresponding html change
* Grepping for either intel\_iommu or iommu for intel sriov
* Include metadata in magui execution and reuse citellus function to write to disk
* Implements UT for testing no tests are missing 'exit'
* Replaces 'echo' -> 'exit' for $RC\_ codes
* Fix returncode for InstanceHA
* Fix path
* Report InstanceHA in use in environment
* Check docker high mem usage
* Move to use results based on dictionary
* Report isolated\_metadata\_not\_set
* Do report non running nova-compute
* Uses randomizer for docitellus codes for OKAY, FAILED, SKIPPED
* Fix scripts which outputed to stdout
* UT for testing that no plugin writes to stdout to catch programming errors
* Do not output to stdout
* Output to stderr in tainted kernel
* Data Hooks for masking data or process them before final output
* Fix on nova field to grab which was faulty and sort output
* Detect dead OVS agents
* Attempt to guess the system role
* [citellus][plugins] Fix if conditions from [ to [[
* Basefolder should only be calculated when having output folder or not running live
* remove path
* Update documentation and add a screenshoot
* According to help, when we specify savepath is the name of the json to use (-o ), so we should not append 'citellus.json' to it
* Fix HTML copy when savepath is defined
* Optimize the way we find the number of tokens
* Create test for tainted kernel
* Add initial changelog draft
* Adding dates to traceback.sh
* Tailing the last 10 dates because the rest is mostly noise
* Adding dates to RPC issues detected
* Change the filtering to be performed on the reporting level
