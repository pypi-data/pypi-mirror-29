[{"comment": "Halstead volume of 12140.5910919", "location": {"function": null, "line": null, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "halstead_volume_above_8000"}, {"comment": "Halstead Bugs of 4.0468636973", "location": {"function": null, "line": null, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "halstead_bugs_above_2"}, {"comment": "safety_controller.hpp:53:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 53, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:54:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 54, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:55:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 55, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:56:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 56, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:57:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 57, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:58:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 58, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:59:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 59, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 62, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 76, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:77:  public: should be indented +1 space inside class SafetyController  [whitespace/indent] [3]", "location": {"function": null, "line": 77, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "safety_controller.hpp:78:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh  [runtime/references] [2]", "location": {"function": null, "line": 78, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "safety_controller.hpp:78:  Is this a non-const reference? If so, make const or use a pointer: std::string& name  [runtime/references] [2]", "location": {"function": null, "line": 78, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "safety_controller.hpp:89:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]", "location": {"function": null, "line": 89, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_end_line"}, {"comment": "safety_controller.hpp:91:  You don't need a ; after a }  [readability/braces] [4]", "location": {"function": null, "line": 91, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:redundant_empty_statement"}, {"comment": "safety_controller.hpp:92:  You don't need a ; after a }  [readability/braces] [4]", "location": {"function": null, "line": 92, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:redundant_empty_statement"}, {"comment": "safety_controller.hpp:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 99, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:100:  Should have a space between // and comment  [whitespace/comments] [4]", "location": {"function": null, "line": 100, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comment_text"}, {"comment": "safety_controller.hpp:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 102, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:103:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 103, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 104, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:105:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 105, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:106:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 106, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:107:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 107, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:108:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 108, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:109:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 109, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:110:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 110, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:119:  private: should be indented +1 space inside class SafetyController  [whitespace/indent] [3]", "location": {"function": null, "line": 119, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "safety_controller.hpp:123:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 123, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:132:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 132, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:177:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 177, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:179:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 179, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:182:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 182, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:183:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 183, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:189:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 189, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:191:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 191, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:194:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 194, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:195:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 195, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:201:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 201, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:203:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 203, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:207:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 207, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:208:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 208, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:209:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 209, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:210:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 210, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:213:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 213, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:213:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 213, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:214:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 214, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:215:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 215, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:217:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 217, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:218:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 218, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:219:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 219, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:220:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 220, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:226:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 226, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:228:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 228, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:232:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 232, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:233:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 233, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:234:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 234, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:235:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 235, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:238:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 238, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:238:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 238, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:239:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 239, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:240:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 240, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:242:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 242, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:243:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 243, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:244:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 244, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:245:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 245, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:250:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 250, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:251:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 251, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:253:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 253, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:256:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 256, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:260:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 260, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:260:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 260, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 261, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:266:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 266, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:266:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 266, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:267:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 267, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:270:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 270, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:274:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 274, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:274:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 274, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:275:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 275, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:280:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 280, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:281:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 281, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:287:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 287, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:296:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 296, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:300:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 300, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:302:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 302, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:304:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 304, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:314:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 314, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:315:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 315, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:325:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 325, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:326:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 326, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:337:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 337, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:338:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 338, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:349:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 349, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:349:  Should have a space between // and comment  [whitespace/comments] [4]", "location": {"function": null, "line": 349, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comment_text"}, {"comment": "safety_controller.hpp:350:  Line ends in whitespace.  Consider deleting these extra spaces.  [whitespace/end_of_line] [4]", "location": {"function": null, "line": 350, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_end_line"}, {"comment": "safety_controller.hpp:350:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 350, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "safety_controller.hpp:350:  If an else has a brace on one side, it should have it on both  [readability/braces] [5]", "location": {"function": null, "line": 350, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_braces"}, {"comment": "safety_controller.hpp:351:  Tab found; better to use spaces  [whitespace/tab] [1]", "location": {"function": null, "line": 351, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:two_space_indent"}, {"comment": "safety_controller.hpp:351:  when starting a new scope, { should be on a line by itself  [whitespace/braces] [4]", "location": {"function": null, "line": 351, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_brace_line"}, {"comment": "safety_controller.hpp:357:  Small and focused functions are preferred: SafetyController::spin() has 53 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]", "location": {"function": "SafetyController::spin()", "line": 357, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "max_function_length_40"}, {"comment": "safety_controller.hpp:357:  Small and focused functions are preferred: SafetyController::spin() has 53 non-comment lines (error triggered by exceeding 50 lines).  [readability/fn_size] [5]", "location": {"function": "SafetyController::spin()", "line": 357, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "max_eloc_50"}, {"comment": "safety_controller.hpp:357:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 357, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "function with cyclomatic complexity 12", "location": {"function": "kobuki::SafetyController::spin", "line": 299, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "max_cyclomatic_complexity_10"}, {"comment": "Function length of 54", "location": {"function": "kobuki::SafetyController::spin", "line": 299, "class": null, "file": "include/kobuki_safety_controller/safety_controller.hpp", "package": "kobuki_safety_controller"}, "rule": "max_function_length_40"}, {"comment": "nodelet.cpp:45:  Include \"ecl/threads/thread.hpp\" not in alphabetical order  [build/include_alpha] [4]", "location": {"function": null, "line": 45, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "nodelet.cpp:50:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 50, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 53, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:54:  public: should be indented +1 space inside class SafetyControllerNodelet  [whitespace/indent] [3]", "location": {"function": null, "line": 54, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "nodelet.cpp:55:  You don't need a ; after a }  [readability/braces] [4]", "location": {"function": null, "line": 55, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:redundant_empty_statement"}, {"comment": "nodelet.cpp:57:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 57, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:63:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 63, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 72, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:73:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 73, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "nodelet.cpp:77:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 77, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "nodelet.cpp:78:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 78, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:79:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 79, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "nodelet.cpp:82:  private: should be indented +1 space inside class SafetyControllerNodelet  [whitespace/indent] [3]", "location": {"function": null, "line": 82, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "nodelet.cpp:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 84, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:86:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 86, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "nodelet.cpp:87:  Extra space for operator !   [whitespace/operators] [4]", "location": {"function": null, "line": 87, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_unary_op"}, {"comment": "nodelet.cpp:88:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 88, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:99:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 99, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "nodelet.cpp:66:  Add #include <string> for string  [build/include_what_you_use] [4]", "location": {"function": null, "line": 66, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cpplint_plugin:include_what_you_use"}, {"comment": "Found implementation defined integer type.", "location": {"function": null, "line": 67, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "The function 'onInit' is never used.", "location": {"function": null, "line": 62, "class": null, "file": "src/nodelet.cpp", "package": "kobuki_safety_controller"}, "rule": "cppcheck_plugin:unusedFunction"}]