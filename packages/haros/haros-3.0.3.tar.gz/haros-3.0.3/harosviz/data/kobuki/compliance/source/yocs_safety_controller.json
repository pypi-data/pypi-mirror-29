[{"comment": "safety_controller.hpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "location": {"function": null, "line": 0, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "safety_controller.hpp:14:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 14, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:15:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 15, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:16:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 16, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:17:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 17, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:18:  Found C system header after C++ system header. Should be: safety_controller.h, c system, c++ system, other.  [build/include_order] [4]", "location": {"function": null, "line": 18, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_order"}, {"comment": "safety_controller.hpp:21:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 21, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:36:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 36, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "safety_controller.hpp:37:  public: should be indented +1 space inside class SafetyController  [whitespace/indent] [3]", "location": {"function": null, "line": 37, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "safety_controller.hpp:38:  Is this a non-const reference? If so, make const or use a pointer: ros::NodeHandle& nh_priv  [runtime/references] [2]", "location": {"function": null, "line": 38, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "safety_controller.hpp:38:  Is this a non-const reference? If so, make const or use a pointer: std::string& name  [runtime/references] [2]", "location": {"function": null, "line": 38, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:non_const_ref"}, {"comment": "safety_controller.hpp:39:  You don't need a ; after a }  [readability/braces] [4]", "location": {"function": null, "line": 39, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:redundant_empty_statement"}, {"comment": "safety_controller.hpp:52:  private: should be indented +1 space inside class SafetyController  [whitespace/indent] [3]", "location": {"function": null, "line": 52, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "safety_controller.hpp:55:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 55, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "safety_controller.hpp:57:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 57, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:108:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 108, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "safety_controller.hpp:110:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 110, "class": null, "file": "include/yocs_safety_controller/safety_controller.hpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "nodelet.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "location": {"function": null, "line": 0, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "nodelet.cpp:13:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 13, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:16:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 16, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:17:  public: should be indented +1 space inside class SafetyControllerNodelet  [whitespace/indent] [3]", "location": {"function": null, "line": 17, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "nodelet.cpp:18:  You don't need a ; after a }  [readability/braces] [4]", "location": {"function": null, "line": 18, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:redundant_empty_statement"}, {"comment": "nodelet.cpp:20:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 20, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:26:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 26, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:35:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 35, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:36:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 36, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "nodelet.cpp:40:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 40, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "nodelet.cpp:41:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 41, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:42:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 42, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "nodelet.cpp:45:  private: should be indented +1 space inside class SafetyControllerNodelet  [whitespace/indent] [3]", "location": {"function": null, "line": 45, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "nodelet.cpp:47:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 47, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:49:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 49, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "nodelet.cpp:50:  Extra space for operator !   [whitespace/operators] [4]", "location": {"function": null, "line": 50, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_unary_op"}, {"comment": "nodelet.cpp:51:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 51, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "nodelet.cpp:62:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 62, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "nodelet.cpp:29:  Add #include <string> for string  [build/include_what_you_use] [4]", "location": {"function": null, "line": 29, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_what_you_use"}, {"comment": "Found implementation defined integer type.", "location": {"function": null, "line": 30, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "The function 'onInit' is never used.", "location": {"function": null, "line": 25, "class": null, "file": "src/nodelet.cpp", "package": "yocs_safety_controller"}, "rule": "cppcheck_plugin:unusedFunction"}, {"comment": "library.cpp:0:  No copyright message found.  You should have a line: \"Copyright [year] <Copyright Owner>\"  [legal/copyright] [5]", "location": {"function": null, "line": 0, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:no_copyright"}, {"comment": "library.cpp:10:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 10, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:12:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 12, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:27:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 27, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:29:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 29, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:30:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 30, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:34:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 34, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:36:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 36, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:37:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 37, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:41:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 41, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:42:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 42, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:50:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 50, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:51:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 51, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:52:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 52, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:53:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 53, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 58, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 60, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:63:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 63, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "library.cpp:64:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 64, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 70, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:72:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 72, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:75:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 75, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "library.cpp:76:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 76, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:82:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 82, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:84:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 84, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:86:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 86, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "library.cpp:86:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 86, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "library.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 87, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:95:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 95, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:97:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 97, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:99:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 99, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:102:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 102, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "library.cpp:103:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 103, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:115:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 115, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:else_line"}, {"comment": "library.cpp:116:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 116, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:118:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 118, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:132:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 132, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "library.cpp:141:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 141, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "library.cpp:12:  Add #include <string> for string  [build/include_what_you_use] [4]", "location": {"function": null, "line": 12, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "cpplint_plugin:include_what_you_use"}, {"comment": "Function length of 42", "location": {"function": "yocs_safety_controller::SafetyController::spinOnce", "line": 94, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "max_function_length_40"}, {"comment": "MI of 55.8257766283", "location": {"function": null, "line": null, "class": null, "file": "src/library.cpp", "package": "yocs_safety_controller"}, "rule": "mi_below_65"}]