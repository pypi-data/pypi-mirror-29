[{"comment": "Query found: RosPrimitiveCall(cmd_vel, ~, geometry_msgs/Twist) in kobuki_keyop (depth 0)\nReported in kobuki_keyop", "location": {"function": null, "line": null, "class": null, "file": null, "package": "kobuki_keyop"}, "rule": "user:advertise_queue_1"}, {"comment": "Query found: RosPrimitiveCall(motor_power, ~, kobuki_msgs/MotorPower) in kobuki_keyop (depth 0)\nReported in kobuki_keyop", "location": {"function": null, "line": null, "class": null, "file": null, "package": "kobuki_keyop"}, "rule": "user:advertise_queue_1"}, {"comment": "keyop_core.hpp:49:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 49, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "keyop_core.hpp:50:  Include \"ecl/threads.hpp\" not in alphabetical order  [build/include_alpha] [4]", "location": {"function": null, "line": 50, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:include_order"}, {"comment": "keyop_core.hpp:53:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 53, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "keyop_core.hpp:60:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 60, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.hpp:70:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 70, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.hpp:71:  public: should be indented +1 space inside class KeyOpCore  [whitespace/indent] [3]", "location": {"function": null, "line": 71, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "keyop_core.hpp:84:  private: should be indented +1 space inside class KeyOpCore  [whitespace/indent] [3]", "location": {"function": null, "line": 84, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:indent_access_mod"}, {"comment": "keyop_core.hpp:123:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 123, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "keyop_core.hpp:96:  Add #include <string> for string  [build/include_what_you_use] [4]", "location": {"function": null, "line": 96, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:include_what_you_use"}, {"comment": "Found implementation defined integer type.", "location": {"function": null, "line": 118, "class": null, "file": "include/keyop_core/keyop_core.hpp", "package": "kobuki_keyop"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Halstead volume of 14555.8033173", "location": {"function": null, "line": null, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "halstead_volume_above_8000"}, {"comment": "Halstead Bugs of 4.85193443908", "location": {"function": null, "line": null, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "halstead_bugs_above_2"}, {"comment": "keyop_core.cpp:42:  Include \"ecl/time.hpp\" not in alphabetical order  [build/include_alpha] [4]", "location": {"function": null, "line": 42, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:include_order"}, {"comment": "keyop_core.cpp:43:  Include \"ecl/exceptions.hpp\" not in alphabetical order  [build/include_alpha] [4]", "location": {"function": null, "line": 43, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:include_order"}, {"comment": "keyop_core.cpp:45:  Include \"kobuki_msgs/MotorPower.h\" not in alphabetical order  [build/include_alpha] [4]", "location": {"function": null, "line": 45, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:include_order"}, {"comment": "keyop_core.cpp:53:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 53, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:62:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 62, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:62:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 62, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "keyop_core.cpp:74:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 74, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:75:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 75, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:75:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 75, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "keyop_core.cpp:79:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 79, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:87:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 87, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:101:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 101, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:102:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 102, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:103:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 103, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:104:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 104, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:109:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 109, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:115:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 115, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:131:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 131, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:138:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 138, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:140:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 140, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:145:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 145, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:149:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 149, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:150:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 150, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:153:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 153, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:157:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 157, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:166:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 166, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:170:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 170, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:171:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 171, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:182:  Small and focused functions are preferred: KeyOpCore::init() has 71 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]", "location": {"function": "KeyOpCore::init()", "line": 182, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_function_length_40"}, {"comment": "keyop_core.cpp:182:  Small and focused functions are preferred: KeyOpCore::init() has 71 non-comment lines (error triggered by exceeding 50 lines).  [readability/fn_size] [5]", "location": {"function": "KeyOpCore::init()", "line": 182, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_eloc_50"}, {"comment": "keyop_core.cpp:182:  Small and focused functions are preferred: KeyOpCore::init() has 71 non-comment lines (error triggered by exceeding 70 lines).  [readability/fn_size] [5]", "location": {"function": "KeyOpCore::init()", "line": 182, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_eloc_70"}, {"comment": "keyop_core.cpp:194:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 194, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:198:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 198, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:200:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 200, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:201:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 201, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:202:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 202, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:206:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 206, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:207:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 207, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:216:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 216, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:219:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 219, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:220:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 220, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:239:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 239, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:259:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 259, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:261:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 261, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:273:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 273, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:283:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 283, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:292:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 292, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:338:  Small and focused functions are preferred: KeyOpCore::processKeyboardInput() has 48 non-comment lines (error triggered by exceeding 40 lines).  [readability/fn_size] [5]", "location": {"function": "KeyOpCore::processKeyboardInput()", "line": 338, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_function_length_40"}, {"comment": "keyop_core.cpp:352:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 352, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:359:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 359, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:360:  Lines should be <= 80 characters long  [whitespace/line_length] [2]", "location": {"function": null, "line": 360, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:366:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 366, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:367:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 367, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:379:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 379, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:387:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 387, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:394:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 394, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:395:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 395, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:404:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 404, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:406:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 406, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:408:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 408, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:411:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 411, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:413:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 413, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:414:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 414, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:423:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 423, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:425:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 425, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:427:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 427, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:430:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 430, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:432:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 432, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:433:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 433, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:442:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 442, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:444:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 444, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:446:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 446, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:449:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 449, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:451:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 451, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:452:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 452, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:461:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 461, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:463:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 463, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:465:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 465, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:468:  Lines should very rarely be longer than 100 characters  [whitespace/line_length] [4]", "location": {"function": null, "line": 468, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:max_line_length_80"}, {"comment": "keyop_core.cpp:470:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 470, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:471:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 471, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:477:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 477, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:479:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 479, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:484:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 484, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "keyop_core.cpp:485:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 485, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "keyop_core.cpp:490:  At least two spaces is best between code and comments  [whitespace/comments] [2]", "location": {"function": null, "line": 490, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:whitespace_before_comments"}, {"comment": "Found implementation defined integer type.", "location": {"function": null, "line": 135, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "cppcheck_plugin:harosIntegerTypes"}, {"comment": "Function length of 73", "location": {"function": "keyop_core::KeyOpCore::init", "line": 86, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_function_length_40"}, {"comment": "function with cyclomatic complexity 11", "location": {"function": "keyop_core::KeyOpCore::spin", "line": 193, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_cyclomatic_complexity_10"}, {"comment": "Function length of 50", "location": {"function": "keyop_core::KeyOpCore::processKeyboardInput", "line": 282, "class": null, "file": "src/keyop_core.cpp", "package": "kobuki_keyop"}, "rule": "max_function_length_40"}, {"comment": "main.cpp:54:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 54, "class": null, "file": "src/main.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "main.cpp:58:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 58, "class": null, "file": "src/main.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "main.cpp:61:  An else should appear on the same line as the preceding }  [whitespace/newline] [4]", "location": {"function": null, "line": 61, "class": null, "file": "src/main.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:else_line"}, {"comment": "main.cpp:62:  { should almost always be at the end of the previous line  [whitespace/braces] [4]", "location": {"function": null, "line": 62, "class": null, "file": "src/main.cpp", "package": "kobuki_keyop"}, "rule": "cpplint_plugin:opening_curly_brace"}, {"comment": "Found implementation defined integer type.", "location": {"function": null, "line": 53, "class": null, "file": "src/main.cpp", "package": "kobuki_keyop"}, "rule": "cppcheck_plugin:harosIntegerTypes"}]