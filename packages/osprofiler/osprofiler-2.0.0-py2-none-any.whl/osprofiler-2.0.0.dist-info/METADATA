Metadata-Version: 2.0
Name: osprofiler
Version: 2.0.0
Summary: OpenStack Profiler Library
Home-page: https://docs.openstack.org/osprofiler/latest/
Author: OpenStack
Author-email: openstack-dev@lists.openstack.org
License: UNKNOWN
Description-Content-Type: UNKNOWN
Platform: UNKNOWN
Classifier: Environment :: OpenStack
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: six (>=1.9.0)
Requires-Dist: oslo.utils (>=3.16.0)
Requires-Dist: WebOb (>=1.6.0)
Requires-Dist: requests (>=2.10.0)
Requires-Dist: netaddr (!=0.7.16,>=0.7.13)
Requires-Dist: oslo.concurrency (>=3.8.0)
Requires-Dist: oslo.serialization (!=2.19.1,>=2.18.0)
Requires-Dist: PrettyTable (<0.8,>=0.7.1)
Provides-Extra: oslo_config
Requires-Dist: oslo.config (>=3.2.0); extra == 'oslo_config'

========================
Team and repository tags
========================

.. image:: https://governance.openstack.org/tc/badges/osprofiler.svg
    :target: https://governance.openstack.org/tc/reference/tags/index.html

.. Change things from this point on

===========================================================
 OSProfiler -- Library for cross-project profiling library
===========================================================

.. image:: https://img.shields.io/pypi/v/osprofiler.svg
    :target: https://pypi.python.org/pypi/osprofiler/
    :alt: Latest Version

.. image:: https://img.shields.io/pypi/dm/osprofiler.svg
    :target: https://pypi.python.org/pypi/osprofiler/
    :alt: Downloads

OSProfiler provides a tiny but powerful library that is used by
most (soon to be all) OpenStack projects and their python clients. It
provides functionality to be able to generate 1 trace per request, that goes
through all involved services. This trace can then be extracted and used
to build a tree of calls which can be quite handy for a variety of
reasons (for example in isolating cross-project performance issues).

* Free software: Apache license
* Documentation: https://docs.openstack.org/osprofiler/latest/
* Source: https://git.openstack.org/cgit/openstack/osprofiler
* Bugs: https://bugs.launchpad.net/osprofiler



