# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from ava_engine.ava import api_engine_detect_pb2 as ava__engine_dot_ava_dot_api__engine__detect__pb2
from ava_engine.ava import api_engine_get_detect_pb2 as ava__engine_dot_ava_dot_api__engine__get__detect__pb2
from ava_engine.ava import api_engine_ping_pb2 as ava__engine_dot_ava_dot_api__engine__ping__pb2


class EngineApiDefStub(object):
  """This is the encapsulating service storing all API calls to the underlying engine process.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Ping = channel.unary_unary(
        '/ava_engine.EngineApiDef/Ping',
        request_serializer=ava__engine_dot_ava_dot_api__engine__ping__pb2.PingRequest.SerializeToString,
        response_deserializer=ava__engine_dot_ava_dot_api__engine__ping__pb2.PingResponse.FromString,
        )
    self.Detect = channel.unary_unary(
        '/ava_engine.EngineApiDef/Detect',
        request_serializer=ava__engine_dot_ava_dot_api__engine__detect__pb2.DetectRequest.SerializeToString,
        response_deserializer=ava__engine_dot_ava_dot_api__engine__detect__pb2.DetectResponse.FromString,
        )
    self.GetDetect = channel.unary_unary(
        '/ava_engine.EngineApiDef/GetDetect',
        request_serializer=ava__engine_dot_ava_dot_api__engine__get__detect__pb2.GetDetectRequest.SerializeToString,
        response_deserializer=ava__engine_dot_ava_dot_api__engine__get__detect__pb2.GetDetectResponse.FromString,
        )


class EngineApiDefServicer(object):
  """This is the encapsulating service storing all API calls to the underlying engine process.
  """

  def Ping(self, request, context):
    """Pings the EngineApi, essentially performing a health check.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Detect(self, request, context):
    """Performs detection/classification on a set of image bytes.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDetect(self, request, context):
    """Using the id from a previous Detect call, get the results.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EngineApiDefServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=ava__engine_dot_ava_dot_api__engine__ping__pb2.PingRequest.FromString,
          response_serializer=ava__engine_dot_ava_dot_api__engine__ping__pb2.PingResponse.SerializeToString,
      ),
      'Detect': grpc.unary_unary_rpc_method_handler(
          servicer.Detect,
          request_deserializer=ava__engine_dot_ava_dot_api__engine__detect__pb2.DetectRequest.FromString,
          response_serializer=ava__engine_dot_ava_dot_api__engine__detect__pb2.DetectResponse.SerializeToString,
      ),
      'GetDetect': grpc.unary_unary_rpc_method_handler(
          servicer.GetDetect,
          request_deserializer=ava__engine_dot_ava_dot_api__engine__get__detect__pb2.GetDetectRequest.FromString,
          response_serializer=ava__engine_dot_ava_dot_api__engine__get__detect__pb2.GetDetectResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ava_engine.EngineApiDef', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
