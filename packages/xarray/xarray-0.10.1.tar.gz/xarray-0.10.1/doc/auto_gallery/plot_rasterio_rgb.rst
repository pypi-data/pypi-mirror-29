

.. _sphx_glr_auto_gallery_plot_rasterio_rgb.py:


.. _recipes.rasterio_rgb:

============================
imshow() and map projections
============================

Using rasterio's projection information for more accurate plots.

This example extends :ref:`recipes.rasterio` and plots the image in the
original map projection instead of relying on pcolormesh and a map
transformation.




.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/shoyer/miniconda3/envs/xarray-py36/lib/python3.6/site-packages/sphinx_gallery/gen_rst.py", line 450, in execute_code_block
        exec(code_block, example_globals)
      File "<string>", line 5, in <module>
    ModuleNotFoundError: No module named 'cartopy'





.. code-block:: python


    import os
    import urllib.request
    import xarray as xr
    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt

    # Download the file from rasterio's repository
    url = 'https://github.com/mapbox/rasterio/raw/master/tests/data/RGB.byte.tif'
    urllib.request.urlretrieve(url, 'RGB.byte.tif')

    # Read the data
    da = xr.open_rasterio('RGB.byte.tif')

    # The data is in UTM projection. We have to set it manually until
    # https://github.com/SciTools/cartopy/issues/813 is implemented
    crs = ccrs.UTM('18N')

    # Plot on a map
    ax = plt.subplot(projection=crs)
    da.plot.imshow(ax=ax, rgb='band', transform=crs)
    ax.coastlines('10m', color='r')
    plt.show()

    # Delete the file
    os.remove('RGB.byte.tif')

**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_rasterio_rgb.py <plot_rasterio_rgb.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_rasterio_rgb.ipynb <plot_rasterio_rgb.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
