# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright 2015-2018 by Exopy Authors, see AUTHORS for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# -----------------------------------------------------------------------------
"""View of the LoopTask configurer.

"""
from __future__ import (division, unicode_literals, print_function,
                        absolute_import)

from enaml.widgets.api import (Container, MultilineField, Field, GroupBox,
                               Form, Label, CheckBox)
from enaml.core.api import Conditional, Include
from enaml.layout.api import hbox, vbox

from ..widgets.browsing import TaskSelector
from .base_config_views import BaseConfigView


enamldef LoopConfigView(BaseConfigView): view:
    """View for the LoopTaskConfig.

    Another config view can be embedded when use_subtask is checked.

    """

    constraints << ([vbox(hbox(name_label, name_field, sub), default)]
                    if not config.use_subtask else
                    [vbox(hbox(name_label, name_field, sub), desc,
                          hbox(selector, *conf.objects))])

    CheckBox: sub:
        text = 'Use subtask'
        checked := config.use_subtask
        checked ::
            if change['value'] and selector.selected_task:
                config.subtask = selector.selected_task
                conf.objects = [config.subview]
            else:
                conf.objects = []

    MultilineField: default:
        visible << not config.use_subtask
        text = config.task_doc

    Label: desc:
        visible << config.use_subtask
        text = config.task_doc
    TaskSelector: selector:
        visible << config.use_subtask
        hug_width = 'strong'
        manager = config.manager
        display_filters = False
        selected_filter = 'Loopable'
        selected_task >> config.subtask
    Include: conf:
        objects << ([config.subview] if config.use_subtask and config.subview
                    else [])