Metadata-Version: 1.2
Name: discord.aio
Version: 0.2.0
Summary: discord.aio is an asynchronous Discord API wrapper for asyncio and python
Home-page: https://github.com/Ryozuki/discord.aio
Author: Ryozuki
Author-email: contact@ryobyte.com
License: MIT
Description-Content-Type: UNKNOWN
Description: discord.aio
        ===========
        
        |PyPI version| |Python version| |Module status| |License| |Discord|
        
            discord.aio is an asynchronous Discord API wrapper
        
        *Currently under very early development*
        
        Python 3.6+ only.
        
        Read this readme with a cool theme here:
        `ryozuki.github.io/discord.aio/ <https://ryozuki.github.io/discord.aio/>`__
        
        Documentation
        -------------
        
        You can find the module documentation here:
        `documentation <https://ryozuki.github.io/discord.aio/docs>`__
        
        Installation
        ------------
        
        With pip:
        ~~~~~~~~~
        
        -  ``pip3 install discord.aio``
        
        From source:
        ~~~~~~~~~~~~
        
        -  ``git clone https://github.com/Ryozuki/discord.aio && cd discord.aio && pip3 install .``
        
        Local development
        -----------------
        
        -  ``git clone https://github.com/Ryozuki/discord.aio``
        -  ``cd discord.aio && pip3 install -e .``
        
        Example bot
        -----------
        
        .. code:: python
        
            import os
            import logging
            from discordaio import DiscordBot
        
            logging.basicConfig(
                level='DEBUG', format='%(asctime)s - %(name)s - %(levelname)s: %(message)s')
            logger = logging.getLogger('my_lovely_bot')
        
            if __name__ == '__main__':
                TOKEN = os.environ['PYDISCORD_TEST_TOKEN']
        
                bot = DiscordBot(TOKEN)
        
                @bot.event()
                async def on_ready():
                    logger.info('Connected!')
                    logger.info(f'My username is {bot.user}')
                
                @bot.event('on_message') # You can also use a custom function name.
                async def foo_bar(message):
                    logger.info(f'{message.author}: {message.content}')
        
        `Here <https://github.com/Ryozuki/discord.aio/blob/master/examples/bot.py>`__
        you can find a more extensive example.
        
        You can also check the
        `documentation <https://ryozuki.github.io/discord.aio/docs>`__ for
        detailed explanation on how the module works.
        
        TODO
        ----
        
        -  `Add compression
           support <https://discordapp.com/developers/docs/topics/gateway#encoding-and-compression>`__
        -  `Add bot shards
           support <https://discordapp.com/developers/docs/topics/gateway#get-gateway-bot>`__
        -  Handle ISO8601 timestamp
        
        .. |PyPI version| image:: https://img.shields.io/pypi/v/discord.aio.svg
           :target: https://pypi.python.org/pypi/discord.aio
        .. |Python version| image:: https://img.shields.io/pypi/pyversions/discord.aio.svg
           :target: https://github.com/Ryozuki/discord.aio
        .. |Module status| image:: https://img.shields.io/pypi/status/discord.aio.svg
           :target: https://github.com/Ryozuki/discord.aio
        .. |License| image:: https://img.shields.io/pypi/l/discord.aio.svg
           :target: https://github.com/Ryozuki/discord.aio/blob/master/LICENSE.txt
        .. |Discord| image:: https://img.shields.io/discord/416878158436892672.svg
           :target: https://discord.gg/hJ7ewAT
        
Keywords: discord,wrapper,api,bot,asyncio
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Utilities
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.6
