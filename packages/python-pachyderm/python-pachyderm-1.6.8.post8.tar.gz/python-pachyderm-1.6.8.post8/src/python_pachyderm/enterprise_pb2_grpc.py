# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import enterprise_pb2 as enterprise__pb2


class APIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Activate = channel.unary_unary(
        '/enterprise.API/Activate',
        request_serializer=enterprise__pb2.ActivateRequest.SerializeToString,
        response_deserializer=enterprise__pb2.ActivateResponse.FromString,
        )
    self.GetState = channel.unary_unary(
        '/enterprise.API/GetState',
        request_serializer=enterprise__pb2.GetStateRequest.SerializeToString,
        response_deserializer=enterprise__pb2.GetStateResponse.FromString,
        )


class APIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Activate(self, request, context):
    """Provide a Pachyderm enterprise token, enabling Pachyderm enterprise
    features, such as the Pachyderm Dashboard and Auth system
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Activate': grpc.unary_unary_rpc_method_handler(
          servicer.Activate,
          request_deserializer=enterprise__pb2.ActivateRequest.FromString,
          response_serializer=enterprise__pb2.ActivateResponse.SerializeToString,
      ),
      'GetState': grpc.unary_unary_rpc_method_handler(
          servicer.GetState,
          request_deserializer=enterprise__pb2.GetStateRequest.FromString,
          response_serializer=enterprise__pb2.GetStateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'enterprise.API', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
