var namespaceforpy =
[
    [ "threading", "namespaceforpy_1_1threading.html", "namespaceforpy_1_1threading" ],
    [ "ClassificationError", "classforpy_1_1_classification_error.html", "classforpy_1_1_classification_error" ],
    [ "ClassificationForest", "classforpy_1_1_classification_forest.html", "classforpy_1_1_classification_forest" ],
    [ "ClassificationLeaf", "classforpy_1_1_classification_leaf.html", "classforpy_1_1_classification_leaf" ],
    [ "ClassificationOpt", "classforpy_1_1_classification_opt.html", "classforpy_1_1_classification_opt" ],
    [ "ClassificationTree", "classforpy_1_1_classification_tree.html", "classforpy_1_1_classification_tree" ],
    [ "DeciderDesk", "structforpy_1_1_decider_desk.html", "structforpy_1_1_decider_desk" ],
    [ "Desk", "structforpy_1_1_desk.html", "structforpy_1_1_desk" ],
    [ "Empty", "structforpy_1_1_empty.html", "structforpy_1_1_empty" ],
    [ "EmptyException", "classforpy_1_1_empty_exception.html", "classforpy_1_1_empty_exception" ],
    [ "EntropyGain", "classforpy_1_1_entropy_gain.html", "classforpy_1_1_entropy_gain" ],
    [ "FastClassOpt", "classforpy_1_1_fast_class_opt.html", "classforpy_1_1_fast_class_opt" ],
    [ "FastDecider", "classforpy_1_1_fast_decider.html", "classforpy_1_1_fast_decider" ],
    [ "FastDProv", "classforpy_1_1_fast_d_prov.html", "classforpy_1_1_fast_d_prov" ],
    [ "Forest", "classforpy_1_1_forest.html", "classforpy_1_1_forest" ],
    [ "ForpyException", "classforpy_1_1_forpy_exception.html", "classforpy_1_1_forpy_exception" ],
    [ "get_core", "structforpy_1_1get__core.html", "structforpy_1_1get__core" ],
    [ "IDataProvider", "classforpy_1_1_i_data_provider.html", "classforpy_1_1_i_data_provider" ],
    [ "IDecider", "classforpy_1_1_i_decider.html", "classforpy_1_1_i_decider" ],
    [ "IEntropyFunction", "classforpy_1_1_i_entropy_function.html", "classforpy_1_1_i_entropy_function" ],
    [ "IGainCalculator", "classforpy_1_1_i_gain_calculator.html", "classforpy_1_1_i_gain_calculator" ],
    [ "ILeaf", "classforpy_1_1_i_leaf.html", "classforpy_1_1_i_leaf" ],
    [ "InducedEntropy", "classforpy_1_1_induced_entropy.html", "classforpy_1_1_induced_entropy" ],
    [ "IThreshOpt", "classforpy_1_1_i_thresh_opt.html", "classforpy_1_1_i_thresh_opt" ],
    [ "LeafDesk", "structforpy_1_1_leaf_desk.html", "structforpy_1_1_leaf_desk" ],
    [ "MatEqVis", "structforpy_1_1_mat_eq_vis.html", "structforpy_1_1_mat_eq_vis" ],
    [ "Name", "structforpy_1_1_name.html", "structforpy_1_1_name" ],
    [ "Name< double >", "structforpy_1_1_name_3_01double_01_4.html", "structforpy_1_1_name_3_01double_01_4" ],
    [ "Name< float >", "structforpy_1_1_name_3_01float_01_4.html", "structforpy_1_1_name_3_01float_01_4" ],
    [ "Name< int >", "structforpy_1_1_name_3_01int_01_4.html", "structforpy_1_1_name_3_01int_01_4" ],
    [ "Name< int16_t >", "structforpy_1_1_name_3_01int16__t_01_4.html", "structforpy_1_1_name_3_01int16__t_01_4" ],
    [ "Name< uint >", "structforpy_1_1_name_3_01uint_01_4.html", "structforpy_1_1_name_3_01uint_01_4" ],
    [ "Name< uint8_t >", "structforpy_1_1_name_3_01uint8__t_01_4.html", "structforpy_1_1_name_3_01uint8__t_01_4" ],
    [ "ptr_variant", "structforpy_1_1ptr__variant.html", "structforpy_1_1ptr__variant" ],
    [ "RandomDesk", "structforpy_1_1_random_desk.html", "structforpy_1_1_random_desk" ],
    [ "RegressionForest", "classforpy_1_1_regression_forest.html", "classforpy_1_1_regression_forest" ],
    [ "RegressionLeaf", "classforpy_1_1_regression_leaf.html", "classforpy_1_1_regression_leaf" ],
    [ "RegressionOpt", "classforpy_1_1_regression_opt.html", "classforpy_1_1_regression_opt" ],
    [ "RegressionTree", "classforpy_1_1_regression_tree.html", "classforpy_1_1_regression_tree" ],
    [ "RenyiEntropy", "classforpy_1_1_renyi_entropy.html", "classforpy_1_1_renyi_entropy" ],
    [ "SamplingWithoutReplacement", "classforpy_1_1_sampling_without_replacement.html", "classforpy_1_1_sampling_without_replacement" ],
    [ "ShannonEntropy", "classforpy_1_1_shannon_entropy.html", "classforpy_1_1_shannon_entropy" ],
    [ "SplitOptRes", "structforpy_1_1_split_opt_res.html", "structforpy_1_1_split_opt_res" ],
    [ "ThreadControl", "classforpy_1_1_thread_control.html", "classforpy_1_1_thread_control" ],
    [ "TodoMark", "structforpy_1_1_todo_mark.html", "structforpy_1_1_todo_mark" ],
    [ "Tree", "classforpy_1_1_tree.html", "classforpy_1_1_tree" ],
    [ "TreeDesk", "structforpy_1_1_tree_desk.html", "structforpy_1_1_tree_desk" ],
    [ "TsallisEntropy", "classforpy_1_1_tsallis_entropy.html", "classforpy_1_1_tsallis_entropy" ],
    [ "vector_hasher", "structforpy_1_1vector__hasher.html", "structforpy_1_1vector__hasher" ],
    [ "VReset", "structforpy_1_1_v_reset.html", "structforpy_1_1_v_reset" ]
];