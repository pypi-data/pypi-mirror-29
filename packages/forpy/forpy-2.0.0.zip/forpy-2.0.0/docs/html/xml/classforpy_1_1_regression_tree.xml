<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classforpy_1_1_regression_tree" kind="class" language="C++" prot="public">
    <compoundname>forpy::RegressionTree</compoundname>
    <basecompoundref refid="classforpy_1_1_tree" prot="public" virt="non-virtual">forpy::Tree</basecompoundref>
    <includes refid="tree_8h" local="no">tree.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classforpy_1_1_regression_tree_1ad8285f554f07d3e428b8a2b9552768fe" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, mu::variant&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>, size_t, float, bool &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, mu::variant&lt;uint, size_t, float, bool&gt; &gt; forpy::RegressionTree::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="469" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classforpy_1_1_regression_tree_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="470" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classforpy_1_1_regression_tree_1a5b05e0629c2597b428f397374f97fa90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const RegressionTree &amp;self)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classforpy_1_1_regression_tree" kindref="compound">RegressionTree</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="461" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="461" bodyend="465"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classforpy_1_1_regression_tree_1a467fd3c26ff33153fdf1581712b01bc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionTree::RegressionTree</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RegressionTree</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="428" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_tree_1ae37839353bf557ac88ee5e14662d0a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionTree::RegressionTree</definition>
        <argsstring>(const uint &amp;max_depth=std::numeric_limits&lt; uint &gt;::max(), const uint &amp;min_samples_at_leaf=1, const uint &amp;min_samples_at_node=2, const uint &amp;n_valid_features_to_use=0, const bool &amp;autoscale_valid_features=false, const uint &amp;random_seed=1, const size_t &amp;n_thresholds=0, const float &amp;gain_threshold=1E-7f, const bool &amp;store_variance=false, const bool &amp;summarize=false)</argsstring>
        <name>RegressionTree</name>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>max_depth</declname>
          <defval>std::numeric_limits&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &gt;::max()</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>min_samples_at_leaf</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>min_samples_at_node</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>n_valid_features_to_use</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>autoscale_valid_features</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>random_seed</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>n_thresholds</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>gain_threshold</declname>
          <defval>1E-7f</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>store_variance</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>summarize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_tree_1a1f316db7adf1ca331d538e47cd80d60f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, mu::variant&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>, size_t, float, bool &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, mu::variant&lt;uint, size_t, float, bool&gt; &gt; forpy::RegressionTree::get_params</definition>
        <argsstring>(const bool &amp;=false) const</argsstring>
        <name>get_params</name>
        <param>
          <type>const bool &amp;</type>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="440" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="440" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_tree_1a1b30c808f4a9082020073da6f182997b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classforpy_1_1_regression_tree" kindref="compound">RegressionTree</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RegressionTree&gt; forpy::RegressionTree::set_params</definition>
        <argsstring>(const std::unordered_map&lt; std::string, mu::variant&lt; uint, size_t, float, bool &gt;&gt; &amp;params)</argsstring>
        <name>set_params</name>
        <param>
          <type>const std::unordered_map&lt; std::string, mu::variant&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>, size_t, float, bool &gt;&gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="444" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="444" bodyend="459"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classforpy_1_1_regression_tree_1a38c43dd0b512c6d6533502b542d226b1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::RegressionTree::serialize</definition>
        <argsstring>(Archive &amp;ar, const uint &amp;)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="472" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="472" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_tree_1aa7fe7e859bc967e3c80748474edeb66b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionTree::DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(RegressionTree)</argsstring>
        <name>DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classforpy_1_1_regression_tree" kindref="compound">RegressionTree</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="476" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="169">
        <label>forpy::Tree</label>
        <link refid="classforpy_1_1_tree"/>
      </node>
      <node id="168">
        <label>forpy::RegressionTree</label>
        <link refid="classforpy_1_1_regression_tree"/>
        <childnode refid="169" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="172">
        <label>std::vector&lt; std::pair&lt; id_t, id_t &gt; &gt;</label>
      </node>
      <node id="175">
        <label>std::unordered_map&lt; std::string, mu::variant&lt; uint, size_t, float, bool &gt; &gt;</label>
        <childnode refid="176" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="171">
        <label>forpy::Tree</label>
        <link refid="classforpy_1_1_tree"/>
        <childnode refid="172" relation="usage">
          <edgelabel>tree</edgelabel>
        </childnode>
        <childnode refid="173" relation="usage">
          <edgelabel>futures</edgelabel>
        </childnode>
        <childnode refid="174" relation="usage">
          <edgelabel>fast_tree</edgelabel>
        </childnode>
      </node>
      <node id="170">
        <label>forpy::RegressionTree</label>
        <link refid="classforpy_1_1_regression_tree"/>
        <childnode refid="171" relation="public-inheritance">
        </childnode>
        <childnode refid="175" relation="usage">
          <edgelabel>params</edgelabel>
        </childnode>
      </node>
      <node id="174">
        <label>std::unique_ptr&lt; mu::variant&lt; std::vector&lt; std::tuple&lt; size_t, float, size_t, size_t &gt; &gt;, std::vector&lt; std::tuple&lt; size_t, double, size_t, size_t &gt; &gt;, std::vector&lt; std::tuple&lt; size_t, uint32_t, size_t, size_t &gt; &gt;, std::vector&lt; std::tuple&lt; size_t, uint8_t, size_t, size_t &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="177">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="173">
        <label>std::vector&lt; std::future&lt; void &gt; &gt;</label>
      </node>
      <node id="176">
        <label>std::string</label>
        <childnode refid="177" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/classner/git/forpy/include/forpy/tree.h" line="426" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/tree.h" bodystart="426" bodyend="477"/>
    <listofallmembers>
      <member refid="classforpy_1_1_regression_tree_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>cereal::access</name></member>
      <member refid="classforpy_1_1_tree_1afff75b3d58f747ce9fd97591503450c6" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>combine_leaf_results</name></member>
      <member refid="classforpy_1_1_tree_1a0e21f03982ebee32e02292b2d0ca2322" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>DFS</name></member>
      <member refid="classforpy_1_1_tree_1a3387743826c6dbcda481391667e0cd66" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>DFS_and_store</name></member>
      <member refid="classforpy_1_1_tree_1a940aa1b2516a8fc6edee66f21c52cf12" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>disable_fast_prediction</name></member>
      <member refid="classforpy_1_1_regression_tree_1aa7fe7e859bc967e3c80748474edeb66b" prot="private" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classforpy_1_1_tree_1aaf950617741fdb9b495c3d68a0885eea" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>enable_fast_prediction</name></member>
      <member refid="classforpy_1_1_tree_1a18ee73095b840748f6ebbe6d4047bd0e" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>fit</name></member>
      <member refid="classforpy_1_1_tree_1ad2c9d3b7cd1c084e9c89091716eb40eb" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>fit_dprov</name></member>
      <member refid="classforpy_1_1_tree_1a2ac6a894a91e33d620f2c1bc68b427bb" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_decider</name></member>
      <member refid="classforpy_1_1_tree_1a1b8177f98112a850f6240e17b275a61a" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_depth</name></member>
      <member refid="classforpy_1_1_tree_1a4ad92c076f735a8c63129ef4a301793a" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_input_data_dimensions</name></member>
      <member refid="classforpy_1_1_tree_1ae33a3e582ea38b9cf20984b307bbc76b" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_leaf_manager</name></member>
      <member refid="classforpy_1_1_tree_1a6518d6bf8358c5e5f872c9050ce5c568" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_n_nodes</name></member>
      <member refid="classforpy_1_1_regression_tree_1a1f316db7adf1ca331d538e47cd80d60f" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_params</name></member>
      <member refid="classforpy_1_1_tree_1a58763b59096bc3da795ff908ec99e320" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_samples_stored</name></member>
      <member refid="classforpy_1_1_tree_1a3a088d0ae731e18077df3cc0595ce32b" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_tree</name></member>
      <member refid="classforpy_1_1_tree_1afbbfbed6ba0300fa1ca7d6768aee6d10" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>get_weight</name></member>
      <member refid="classforpy_1_1_tree_1ae34a6102319922edfe7e87deb0ef7a31" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>is_initialized</name></member>
      <member refid="classforpy_1_1_tree_1a4fd94dc0367bea76936d4b577ba55d71" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>make_node</name></member>
      <member refid="classforpy_1_1_regression_tree_1a5b05e0629c2597b428f397374f97fa90" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>operator&lt;&lt;</name></member>
      <member refid="classforpy_1_1_tree_1adb61c1db5f21236d020afd11aabcf5e9" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>operator==</name></member>
      <member refid="classforpy_1_1_tree_1a1b561eb3d6e7328d43e5d09f8e439268" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>parallel_DFS</name></member>
      <member refid="classforpy_1_1_regression_tree_1ad8285f554f07d3e428b8a2b9552768fe" prot="private" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>params</name></member>
      <member refid="classforpy_1_1_tree_1a5a66b58b7cf5d1bb81f044ebf7970901" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>predict</name></member>
      <member refid="classforpy_1_1_tree_1a339f44dae73984e14d4a65e1813f4e2a" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>predict_leaf</name></member>
      <member refid="classforpy_1_1_tree_1a7a7a83ed7c395bcfa0c5de78aff7c55b" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>predict_leaf_result</name></member>
      <member refid="classforpy_1_1_tree_1af407e82e843b92cbe9be90656395512d" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>predict_proba</name></member>
      <member refid="classforpy_1_1_regression_tree_1a467fd3c26ff33153fdf1581712b01bc7" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>RegressionTree</name></member>
      <member refid="classforpy_1_1_regression_tree_1ae37839353bf557ac88ee5e14662d0a4f" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>RegressionTree</name></member>
      <member refid="classforpy_1_1_tree_1af2ff0d0b1705f026398ea449fc06b6ea" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>save</name></member>
      <member refid="classforpy_1_1_regression_tree_1a38c43dd0b512c6d6533502b542d226b1" prot="private" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>serialize</name></member>
      <member refid="classforpy_1_1_regression_tree_1a1b30c808f4a9082020073da6f182997b" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>set_params</name></member>
      <member refid="classforpy_1_1_tree_1acab58c599683c1d368e32ff8c5616ca7" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>set_weight</name></member>
      <member refid="classforpy_1_1_tree_1afa48b090a00bb0557146bb3d5fb45f3f" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>Tree</name></member>
      <member refid="classforpy_1_1_tree_1ad1e134d460ce946ed75527a84769e26e" prot="public" virt="non-virtual"><scope>forpy::RegressionTree</scope><name>Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
