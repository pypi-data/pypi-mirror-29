<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classforpy_1_1_regression_forest" kind="class" language="C++" prot="public">
    <compoundname>forpy::RegressionForest</compoundname>
    <basecompoundref refid="classforpy_1_1_forest" prot="public" virt="non-virtual">forpy::Forest</basecompoundref>
    <includes refid="forest_8h" local="no">forest.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classforpy_1_1_regression_forest_1ae8fe4555761fa365881dffc820ac5dcc" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, mu::variant&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>, size_t, float, bool &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, mu::variant&lt;uint, size_t, float, bool&gt; &gt; forpy::RegressionForest::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="350" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classforpy_1_1_regression_forest_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="351" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classforpy_1_1_regression_forest_1ad5f7abc69f685d079ef4079e219d6690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const RegressionForest &amp;self)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classforpy_1_1_regression_forest" kindref="compound">RegressionForest</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="340" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="340" bodyend="346"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classforpy_1_1_regression_forest_1a08b6ddda05219816e58e05389e6d500f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionForest::RegressionForest</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>RegressionForest</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="305" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_forest_1ac5580a0d2b253cad1fab4ecf2c262b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionForest::RegressionForest</definition>
        <argsstring>(const size_t &amp;n_trees=10, const uint &amp;max_depth=std::numeric_limits&lt; uint &gt;::max(), const uint &amp;min_samples_at_leaf=1, const uint &amp;min_samples_at_node=2, const uint &amp;n_valid_features_to_use=0, const bool &amp;autoscale_valid_features=false, const uint &amp;random_seed=1, const size_t &amp;n_thresholds=0, const float &amp;gain_threshold=1E-7f, const bool &amp;store_variance=false, const bool &amp;summarize=false)</argsstring>
        <name>RegressionForest</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>n_trees</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>max_depth</declname>
          <defval>std::numeric_limits&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &gt;::max()</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>min_samples_at_leaf</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>min_samples_at_node</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>n_valid_features_to_use</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>autoscale_valid_features</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>random_seed</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>n_thresholds</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>gain_threshold</declname>
          <defval>1E-7f</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>store_variance</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>summarize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_forest_1ad434daa6c3753abfb902a606641c6181" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, mu::variant&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>, size_t, float, bool &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, mu::variant&lt;uint, size_t, float, bool&gt; &gt; forpy::RegressionForest::get_params</definition>
        <argsstring>(const bool &amp;=false) const</argsstring>
        <name>get_params</name>
        <param>
          <type>const bool &amp;</type>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="318" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_forest_1a3cb1d183be9de60d80bdcab8c51bfbad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classforpy_1_1_regression_forest" kindref="compound">RegressionForest</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RegressionForest&gt; forpy::RegressionForest::set_params</definition>
        <argsstring>(const std::unordered_map&lt; std::string, mu::variant&lt; uint, size_t, float, bool &gt;&gt; &amp;params)</argsstring>
        <name>set_params</name>
        <param>
          <type>const std::unordered_map&lt; std::string, mu::variant&lt; <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>, size_t, float, bool &gt;&gt; &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="322" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="322" bodyend="338"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classforpy_1_1_regression_forest_1abf9a7302a3f58afd5cd2e8ae3e161535" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::RegressionForest::serialize</definition>
        <argsstring>(Archive &amp;ar, const uint &amp;)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="353" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_forest_1a999cfe859aff6d32e57bf97a0251fdd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionForest::DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(RegressionForest)</argsstring>
        <name>DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classforpy_1_1_regression_forest" kindref="compound">RegressionForest</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="357" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="152">
        <label>forpy::Forest</label>
        <link refid="classforpy_1_1_forest"/>
      </node>
      <node id="151">
        <label>forpy::RegressionForest</label>
        <link refid="classforpy_1_1_regression_forest"/>
        <childnode refid="152" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="155">
        <label>std::vector&lt; std::shared_ptr&lt; forpy::Tree &gt; &gt;</label>
      </node>
      <node id="154">
        <label>forpy::Forest</label>
        <link refid="classforpy_1_1_forest"/>
        <childnode refid="155" relation="usage">
          <edgelabel>trees</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>std::unordered_map&lt; std::string, mu::variant&lt; uint, size_t, float, bool &gt; &gt;</label>
        <childnode refid="157" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="158">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="153">
        <label>forpy::RegressionForest</label>
        <link refid="classforpy_1_1_regression_forest"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
        <childnode refid="156" relation="usage">
          <edgelabel>params</edgelabel>
        </childnode>
      </node>
      <node id="157">
        <label>std::string</label>
        <childnode refid="158" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/classner/git/forpy/include/forpy/forest.h" line="303" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/forest.h" bodystart="303" bodyend="358"/>
    <listofallmembers>
      <member refid="classforpy_1_1_regression_forest_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>cereal::access</name></member>
      <member refid="classforpy_1_1_forest_1a6c711252c6ffc0754226623ddb321a14" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>disable_fast_prediction</name></member>
      <member refid="classforpy_1_1_regression_forest_1a999cfe859aff6d32e57bf97a0251fdd1" prot="private" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classforpy_1_1_forest_1ae7d2aa97c0404e21210996f02c74c02b" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>enable_fast_prediction</name></member>
      <member refid="classforpy_1_1_forest_1a921dde74a71ab99e94117949ac9126a1" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>fit</name></member>
      <member refid="classforpy_1_1_forest_1ae84524c095dfa2c23501f4c96e4d8ab4" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>fit_dprov</name></member>
      <member refid="classforpy_1_1_forest_1aedfec5b8670f3f76a643574cf7cde15c" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>Forest</name></member>
      <member refid="classforpy_1_1_forest_1a7f102b5b98beb69221c530a6e1bc7711" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>Forest</name></member>
      <member refid="classforpy_1_1_forest_1a5d567cd6164944f637929b27a263c578" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>Forest</name></member>
      <member refid="classforpy_1_1_forest_1ad3d1238b0a7591bf4ace2131d6d52f06" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_decider</name></member>
      <member refid="classforpy_1_1_forest_1a00157303fa85f51f93ed73666b74261f" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_depths</name></member>
      <member refid="classforpy_1_1_forest_1ab96fc7de460300b4969a8ba12526bf96" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_input_data_dimensions</name></member>
      <member refid="classforpy_1_1_forest_1a0e8b80553e643ac3eb4de234bfa0dfe5" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_leaf_manager</name></member>
      <member refid="classforpy_1_1_regression_forest_1ad434daa6c3753abfb902a606641c6181" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_params</name></member>
      <member refid="classforpy_1_1_forest_1afaa517cf1c7bbf14bbc55ab3f757cd0e" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_tree_weights</name></member>
      <member refid="classforpy_1_1_forest_1a3358c450c612d1a526052b2420e1ecf7" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>get_trees</name></member>
      <member refid="classforpy_1_1_regression_forest_1ad5f7abc69f685d079ef4079e219d6690" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>operator&lt;&lt;</name></member>
      <member refid="classforpy_1_1_forest_1a064e5c9fdd1c9c8d439df7cac77c6f97" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>operator==</name></member>
      <member refid="classforpy_1_1_regression_forest_1ae8fe4555761fa365881dffc820ac5dcc" prot="private" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>params</name></member>
      <member refid="classforpy_1_1_forest_1a5347f23789a3d1a6e89a5b3df37b47b5" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>predict</name></member>
      <member refid="classforpy_1_1_forest_1a304fe941cebad325ca60b8bceb7ab2ab" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>predict_proba</name></member>
      <member refid="classforpy_1_1_regression_forest_1a08b6ddda05219816e58e05389e6d500f" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>RegressionForest</name></member>
      <member refid="classforpy_1_1_regression_forest_1ac5580a0d2b253cad1fab4ecf2c262b76" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>RegressionForest</name></member>
      <member refid="classforpy_1_1_forest_1a08772e8b9e5850140b39de064d23c805" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>save</name></member>
      <member refid="classforpy_1_1_regression_forest_1abf9a7302a3f58afd5cd2e8ae3e161535" prot="private" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>serialize</name></member>
      <member refid="classforpy_1_1_regression_forest_1a3cb1d183be9de60d80bdcab8c51bfbad" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>set_params</name></member>
      <member refid="classforpy_1_1_forest_1a21aa3cff3a22fd0feffa7331fd3bda5a" prot="public" virt="non-virtual"><scope>forpy::RegressionForest</scope><name>set_tree_weights</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
