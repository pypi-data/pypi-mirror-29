<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="regressionleaf_8h" kind="file" language="C++">
    <compoundname>regressionleaf.h</compoundname>
    <includes refid="global_8h" local="yes">../global.h</includes>
    <includes local="yes">../util/serialization/basics.h</includes>
    <includes local="no">numeric</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="idataprovider_8h" local="yes">../data_providers/idataprovider.h</includes>
    <includes refid="ientropyfunction_8h" local="yes">../impurities/ientropyfunction.h</includes>
    <includes refid="types_8h" local="yes">../types.h</includes>
    <includes refid="checks_8h" local="yes">../util/checks.h</includes>
    <includes refid="ileaf_8h" local="yes">./ileaf.h</includes>
    <includedby refid="leafs_8h" local="yes">/Users/classner/git/forpy/include/forpy/leafs/leafs.h</includedby>
    <incdepgraph>
      <node id="893">
        <label>functional</label>
      </node>
      <node id="882">
        <label>iomanip</label>
      </node>
      <node id="904">
        <label>../util/checks.h</label>
        <link refid="checks_8h"/>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
      </node>
      <node id="906">
        <label>limits</label>
      </node>
      <node id="909">
        <label>../threshold_optimizers/ithreshopt.h</label>
        <link refid="ithreshopt_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
      </node>
      <node id="901">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="881">
        <label>glog/logging.h</label>
      </node>
      <node id="889">
        <label>numeric</label>
      </node>
      <node id="886">
        <label>string</label>
      </node>
      <node id="885">
        <label>./version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="896">
        <label>map</label>
      </node>
      <node id="910">
        <label>../util/desk.h</label>
        <link refid="desk_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="898">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
      </node>
      <node id="895">
        <label>Eigen/Dense</label>
      </node>
      <node id="903">
        <label>../impurities/ientropyfunction.h</label>
        <link refid="ientropyfunction_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="879">
        <label>/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h</label>
        <link refid="regressionleaf_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
      </node>
      <node id="892">
        <label>../data_providers/idataprovider.h</label>
        <link refid="idataprovider_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
      </node>
      <node id="900">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>vector</label>
      </node>
      <node id="890">
        <label>utility</label>
      </node>
      <node id="888">
        <label>../util/serialization/basics.h</label>
      </node>
      <node id="883">
        <label>iostream</label>
      </node>
      <node id="880">
        <label>../global.h</label>
        <link refid="global_8h"/>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="899">
        <label>cstddef</label>
      </node>
      <node id="908">
        <label>./ileaf.h</label>
        <link refid="ileaf_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="887">
        <label>csignal</label>
      </node>
      <node id="884">
        <label>thread</label>
      </node>
      <node id="907">
        <label>type_traits</label>
      </node>
      <node id="894">
        <label>../types.h</label>
        <link refid="types_8h"/>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
      </node>
      <node id="902">
        <label>./serialization/variant.h</label>
      </node>
      <node id="905">
        <label>algorithm</label>
      </node>
      <node id="897">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="913">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="912">
        <label>/Users/classner/git/forpy/include/forpy/leafs/leafs.h</label>
        <link refid="leafs_8h"/>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="911">
        <label>/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h</label>
        <link refid="regressionleaf_8h"/>
        <childnode refid="912" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classforpy_1_1_regression_leaf" prot="public">forpy::RegressionLeaf</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="regressionleaf_8h_1a82c660282648ff141227d3eccd3bbe5e" prot="public" static="no">
        <name>FORPY_LEAFS_REGRESSIONLEAF_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="regressionleaf_8h_1a4420395d01b99768434d7b46e7806775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(forpy::RegressionLeaf)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classforpy_1_1_regression_leaf" kindref="compound">forpy::RegressionLeaf</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_LEAFS_REGRESSIONLEAF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="regressionleaf_8h_1a82c660282648ff141227d3eccd3bbe5e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_LEAFS_REGRESSIONLEAF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/basics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../data_providers/idataprovider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../impurities/ientropyfunction.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/checks.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ileaf_8h" kindref="compound">./ileaf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="classforpy_1_1_regression_leaf" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_regression_leaf" kindref="compound">RegressionLeaf</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28" refid="classforpy_1_1_regression_leaf_1ac11424dde98d165518ea6410e6726929" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1ac11424dde98d165518ea6410e6726929" kindref="member">RegressionLeaf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<ref refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" kindref="member">store_variance</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<ref refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" kindref="member">summarize</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" kindref="member">leaf_regression_map</ref>(0),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>(0),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" kindref="member">store_variance</ref>(<ref refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" kindref="member">store_variance</ref>),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" kindref="member">summarize</ref>(<ref refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" kindref="member">summarize</ref>){};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ILeaf&gt;<sp/><ref refid="classforpy_1_1_regression_leaf_1a523a58a9fcfc79158180ac213cec3136" kindref="member">create_duplicate</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;RegressionLeaf&gt;(<ref refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" kindref="member">store_variance</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classforpy_1_1_regression_leaf_1a9c823e0991d307bb4fd96d82b2397253" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1a9c823e0991d307bb4fd96d82b2397253" kindref="member">is_compatible_with</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>&amp;data_provider)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref><sp/>=<sp/>data_provider.<ref refid="classforpy_1_1_i_data_provider_1ac4feda097ece63e0a355b1ddc00300ff" kindref="member">get_annot_vec_dim</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45" refid="classforpy_1_1_regression_leaf_1ab7efaa3994b7a47c061de4b925cb9167" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1ab7efaa3994b7a47c061de4b925cb9167" kindref="member">is_compatible_with</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*threshopt*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="48" refid="classforpy_1_1_regression_leaf_1a08cc5595675c8704b89cdec27cdf5dc9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1a08cc5595675c8704b89cdec27cdf5dc9" kindref="member">transfer_or_run_check</ref>(<ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref><sp/>*other,<sp/><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>*thresh_opt,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>*dprov)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*cl_ot<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classforpy_1_1_regression_leaf" kindref="compound">RegressionLeaf</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cl_ot<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_ot-&gt;<ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref><sp/>=<sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;<ref refid="classforpy_1_1_i_leaf_1a5e5dfa9cdb34c445d00be4187eee832a" kindref="member">is_compatible_with</ref>(*dprov);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;<ref refid="classforpy_1_1_i_leaf_1a5e5dfa9cdb34c445d00be4187eee832a" kindref="member">is_compatible_with</ref>(*thresh_opt);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1afc78c7bcce730f096da6d5f1d92a78be" kindref="member">make_leaf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref><sp/>&amp;todo_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>&amp;data_provider,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref><sp/>*desk)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60" refid="classforpy_1_1_regression_leaf_1a2ee39f19e664cdb4d260e6da0bf153ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1a2ee39f19e664cdb4d260e6da0bf153ef" kindref="member">get_result_columns</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n_trees,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/></highlight><highlight class="comment">/*for_forest*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>DLOG(INFO)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Determining<sp/>result<sp/>columns.<sp/>Summarize:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" kindref="member">summarize</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>predict_proba:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>predict_proba</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>n_trees:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n_trees;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_forpy_exception" kindref="compound">ForpyException</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>leaf<sp/>manager<sp/>has<sp/>not<sp/>been<sp/>initialized<sp/>yet!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(predict_proba)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" kindref="member">store_variance</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_forpy_exception" kindref="compound">ForpyException</ref>(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;You<sp/>called<sp/>`predict_proba`<sp/>but<sp/>didn&apos;t<sp/>enable<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;storing<sp/>the<sp/>variances.<sp/>Use<sp/>`store_variance=True`<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;for<sp/>predictor<sp/>construction!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" kindref="member">summarize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VLOG(23)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result<sp/>columns:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>2<sp/>*<sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2<sp/>*<sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VLOG(23)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result<sp/>columns:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n_trees<sp/>*<sp/>2<sp/>*<sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_trees<sp/>*<sp/>2<sp/>*<sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VLOG(23)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Result<sp/>columns:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="86" refid="classforpy_1_1_regression_leaf_1a69ca578f046736ec06cdd91950a31f24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;Mat&gt;</ref><sp/><ref refid="classforpy_1_1_regression_leaf_1a69ca578f046736ec06cdd91950a31f24" kindref="member">get_result_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/></highlight><highlight class="comment">/*predict_proba*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;<sp/></highlight><highlight class="comment">/*for_forest*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;Mat&gt;</ref><sp/>ret_mat;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ret_mat.set&lt;<ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat&lt;float&gt;</ref>&gt;();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_mat;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aaf9b95f99e3a494c7eac7ca19fcd071d" kindref="member">get_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref><sp/>&amp;node_id,<sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;MatRef&gt;</ref><sp/>&amp;target,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;for_forest)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94" refid="classforpy_1_1_regression_leaf_1a3c731282e3e38cda6d1791d78536cd58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Mat&lt;float&gt;&gt;<sp/>*<ref refid="classforpy_1_1_regression_leaf_1a3c731282e3e38cda6d1791d78536cd58" kindref="member">get_map</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" kindref="member">leaf_regression_map</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aaf9b95f99e3a494c7eac7ca19fcd071d" kindref="member">get_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;Mat&gt;</ref>&gt;<sp/>&amp;leaf_results,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;MatRef&gt;</ref><sp/>&amp;target_v,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec&lt;float&gt;</ref><sp/>&amp;weights<sp/>=<sp/><ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec&lt;float&gt;</ref>(),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101" refid="classforpy_1_1_regression_leaf_1aba1e9f1d6d3583476195c9252dafc355" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aba1e9f1d6d3583476195c9252dafc355" kindref="member">ensure_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" kindref="member">leaf_regression_map</ref>.resize(n);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="104" refid="classforpy_1_1_regression_leaf_1a6fdd83f19b12c5715677d8532239457e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1a6fdd83f19b12c5715677d8532239457e" kindref="member">finalize_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n)<sp/>{<sp/><ref refid="classforpy_1_1_regression_leaf_1aba1e9f1d6d3583476195c9252dafc355" kindref="member">ensure_capacity</ref>(n);<sp/>};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aa60e723ebfe1af3332543a468b0e2e27" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108" refid="classforpy_1_1_regression_leaf_1a6d00eba07d92e2c8b1a20ef1e7bcd636" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classforpy_1_1_regression_leaf_1a6d00eba07d92e2c8b1a20ef1e7bcd636" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf" kindref="compound">RegressionLeaf</ref><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;forpy::RegressionLeaf[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.leaf_regression_map.size()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stored]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="113" refid="classforpy_1_1_regression_leaf_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">cereal::access;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="118" refid="classforpy_1_1_regression_leaf_1abca86338fc92a7661cf3643966fa4675" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1abca86338fc92a7661cf3643966fa4675" kindref="member">serialize</ref>(Archive<sp/>&amp;ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(cereal::make_nvp(</highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">,<sp/>cereal::base_class&lt;ILeaf&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CEREAL_NVP(<ref refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" kindref="member">leaf_regression_map</ref>),<sp/>CEREAL_NVP(<ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Mat&lt;float&gt;&gt;<sp/><ref refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" kindref="member">leaf_regression_map</ref>;</highlight></codeline>
<codeline lineno="124" refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" kindref="member">annot_dim</ref>;</highlight></codeline>
<codeline lineno="125" refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" kindref="member">store_variance</ref>;</highlight></codeline>
<codeline lineno="126" refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" kindref="member">summarize</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="regressionleaf_8h_1a4420395d01b99768434d7b46e7806775" kindref="member">CEREAL_REGISTER_TYPE</ref>(<ref refid="classforpy_1_1_regression_leaf" kindref="compound">forpy::RegressionLeaf</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_LEAFS_REGRESSIONLEAF_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h"/>
  </compounddef>
</doxygen>
