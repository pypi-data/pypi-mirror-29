<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structforpy_1_1_v_reset" kind="struct" language="C++" prot="public">
    <compoundname>forpy::VReset</compoundname>
    <includes refid="storage_8h" local="no">storage.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structforpy_1_1_v_reset_1a14ea0d86a72f7db2f52d3d39482f196c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::VReset::operator()</definition>
        <argsstring>(T &amp;pointer) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T &amp;</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="108" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="108" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Call the reset operation on a pointer variant. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="106" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="106" bodyend="111"/>
    <listofallmembers>
      <member refid="structforpy_1_1_v_reset_1a14ea0d86a72f7db2f52d3d39482f196c" prot="public" virt="non-virtual"><scope>forpy::VReset</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
