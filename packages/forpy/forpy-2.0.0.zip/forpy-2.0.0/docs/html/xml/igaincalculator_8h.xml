<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="igaincalculator_8h" kind="file" language="C++">
    <compoundname>igaincalculator.h</compoundname>
    <includes refid="global_8h" local="yes">../global.h</includes>
    <includes local="yes">../util/serialization/basics.h</includes>
    <includes local="no">vector</includes>
    <includes refid="types_8h" local="yes">../types.h</includes>
    <includedby refid="gains_8h" local="yes">/Users/classner/git/forpy/include/forpy/gains/gains.h</includedby>
    <includedby refid="entropygain_8h" local="yes">/Users/classner/git/forpy/include/forpy/gains/entropygain.h</includedby>
    <incdepgraph>
      <node id="444">
        <label>iomanip</label>
      </node>
      <node id="461">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="443">
        <label>glog/logging.h</label>
      </node>
      <node id="456">
        <label>numeric</label>
      </node>
      <node id="448">
        <label>string</label>
      </node>
      <node id="447">
        <label>./version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="454">
        <label>map</label>
      </node>
      <node id="458">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="441">
        <label>/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h</label>
        <link refid="igaincalculator_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>Eigen/Dense</label>
      </node>
      <node id="460">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>vector</label>
      </node>
      <node id="457">
        <label>utility</label>
      </node>
      <node id="450">
        <label>../util/serialization/basics.h</label>
      </node>
      <node id="445">
        <label>iostream</label>
      </node>
      <node id="442">
        <label>../global.h</label>
        <link refid="global_8h"/>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>cstddef</label>
      </node>
      <node id="449">
        <label>csignal</label>
      </node>
      <node id="446">
        <label>thread</label>
      </node>
      <node id="452">
        <label>../types.h</label>
        <link refid="types_8h"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="462">
        <label>./serialization/variant.h</label>
      </node>
      <node id="455">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="466">
        <label>/Users/classner/git/forpy/include/forpy/gains/entropygain.h</label>
        <link refid="entropygain_8h"/>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="464">
        <label>/Users/classner/git/forpy/include/forpy/gains/gains.h</label>
        <link refid="gains_8h"/>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h</label>
        <link refid="igaincalculator_8h"/>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classforpy_1_1_i_gain_calculator" prot="public">forpy::IGainCalculator</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="igaincalculator_8h_1ab47cf31ce235327feacf1333d161b5ac" prot="public" static="no">
        <name>FORPY_GAINS_IGAINCALCULATOR_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_GAINS_IGAINCALCULATOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="igaincalculator_8h_1ab47cf31ce235327feacf1333d161b5ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_GAINS_IGAINCALCULATOR_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/basics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="classforpy_1_1_i_gain_calculator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_i_gain_calculator" kindref="compound">IGainCalculator</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classforpy_1_1_i_gain_calculator_1a8685755458c105cb2af8c0047a511443" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator_1a8685755458c105cb2af8c0047a511443" kindref="member">~IGainCalculator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator_1adf9ec81579274ee28aa1b3268be2dd0f" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;members_numbers_left,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;members_numbers_right)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a287409078f3b1637bf3eff5bb81ef767" kindref="member">VIRTUAL</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator_1adf9ec81579274ee28aa1b3268be2dd0f" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;current_entropy,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;members_numbers_left,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;members_numbers_right)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a287409078f3b1637bf3eff5bb81ef767" kindref="member">VIRTUAL</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator_1a3d8dadb6439f48d793f5436dd1e1ff90" kindref="member">approx</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;members_numbers_left,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;members_numbers_right)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a287409078f3b1637bf3eff5bb81ef767" kindref="member">VIRTUAL</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator_1ac8305de8f987aeae48f4cd971afa69e3" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator" kindref="compound">IGainCalculator</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="global_8h_1a287409078f3b1637bf3eff5bb81ef767" kindref="member">VIRTUAL</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="classforpy_1_1_i_gain_calculator_1a5bf22f6a9ec975327b1105c56ebd83ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_i_gain_calculator_1a5bf22f6a9ec975327b1105c56ebd83ba" kindref="member">IGainCalculator</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_i_gain_calculator_1a7e9300d2944c08a234e9ae52df723735" kindref="member">DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classforpy_1_1_i_gain_calculator" kindref="compound">IGainCalculator</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classforpy_1_1_i_gain_calculator_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_i_gain_calculator_1ab2f44cbb59a08132f4c843e5225bba0e" kindref="member">cereal::access</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="64" refid="classforpy_1_1_i_gain_calculator_1a0ff162b25c21cb9cba6e0d32e3f13cf3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_gain_calculator_1a0ff162b25c21cb9cba6e0d32e3f13cf3" kindref="member">serialize</ref>(Archive<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_GAINS_IGAINCALCULATOR_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h"/>
  </compounddef>
</doxygen>
