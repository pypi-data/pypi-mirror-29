<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structforpy_1_1vector__hasher" kind="struct" language="C++" prot="public">
    <compoundname>forpy::vector_hasher</compoundname>
    <includes refid="hash_8h" local="no">hash.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structforpy_1_1vector__hasher_1a783c4e708c6ef61a59dee0f7d0f6f087" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t forpy::vector_hasher::operator()</definition>
        <argsstring>(const std::vector&lt; size_t &gt; &amp;t) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hash function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/hash.h" line="36" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/hash.h" bodystart="36" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple vector&lt;size_t&gt; hasher. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/classner/git/forpy/include/forpy/util/hash.h" line="34" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/hash.h" bodystart="34" bodyend="41"/>
    <listofallmembers>
      <member refid="structforpy_1_1vector__hasher_1a783c4e708c6ef61a59dee0f7d0f6f087" prot="public" virt="non-virtual"><scope>forpy::vector_hasher</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
