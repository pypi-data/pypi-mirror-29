<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classforpy_1_1_regression_leaf" kind="class" language="C++" prot="public">
    <compoundname>forpy::RegressionLeaf</compoundname>
    <basecompoundref refid="classforpy_1_1_i_leaf" prot="public" virt="non-virtual">forpy::ILeaf</basecompoundref>
    <includes refid="regressionleaf_8h" local="no">regressionleaf.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a523a58a9fcfc79158180ac213cec3136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ILeaf&gt; forpy::RegressionLeaf::create_duplicate</definition>
        <argsstring>() const</argsstring>
        <name>create_duplicate</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a624665d009a72253b96a83058d08e42f">create_duplicate</reimplements>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="37" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a9c823e0991d307bb4fd96d82b2397253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool forpy::RegressionLeaf::is_compatible_with</definition>
        <argsstring>(const IDataProvider &amp;data_provider)</argsstring>
        <name>is_compatible_with</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a5e5dfa9cdb34c445d00be4187eee832a">is_compatible_with</reimplements>
        <param>
          <type>const <ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref> &amp;</type>
          <declname>data_provider</declname>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="41" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1ab7efaa3994b7a47c061de4b925cb9167" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool forpy::RegressionLeaf::is_compatible_with</definition>
        <argsstring>(const IThreshOpt &amp;)</argsstring>
        <name>is_compatible_with</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a515341f2744f8537ddaf542459e421dc">is_compatible_with</reimplements>
        <param>
          <type>const <ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="45" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a08cc5595675c8704b89cdec27cdf5dc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void forpy::RegressionLeaf::transfer_or_run_check</definition>
        <argsstring>(ILeaf *other, IThreshOpt *thresh_opt, IDataProvider *dprov)</argsstring>
        <name>transfer_or_run_check</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a1761f69b5d97451a1008c4f35759dc39">transfer_or_run_check</reimplements>
        <param>
          <type><ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref> *</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref> *</type>
          <declname>thresh_opt</declname>
        </param>
        <param>
          <type><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref> *</type>
          <declname>dprov</declname>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="48" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="48" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1afc78c7bcce730f096da6d5f1d92a78be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void forpy::RegressionLeaf::make_leaf</definition>
        <argsstring>(const TodoMark &amp;todo_info, const IDataProvider &amp;data_provider, Desk *desk) const</argsstring>
        <name>make_leaf</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a3c5246ea62fceb6ca96ea669f0967fe4">make_leaf</reimplements>
        <param>
          <type>const <ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref> &amp;</type>
          <declname>todo_info</declname>
        </param>
        <param>
          <type>const <ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref> &amp;</type>
          <declname>data_provider</declname>
        </param>
        <param>
          <type><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref> *</type>
          <declname>desk</declname>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a2ee39f19e664cdb4d260e6da0bf153ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t forpy::RegressionLeaf::get_result_columns</definition>
        <argsstring>(const size_t &amp;n_trees, const bool &amp;predict_proba, const bool &amp;) const</argsstring>
        <name>get_result_columns</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a4c4a3e07e6e7e683346dbaaa086444ae">get_result_columns</reimplements>
        <param>
          <type>const size_t &amp;</type>
          <declname>n_trees</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>predict_proba</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="60" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="60" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a69ca578f046736ec06cdd91950a31f24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data</ref>&lt; <ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref> &gt;</type>
        <definition>Data&lt;Mat&gt; forpy::RegressionLeaf::get_result_type</definition>
        <argsstring>(const bool &amp;, const bool &amp;) const</argsstring>
        <name>get_result_type</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a2113cd63cd4e723a0699edc8683e36a7">get_result_type</reimplements>
        <param>
          <type>const bool &amp;</type>
        </param>
        <param>
          <type>const bool &amp;</type>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="86" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1aaf9b95f99e3a494c7eac7ca19fcd071d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void forpy::RegressionLeaf::get_result</definition>
        <argsstring>(const id_t &amp;node_id, Data&lt; MatRef &gt; &amp;target, const bool &amp;predict_proba, const bool &amp;for_forest) const</argsstring>
        <name>get_result</name>
        <reimplements refid="classforpy_1_1_i_leaf_1ae05c309a58b401ee24fcbb803550fa2e">get_result</reimplements>
        <param>
          <type>const <ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref> &amp;</type>
          <declname>node_id</declname>
        </param>
        <param>
          <type><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data</ref>&lt; <ref refid="namespaceforpy_1ac50f86d38ff96870f057147546b8ad26" kindref="member">MatRef</ref> &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>predict_proba</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>for_forest</declname>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a3c731282e3e38cda6d1791d78536cd58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref>&lt; float &gt; &gt; *</type>
        <definition>const std::vector&lt;Mat&lt;float&gt; &gt;* forpy::RegressionLeaf::get_map</definition>
        <argsstring>() const</argsstring>
        <name>get_map</name>
        <reimplements refid="classforpy_1_1_i_leaf_1af67bf97754866e58154ae201e2ef4512">get_map</reimplements>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="94" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a809459bc7399274229a6a6eb1507e46d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void forpy::RegressionLeaf::get_result</definition>
        <argsstring>(const std::vector&lt; Data&lt; Mat &gt;&gt; &amp;leaf_results, Data&lt; MatRef &gt; &amp;target_v, const Vec&lt; float &gt; &amp;weights=Vec&lt; float &gt;(), const bool &amp;predict_proba=false) const</argsstring>
        <name>get_result</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a85539dcbb494e9b8c426e79fd61f6cb5">get_result</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data</ref>&lt; <ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref> &gt;&gt; &amp;</type>
          <declname>leaf_results</declname>
        </param>
        <param>
          <type><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data</ref>&lt; <ref refid="namespaceforpy_1ac50f86d38ff96870f057147546b8ad26" kindref="member">MatRef</ref> &gt; &amp;</type>
          <declname>target_v</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec</ref>&lt; float &gt; &amp;</type>
          <declname>weights</declname>
          <defval><ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec</ref>&lt; float &gt;()</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>predict_proba</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1aba1e9f1d6d3583476195c9252dafc355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void forpy::RegressionLeaf::ensure_capacity</definition>
        <argsstring>(const size_t &amp;n)</argsstring>
        <name>ensure_capacity</name>
        <reimplements refid="classforpy_1_1_i_leaf_1af4ceeb66a04547d71501c759c2d361ec">ensure_capacity</reimplements>
        <param>
          <type>const size_t &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="101" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1a6fdd83f19b12c5715677d8532239457e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void forpy::RegressionLeaf::finalize_capacity</definition>
        <argsstring>(const size_t &amp;n)</argsstring>
        <name>finalize_capacity</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a5bae9feb177b3e981402ebd8fd24869d">finalize_capacity</reimplements>
        <param>
          <type>const size_t &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Interface implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="104" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="104" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classforpy_1_1_regression_leaf_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="116" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classforpy_1_1_regression_leaf_1a6d00eba07d92e2c8b1a20ef1e7bcd636" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const RegressionLeaf &amp;self)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classforpy_1_1_regression_leaf" kindref="compound">RegressionLeaf</ref> &amp;</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="108" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="108" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref>&lt; float &gt; &gt;</type>
        <definition>std::vector&lt;Mat&lt;float&gt; &gt; forpy::RegressionLeaf::leaf_regression_map</definition>
        <argsstring></argsstring>
        <name>leaf_regression_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="123" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t forpy::RegressionLeaf::annot_dim</definition>
        <argsstring></argsstring>
        <name>annot_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="124" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool forpy::RegressionLeaf::store_variance</definition>
        <argsstring></argsstring>
        <name>store_variance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="125" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool forpy::RegressionLeaf::summarize</definition>
        <argsstring></argsstring>
        <name>summarize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="126" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1ac11424dde98d165518ea6410e6726929" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>forpy::RegressionLeaf::RegressionLeaf</definition>
        <argsstring>(const bool &amp;store_variance=false, const bool &amp;summarize=false)</argsstring>
        <name>RegressionLeaf</name>
        <param>
          <type>const bool &amp;</type>
          <declname>store_variance</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>summarize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="28" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1aa60e723ebfe1af3332543a468b0e2e27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool forpy::RegressionLeaf::operator==</definition>
        <argsstring>(const ILeaf &amp;rhs) const</argsstring>
        <name>operator==</name>
        <reimplements refid="classforpy_1_1_i_leaf_1a411936d9f0759c509a7d648b1a5bd1be">operator==</reimplements>
        <param>
          <type>const <ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classforpy_1_1_regression_leaf_1abca86338fc92a7661cf3643966fa4675" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::RegressionLeaf::serialize</definition>
        <argsstring>(Archive &amp;ar, const uint &amp;)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="118" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="118" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages the leaf nodes of regression trees. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="160">
        <label>forpy::ILeaf</label>
        <link refid="classforpy_1_1_i_leaf"/>
      </node>
      <node id="159">
        <label>forpy::RegressionLeaf</label>
        <link refid="classforpy_1_1_regression_leaf"/>
        <childnode refid="160" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="162">
        <label>forpy::ILeaf</label>
        <link refid="classforpy_1_1_i_leaf"/>
      </node>
      <node id="163">
        <label>std::vector&lt; Mat&lt; float &gt; &gt;</label>
      </node>
      <node id="161">
        <label>forpy::RegressionLeaf</label>
        <link refid="classforpy_1_1_regression_leaf"/>
        <childnode refid="162" relation="public-inheritance">
        </childnode>
        <childnode refid="163" relation="usage">
          <edgelabel>leaf_regression_map</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" line="26" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h" bodystart="26" bodyend="127"/>
    <listofallmembers>
      <member refid="classforpy_1_1_regression_leaf_1aff9dfce929f625ab612e4d4439291088" prot="private" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>annot_dim</name></member>
      <member refid="classforpy_1_1_regression_leaf_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>cereal::access</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a523a58a9fcfc79158180ac213cec3136" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>create_duplicate</name></member>
      <member refid="classforpy_1_1_regression_leaf_1aba1e9f1d6d3583476195c9252dafc355" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>ensure_capacity</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a6fdd83f19b12c5715677d8532239457e" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>finalize_capacity</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a3c731282e3e38cda6d1791d78536cd58" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>get_map</name></member>
      <member refid="classforpy_1_1_regression_leaf_1aaf9b95f99e3a494c7eac7ca19fcd071d" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>get_result</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a809459bc7399274229a6a6eb1507e46d" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>get_result</name></member>
      <member refid="classforpy_1_1_i_leaf_1a0ba46f3fb5d150cb48d64adc0612c973" prot="public" virt="virtual" ambiguityscope="forpy::ILeaf::"><scope>forpy::RegressionLeaf</scope><name>get_result</name></member>
      <member refid="classforpy_1_1_i_leaf_1a965fcf0b0910bf04405ce2f114cabeb4" prot="public" virt="virtual" ambiguityscope="forpy::ILeaf::"><scope>forpy::RegressionLeaf</scope><name>get_result</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a2ee39f19e664cdb4d260e6da0bf153ef" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>get_result_columns</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a69ca578f046736ec06cdd91950a31f24" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>get_result_type</name></member>
      <member refid="classforpy_1_1_i_leaf_1a3905105cf769f4e03293ab2d5f9bef27" prot="protected" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>ILeaf</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a9c823e0991d307bb4fd96d82b2397253" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>is_compatible_with</name></member>
      <member refid="classforpy_1_1_regression_leaf_1ab7efaa3994b7a47c061de4b925cb9167" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>is_compatible_with</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a68169c0ccabbb14917abbbf73f1c173a" prot="private" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>leaf_regression_map</name></member>
      <member refid="classforpy_1_1_regression_leaf_1afc78c7bcce730f096da6d5f1d92a78be" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>make_leaf</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a6d00eba07d92e2c8b1a20ef1e7bcd636" prot="public" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>operator&lt;&lt;</name></member>
      <member refid="classforpy_1_1_regression_leaf_1aa60e723ebfe1af3332543a468b0e2e27" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>operator==</name></member>
      <member refid="classforpy_1_1_regression_leaf_1ac11424dde98d165518ea6410e6726929" prot="public" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>RegressionLeaf</name></member>
      <member refid="classforpy_1_1_regression_leaf_1abca86338fc92a7661cf3643966fa4675" prot="private" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>serialize</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a38cd7dadfe65f83e94fa6a389efb67c5" prot="private" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>store_variance</name></member>
      <member refid="classforpy_1_1_regression_leaf_1aa32fbf08c9415e0b67872132d241687a" prot="private" virt="non-virtual"><scope>forpy::RegressionLeaf</scope><name>summarize</name></member>
      <member refid="classforpy_1_1_regression_leaf_1a08cc5595675c8704b89cdec27cdf5dc9" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>transfer_or_run_check</name></member>
      <member refid="classforpy_1_1_i_leaf_1ad5b2eac48bba952724ae16ef20721301" prot="public" virt="virtual"><scope>forpy::RegressionLeaf</scope><name>~ILeaf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
