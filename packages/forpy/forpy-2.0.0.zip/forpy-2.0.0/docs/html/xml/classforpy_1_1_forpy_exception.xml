<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classforpy_1_1_forpy_exception" kind="class" language="C++" prot="public">
    <compoundname>forpy::ForpyException</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="classforpy_1_1_empty_exception" prot="public" virt="non-virtual">forpy::EmptyException</derivedcompoundref>
    <includes refid="global_8h" local="no">global.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classforpy_1_1_forpy_exception_1a80bfe31810f38cfccaef57b4dd1fa54e" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string forpy::ForpyException::whatstr</definition>
        <argsstring></argsstring>
        <name>whatstr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/global.h" line="100" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/global.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classforpy_1_1_forpy_exception_1ad0d5f33d1155c00aaab21b81509422db" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>forpy::ForpyException::ForpyException</definition>
        <argsstring>(const std::string &amp;what)</argsstring>
        <name>ForpyException</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>what</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/global.h" line="93" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/global.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_forpy_exception_1ad3232c6981b8fdbbcdec7cea0e94d9f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const char *</type>
        <definition>virtual const char* forpy::ForpyException::what</definition>
        <argsstring>() const</argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/global.h" line="95" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/global.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_forpy_exception_1aa6d946871a6c69b5fe0080b4febaa5f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual forpy::ForpyException::~ForpyException</definition>
        <argsstring>()</argsstring>
        <name>~ForpyException</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/global.h" line="97" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/global.h" bodystart="97" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="87">
        <label>forpy::EmptyException</label>
        <link refid="classforpy_1_1_empty_exception"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>forpy::ForpyException</label>
        <link refid="classforpy_1_1_forpy_exception"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="88">
        <label>forpy::ForpyException</label>
        <link refid="classforpy_1_1_forpy_exception"/>
        <childnode refid="89" relation="public-inheritance">
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>whatstr</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="89">
        <label>std::exception</label>
      </node>
      <node id="90">
        <label>std::string</label>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/classner/git/forpy/include/forpy/global.h" line="91" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/global.h" bodystart="91" bodyend="101"/>
    <listofallmembers>
      <member refid="classforpy_1_1_forpy_exception_1ad0d5f33d1155c00aaab21b81509422db" prot="public" virt="non-virtual"><scope>forpy::ForpyException</scope><name>ForpyException</name></member>
      <member refid="classforpy_1_1_forpy_exception_1ad3232c6981b8fdbbcdec7cea0e94d9f2" prot="public" virt="virtual"><scope>forpy::ForpyException</scope><name>what</name></member>
      <member refid="classforpy_1_1_forpy_exception_1a80bfe31810f38cfccaef57b4dd1fa54e" prot="private" virt="non-virtual"><scope>forpy::ForpyException</scope><name>whatstr</name></member>
      <member refid="classforpy_1_1_forpy_exception_1aa6d946871a6c69b5fe0080b4febaa5f4" prot="public" virt="virtual"><scope>forpy::ForpyException</scope><name>~ForpyException</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
