<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="shannonentropy_8h" kind="file" language="C++">
    <compoundname>shannonentropy.h</compoundname>
    <includes refid="global_8h" local="yes">../global.h</includes>
    <includes local="yes">../util/serialization/basics.h</includes>
    <includes local="no">numeric</includes>
    <includes local="no">vector</includes>
    <includes refid="types_8h" local="yes">../types.h</includes>
    <includes refid="checks_8h" local="yes">../util/checks.h</includes>
    <includes refid="exponentials_8h" local="yes">../util/exponentials.h</includes>
    <includes refid="ientropyfunction_8h" local="yes">./ientropyfunction.h</includes>
    <includedby refid="fastclassopt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/fastclassopt.h</includedby>
    <includedby refid="renyientropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/renyientropy.h</includedby>
    <includedby refid="impurities_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/impurities.h</includedby>
    <includedby refid="tsallisentropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/tsallisentropy.h</includedby>
    <incdepgraph>
      <node id="722">
        <label>functional</label>
      </node>
      <node id="701">
        <label>iomanip</label>
      </node>
      <node id="720">
        <label>../util/checks.h</label>
        <link refid="checks_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="723" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
      </node>
      <node id="723">
        <label>limits</label>
      </node>
      <node id="718">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="700">
        <label>glog/logging.h</label>
      </node>
      <node id="726">
        <label>cmath</label>
      </node>
      <node id="708">
        <label>numeric</label>
      </node>
      <node id="705">
        <label>string</label>
      </node>
      <node id="704">
        <label>./version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="712">
        <label>map</label>
      </node>
      <node id="715">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="711">
        <label>Eigen/Dense</label>
      </node>
      <node id="698">
        <label>/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h</label>
        <link refid="shannonentropy_8h"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
      <node id="727">
        <label>./ientropyfunction.h</label>
        <link refid="ientropyfunction_8h"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="717">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="709">
        <label>vector</label>
      </node>
      <node id="714">
        <label>utility</label>
      </node>
      <node id="707">
        <label>../util/serialization/basics.h</label>
      </node>
      <node id="725">
        <label>../util/exponentials.h</label>
        <link refid="exponentials_8h"/>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
      </node>
      <node id="702">
        <label>iostream</label>
      </node>
      <node id="699">
        <label>../global.h</label>
        <link refid="global_8h"/>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="716">
        <label>cstddef</label>
      </node>
      <node id="706">
        <label>csignal</label>
      </node>
      <node id="703">
        <label>thread</label>
      </node>
      <node id="724">
        <label>type_traits</label>
      </node>
      <node id="710">
        <label>../types.h</label>
        <link refid="types_8h"/>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="717" relation="include">
        </childnode>
      </node>
      <node id="719">
        <label>./serialization/variant.h</label>
      </node>
      <node id="721">
        <label>algorithm</label>
      </node>
      <node id="713">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="733">
        <label>/Users/classner/git/forpy/include/forpy/impurities/renyientropy.h</label>
        <link refid="renyientropy_8h"/>
        <childnode refid="734" relation="include">
        </childnode>
      </node>
      <node id="735">
        <label>/Users/classner/git/forpy/include/forpy/gains/entropygain.h</label>
        <link refid="entropygain_8h"/>
        <childnode refid="736" relation="include">
        </childnode>
      </node>
      <node id="731">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="736">
        <label>/Users/classner/git/forpy/include/forpy/gains/gains.h</label>
        <link refid="gains_8h"/>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="729">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/fastclassopt.h</label>
        <link refid="fastclassopt_8h"/>
        <childnode refid="730" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
      </node>
      <node id="732">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/threshold_optimizers.h</label>
        <link refid="threshold__optimizers_8h"/>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="737">
        <label>/Users/classner/git/forpy/include/forpy/impurities/tsallisentropy.h</label>
        <link refid="tsallisentropy_8h"/>
        <childnode refid="734" relation="include">
        </childnode>
      </node>
      <node id="728">
        <label>/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h</label>
        <link refid="shannonentropy_8h"/>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="733" relation="include">
        </childnode>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="737" relation="include">
        </childnode>
      </node>
      <node id="734">
        <label>/Users/classner/git/forpy/include/forpy/impurities/impurities.h</label>
        <link refid="impurities_8h"/>
        <childnode refid="735" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="730">
        <label>/Users/classner/git/forpy/include/forpy/forest.h</label>
        <link refid="forest_8h"/>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classforpy_1_1_shannon_entropy" prot="public">forpy::ShannonEntropy</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="shannonentropy_8h_1a0ff394f62f6bae1bde45734ed8b5390a" prot="public" static="no">
        <name>FORPY_IMPURITIES_SHANNONENTROPY_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="shannonentropy_8h_1a92cd6f35fb3a84335d9589d01d453066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(forpy::ShannonEntropy)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classforpy_1_1_shannon_entropy" kindref="compound">forpy::ShannonEntropy</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_IMPURITIES_SHANNONENTROPY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="shannonentropy_8h_1a0ff394f62f6bae1bde45734ed8b5390a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_IMPURITIES_SHANNONENTROPY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/basics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/checks.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/exponentials.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ientropyfunction_8h" kindref="compound">./ientropyfunction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="34" refid="classforpy_1_1_shannon_entropy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_shannon_entropy" kindref="compound">ShannonEntropy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function" kindref="compound">IEntropyFunction</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_shannon_entropy_1a474af02e7235e0db36f8e6c4131ccb35" kindref="member">ShannonEntropy</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_shannon_entropy_1a086f1e67ad5f9f49e6e5b913f12db4d9" kindref="member">~ShannonEntropy</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classforpy_1_1_shannon_entropy_1a54efad66920205c2e2e81ec76f0a5da8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_shannon_entropy_1a54efad66920205c2e2e81ec76f0a5da8" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*class_members_numbers,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;fsum)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>debug<sp/>mode,<sp/>run<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="global_8h_1a7fbe72e39fae18e8a67a0cb688afd4be" kindref="member">FASSERT</ref>(static_cast&lt;float&gt;(std::accumulate(class_members_numbers,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_members_numbers<sp/>+<sp/>n,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(0)))<sp/>==<sp/>fsum);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>the<sp/>special<sp/>case<sp/>quickly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fsum<sp/>==<sp/>0.f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.f;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>entropy_sum<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>quot;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>classical<sp/>entropy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i,<sp/>class_members_numbers++)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>value<sp/>-0*log2(0)<sp/>is<sp/>defined<sp/>to<sp/>be<sp/>0,<sp/>according<sp/>to<sp/>the<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lim_{p-&gt;0}{p*log2(p)}.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*class_members_numbers<sp/>==<sp/>0.f)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>good,<sp/>so<sp/>calculate<sp/>the<sp/>normal<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quot<sp/>=<sp/>*class_members_numbers<sp/>/<sp/>fsum;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entropy_sum<sp/>-=<sp/>quot<sp/>*<sp/>log2f(quot);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entropy_sum;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classforpy_1_1_shannon_entropy_1a96864624096f00b8a8d0f0f43b0db5f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classforpy_1_1_shannon_entropy_1a96864624096f00b8a8d0f0f43b0db5f9" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_shannon_entropy" kindref="compound">ShannonEntropy</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*self*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;forpy::ShannonEntropy&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_shannon_entropy_1a13036a52825a272848b9eb4c4fdba7d1" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function" kindref="compound">IEntropyFunction</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_shannon_entropy_1a2ada637ce7fec4bf0eccba707c85322e" kindref="member">DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classforpy_1_1_shannon_entropy" kindref="compound">ShannonEntropy</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classforpy_1_1_shannon_entropy_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_shannon_entropy_1ab2f44cbb59a08132f4c843e5225bba0e" kindref="member">cereal::access</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="74" refid="classforpy_1_1_shannon_entropy_1a1ded4612890be02803e20704f9a071a5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_shannon_entropy_1a1ded4612890be02803e20704f9a071a5" kindref="member">serialize</ref>(Archive<sp/>&amp;ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(cereal::make_nvp(</highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">,<sp/>cereal::base_class&lt;IEntropyFunction&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="shannonentropy_8h_1a92cd6f35fb3a84335d9589d01d453066" kindref="member">CEREAL_REGISTER_TYPE</ref>(<ref refid="classforpy_1_1_shannon_entropy" kindref="compound">forpy::ShannonEntropy</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_IMPURITIES_SHANNONENTROPY_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h"/>
  </compounddef>
</doxygen>
