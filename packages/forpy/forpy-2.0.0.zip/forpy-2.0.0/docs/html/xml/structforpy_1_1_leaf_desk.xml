<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structforpy_1_1_leaf_desk" kind="struct" language="C++" prot="public">
    <compoundname>forpy::LeafDesk</compoundname>
    <includes refid="desk_8h" local="no">desk.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structforpy_1_1_leaf_desk_1a26d7241c866e3ebf42458f721222f234" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref>&lt; float &gt; &gt; *</type>
        <definition>std::vector&lt;Mat&lt;float&gt; &gt;* forpy::LeafDesk::leaf_regression_map_p</definition>
        <argsstring></argsstring>
        <name>leaf_regression_map_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a shared vector of a mapping node_id-&gt;regression value. Since multiple threads never write to the same node and the vector is guaranteed to be large enough, concurrent writes can be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/desk.h" line="166" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/desk.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structforpy_1_1_leaf_desk_1a4e8cdea041b7521529af91c807e4b0d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void forpy::LeafDesk::setup</definition>
        <argsstring>(std::vector&lt; Mat&lt; float &gt;&gt; *lrmp)</argsstring>
        <name>setup</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref>&lt; float &gt;&gt; *</type>
          <declname>lrmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/desk.h" line="167" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/desk.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structforpy_1_1_leaf_desk_1a57558adac185f9beab0bda6a99bcbc94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void forpy::LeafDesk::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/desk.h" line="170" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/desk.h" bodystart="170" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref> for leaf manager training. </para>    </briefdescription>
    <detaileddescription>
<para>Storage container for threaded decider training. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="125">
        <label>forpy::LeafDesk</label>
        <link refid="structforpy_1_1_leaf_desk"/>
        <childnode refid="126" relation="usage">
          <edgelabel>leaf_regression_map_p</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>std::vector&lt; Mat&lt; float &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/classner/git/forpy/include/forpy/util/desk.h" line="162" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/desk.h" bodystart="162" bodyend="171"/>
    <listofallmembers>
      <member refid="structforpy_1_1_leaf_desk_1a26d7241c866e3ebf42458f721222f234" prot="public" virt="non-virtual"><scope>forpy::LeafDesk</scope><name>leaf_regression_map_p</name></member>
      <member refid="structforpy_1_1_leaf_desk_1a57558adac185f9beab0bda6a99bcbc94" prot="public" virt="non-virtual"><scope>forpy::LeafDesk</scope><name>reset</name></member>
      <member refid="structforpy_1_1_leaf_desk_1a4e8cdea041b7521529af91c807e4b0d7" prot="public" virt="non-virtual"><scope>forpy::LeafDesk</scope><name>setup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
