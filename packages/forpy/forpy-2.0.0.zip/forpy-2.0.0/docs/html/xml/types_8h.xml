<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="types_8h" kind="file" language="C++">
    <compoundname>types.h</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">numeric</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="hash_8h" local="yes">./util/hash.h</includes>
    <includes refid="storage_8h" local="yes">./util/storage.h</includes>
    <includedby refid="fastdprov_8h" local="yes">/Users/classner/git/forpy/include/forpy/data_providers/fastdprov.h</includedby>
    <includedby refid="idataprovider_8h" local="yes">/Users/classner/git/forpy/include/forpy/data_providers/idataprovider.h</includedby>
    <includedby refid="fastdecider_8h" local="yes">/Users/classner/git/forpy/include/forpy/deciders/fastdecider.h</includedby>
    <includedby refid="desk_8h" local="yes">/Users/classner/git/forpy/include/forpy/util/desk.h</includedby>
    <includedby refid="ithreshopt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/ithreshopt.h</includedby>
    <includedby refid="idecider_8h" local="yes">/Users/classner/git/forpy/include/forpy/deciders/idecider.h</includedby>
    <includedby refid="classificationleaf_8h" local="yes">/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h</includedby>
    <includedby refid="ileaf_8h" local="yes">/Users/classner/git/forpy/include/forpy/leafs/ileaf.h</includedby>
    <includedby refid="ientropyfunction_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h</includedby>
    <includedby refid="shannonentropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h</includedby>
    <includedby refid="fastclassopt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/fastclassopt.h</includedby>
    <includedby refid="classification__opt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/classification_opt.h</includedby>
    <includedby refid="tree_8h" local="yes">/Users/classner/git/forpy/include/forpy/tree.h</includedby>
    <includedby refid="forest_8h" local="yes">/Users/classner/git/forpy/include/forpy/forest.h</includedby>
    <includedby refid="ctpl_8h" local="yes">/Users/classner/git/forpy/include/forpy/util/threading/ctpl.h</includedby>
    <includedby refid="forpy_8h" local="yes">/Users/classner/git/forpy/include/forpy/forpy.h</includedby>
    <includedby refid="igaincalculator_8h" local="yes">/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h</includedby>
    <includedby refid="renyientropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/renyientropy.h</includedby>
    <includedby refid="tsallisentropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/tsallisentropy.h</includedby>
    <includedby refid="regressionleaf_8h" local="yes">/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h</includedby>
    <includedby refid="regression__opt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h</includedby>
    <incdepgraph>
      <node id="1153">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="1147">
        <label>numeric</label>
      </node>
      <node id="1145">
        <label>map</label>
      </node>
      <node id="1150">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1144">
        <label>Eigen/Dense</label>
      </node>
      <node id="1152">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1154" relation="include">
        </childnode>
      </node>
      <node id="1149">
        <label>vector</label>
      </node>
      <node id="1148">
        <label>utility</label>
      </node>
      <node id="1151">
        <label>cstddef</label>
      </node>
      <node id="1143">
        <label>/Users/classner/git/forpy/include/forpy/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
      </node>
      <node id="1154">
        <label>./serialization/variant.h</label>
      </node>
      <node id="1146">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1165">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/ithreshopt.h</label>
        <link refid="ithreshopt_8h"/>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
      </node>
      <node id="1178">
        <label>/Users/classner/git/forpy/include/forpy/impurities/renyientropy.h</label>
        <link refid="renyientropy_8h"/>
        <childnode refid="1179" relation="include">
        </childnode>
      </node>
      <node id="1180">
        <label>/Users/classner/git/forpy/include/forpy/gains/entropygain.h</label>
        <link refid="entropygain_8h"/>
        <childnode refid="1181" relation="include">
        </childnode>
      </node>
      <node id="1170">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/classification_opt.h</label>
        <link refid="classification__opt_8h"/>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
      </node>
      <node id="1184">
        <label>/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h</label>
        <link refid="classificationerror_8h"/>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
      </node>
      <node id="1158">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="1156">
        <label>/Users/classner/git/forpy/include/forpy/data_providers/fastdprov.h</label>
        <link refid="fastdprov_8h"/>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
      </node>
      <node id="1164">
        <label>/Users/classner/git/forpy/include/forpy/deciders/deciders.h</label>
        <link refid="deciders_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1181">
        <label>/Users/classner/git/forpy/include/forpy/gains/gains.h</label>
        <link refid="gains_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1168">
        <label>/Users/classner/git/forpy/include/forpy/leafs/leafs.h</label>
        <link refid="leafs_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1162">
        <label>/Users/classner/git/forpy/include/forpy/deciders/idecider.h</label>
        <link refid="idecider_8h"/>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
      </node>
      <node id="1171">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/fastclassopt.h</label>
        <link refid="fastclassopt_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1172" relation="include">
        </childnode>
      </node>
      <node id="1174">
        <label>/Users/classner/git/forpy/include/forpy/util/desk.h</label>
        <link refid="desk_8h"/>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1159">
        <label>/Users/classner/git/forpy/include/forpy/tree.h</label>
        <link refid="tree_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1167">
        <label>/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h</label>
        <link refid="classificationleaf_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
      </node>
      <node id="1185">
        <label>/Users/classner/git/forpy/include/forpy/gains/igaincalculator.h</label>
        <link refid="igaincalculator_8h"/>
        <childnode refid="1181" relation="include">
        </childnode>
        <childnode refid="1180" relation="include">
        </childnode>
      </node>
      <node id="1172">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/threshold_optimizers.h</label>
        <link refid="threshold__optimizers_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1182">
        <label>/Users/classner/git/forpy/include/forpy/impurities/tsallisentropy.h</label>
        <link refid="tsallisentropy_8h"/>
        <childnode refid="1179" relation="include">
        </childnode>
      </node>
      <node id="1177">
        <label>/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h</label>
        <link refid="shannonentropy_8h"/>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1182" relation="include">
        </childnode>
      </node>
      <node id="1173">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h</label>
        <link refid="regression__opt_8h"/>
        <childnode refid="1172" relation="include">
        </childnode>
      </node>
      <node id="1176">
        <label>/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h</label>
        <link refid="ientropyfunction_8h"/>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1183" relation="include">
        </childnode>
        <childnode refid="1184" relation="include">
        </childnode>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
        <childnode refid="1182" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1179">
        <label>/Users/classner/git/forpy/include/forpy/impurities/impurities.h</label>
        <link refid="impurities_8h"/>
        <childnode refid="1180" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1169">
        <label>/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h</label>
        <link refid="regressionleaf_8h"/>
        <childnode refid="1168" relation="include">
        </childnode>
      </node>
      <node id="1160">
        <label>/Users/classner/git/forpy/include/forpy/forest.h</label>
        <link refid="forest_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>/Users/classner/git/forpy/include/forpy/data_providers/idataprovider.h</label>
        <link refid="idataprovider_8h"/>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1157">
        <label>/Users/classner/git/forpy/include/forpy/data_providers/data_providers.h</label>
        <link refid="data__providers_8h"/>
        <childnode refid="1158" relation="include">
        </childnode>
      </node>
      <node id="1183">
        <label>/Users/classner/git/forpy/include/forpy/impurities/inducedentropy.h</label>
        <link refid="inducedentropy_8h"/>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1179" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
        <childnode refid="1182" relation="include">
        </childnode>
      </node>
      <node id="1166">
        <label>/Users/classner/git/forpy/include/forpy/leafs/ileaf.h</label>
        <link refid="ileaf_8h"/>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1168" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
      </node>
      <node id="1155">
        <label>/Users/classner/git/forpy/include/forpy/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1163" relation="include">
        </childnode>
        <childnode refid="1174" relation="include">
        </childnode>
        <childnode refid="1165" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
        <childnode refid="1167" relation="include">
        </childnode>
        <childnode refid="1166" relation="include">
        </childnode>
        <childnode refid="1176" relation="include">
        </childnode>
        <childnode refid="1177" relation="include">
        </childnode>
        <childnode refid="1171" relation="include">
        </childnode>
        <childnode refid="1170" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1175" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1185" relation="include">
        </childnode>
        <childnode refid="1178" relation="include">
        </childnode>
        <childnode refid="1182" relation="include">
        </childnode>
        <childnode refid="1169" relation="include">
        </childnode>
        <childnode refid="1173" relation="include">
        </childnode>
      </node>
      <node id="1163">
        <label>/Users/classner/git/forpy/include/forpy/deciders/fastdecider.h</label>
        <link refid="fastdecider_8h"/>
        <childnode refid="1164" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
      </node>
      <node id="1175">
        <label>/Users/classner/git/forpy/include/forpy/util/threading/ctpl.h</label>
        <link refid="ctpl_8h"/>
        <childnode refid="1160" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structforpy_1_1_name" prot="public">forpy::Name</innerclass>
    <innerclass refid="structforpy_1_1_name_3_01double_01_4" prot="public">forpy::Name&lt; double &gt;</innerclass>
    <innerclass refid="structforpy_1_1_name_3_01float_01_4" prot="public">forpy::Name&lt; float &gt;</innerclass>
    <innerclass refid="structforpy_1_1_name_3_01uint_01_4" prot="public">forpy::Name&lt; uint &gt;</innerclass>
    <innerclass refid="structforpy_1_1_name_3_01uint8__t_01_4" prot="public">forpy::Name&lt; uint8_t &gt;</innerclass>
    <innerclass refid="structforpy_1_1_name_3_01int16__t_01_4" prot="public">forpy::Name&lt; int16_t &gt;</innerclass>
    <innerclass refid="structforpy_1_1_name_3_01int_01_4" prot="public">forpy::Name&lt; int &gt;</innerclass>
    <innerclass refid="structforpy_1_1_split_opt_res" prot="public">forpy::SplitOptRes</innerclass>
    <innerclass refid="structforpy_1_1_todo_mark" prot="public">forpy::TodoMark</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="types_8h_1ae953c3cbecb9c8d553a4262c986c7232" prot="public" static="no">
        <name>FORPY_TYPES_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/types.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/types.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="types_8h_1ae953c3cbecb9c8d553a4262c986c7232" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_TYPES_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Dense&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hash_8h" kindref="compound">./util/hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="storage_8h" kindref="compound">./util/storage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="structforpy_1_1_name" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="structforpy_1_1_name_1a8ff3be17de639f06236b71345d134c6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_1a8ff3be17de639f06236b71345d134c6b" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="26" refid="structforpy_1_1_name_3_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref>&lt;double&gt;<sp/>{</highlight></codeline>
<codeline lineno="27" refid="structforpy_1_1_name_3_01double_01_4_1a601d9053424663ed877571a36ff27bf7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_3_01double_01_4_1a601d9053424663ed877571a36ff27bf7" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="30" refid="structforpy_1_1_name_3_01float_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref>&lt;float&gt;<sp/>{</highlight></codeline>
<codeline lineno="31" refid="structforpy_1_1_name_3_01float_01_4_1a9e71e76323dcaf5ae01d7dd97e333650" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_3_01float_01_4_1a9e71e76323dcaf5ae01d7dd97e333650" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="34" refid="structforpy_1_1_name_3_01uint_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref>&lt;<ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="35" refid="structforpy_1_1_name_3_01uint_01_4_1a0a875c4ff9df6eada2099d2053683e73" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_3_01uint_01_4_1a0a875c4ff9df6eada2099d2053683e73" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ui&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="38" refid="structforpy_1_1_name_3_01uint8__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref>&lt;uint8_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="39" refid="structforpy_1_1_name_3_01uint8__t_01_4_1a9abbe437eb7737952a01bab4dc9b14cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_3_01uint8__t_01_4_1a9abbe437eb7737952a01bab4dc9b14cf" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ui8&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="42" refid="structforpy_1_1_name_3_01int16__t_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref>&lt;int16_t&gt;<sp/>{</highlight></codeline>
<codeline lineno="43" refid="structforpy_1_1_name_3_01int16__t_01_4_1aa79e614d4059c01a896112ea94a46f21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_3_01int16__t_01_4_1aa79e614d4059c01a896112ea94a46f21" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;i16&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="46" refid="structforpy_1_1_name_3_01int_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_name" kindref="compound">Name</ref>&lt;int&gt;<sp/>{</highlight></codeline>
<codeline lineno="47" refid="structforpy_1_1_name_3_01int_01_4_1ae58f846f08dff5e8eb838c870e8304c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="structforpy_1_1_name_3_01int_01_4_1ae58f846f08dff5e8eb838c870e8304c2" kindref="member">value</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="52" refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat</ref><sp/>=<sp/>Eigen::Matrix&lt;DT,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic,<sp/>Eigen::RowMajor&gt;;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a3d22fb5cf8ae6e988763ce5d92325b39" kindref="member">MatCM</ref><sp/>=</highlight></codeline>
<codeline lineno="57" refid="namespaceforpy_1a3d22fb5cf8ae6e988763ce5d92325b39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Matrix&lt;DT,<sp/>Eigen::Dynamic,<sp/>Eigen::Dynamic,<sp/>Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="61" refid="namespaceforpy_1a4a9ac2f76a00cbaa27aa5c24ff4074a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a4a9ac2f76a00cbaa27aa5c24ff4074a5" kindref="member">MatCRef</ref><sp/>=<sp/>Eigen::Ref&lt;const<sp/>Mat&lt;DT&gt;&gt;;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="65" refid="namespaceforpy_1a6bc62385f9adac070cc01a9a77da7c92" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a6bc62385f9adac070cc01a9a77da7c92" kindref="member">MatCMCRef</ref><sp/>=<sp/>Eigen::Ref&lt;const<sp/>MatCM&lt;DT&gt;&gt;;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="69" refid="namespaceforpy_1ac50f86d38ff96870f057147546b8ad26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ac50f86d38ff96870f057147546b8ad26" kindref="member">MatRef</ref><sp/>=<sp/>Eigen::Ref&lt;Mat&lt;DT&gt;&gt;;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="73" refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec</ref><sp/>=<sp/>Eigen::Matrix&lt;DT,<sp/>Eigen::Dynamic,<sp/>1,<sp/>Eigen::ColMajor&gt;;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="76" refid="namespaceforpy_1aa81f7b8d495ea48bf7a124df377c37e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1aa81f7b8d495ea48bf7a124df377c37e0" kindref="member">VecRM</ref><sp/>=<sp/>Eigen::Matrix&lt;DT,<sp/>1,<sp/>Eigen::Dynamic,<sp/>Eigen::RowMajor&gt;;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="79" refid="namespaceforpy_1a1a2aac27f18084075bf2e3266df5d92e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a1a2aac27f18084075bf2e3266df5d92e" kindref="member">VecRef</ref><sp/>=<sp/>Eigen::Ref&lt;Vec&lt;DT&gt;&gt;;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="82" refid="namespaceforpy_1a3c6158a8044f273612042ca2746fc340" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a3c6158a8044f273612042ca2746fc340" kindref="member">VecRMRef</ref><sp/>=<sp/>Eigen::Ref&lt;VecRM&lt;DT&gt;&gt;;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="85" refid="namespaceforpy_1af98a31bf044c631db0df01d810a98aa1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1af98a31bf044c631db0df01d810a98aa1" kindref="member">VecCRef</ref><sp/>=<sp/>Eigen::Ref&lt;const<sp/>Vec&lt;DT&gt;&gt;;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DT&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a468f2a5434fcaa5e20b97caa38b8fa77" kindref="member">VecCMap</ref><sp/>=</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>Eigen::Map&lt;const<sp/>Eigen::Matrix&lt;DT,<sp/>1,<sp/>Eigen::Dynamic,<sp/>Eigen::RowMajor&gt;,</highlight></codeline>
<codeline lineno="90" refid="namespaceforpy_1a468f2a5434fcaa5e20b97caa38b8fa77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Eigen::Unaligned,<sp/>Eigen::InnerStride&lt;&gt;&gt;;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespaceforpy_1adad607d1828338b79a86c36984d87e82" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1adad607d1828338b79a86c36984d87e82" kindref="member">ECompletionLevel</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1adad607d1828338b79a86c36984d87e82a6c3a6944a808a7c0bbb6788dbec54a9f" kindref="member">Node</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1adad607d1828338b79a86c36984d87e82aa0db49ba470c1c9ae2128c3470339153" kindref="member">Level</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1adad607d1828338b79a86c36984d87e82aae94f80b3ce82062a5dd7815daa04f9d" kindref="member">Complete</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::function&lt;id_t(const<sp/>Data&lt;MatCRef&gt;<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref><sp/>&amp;,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;void(void<sp/>*)&gt;<sp/>&amp;)&gt;</highlight></codeline>
<codeline lineno="110" refid="namespaceforpy_1a1eb4de80cbd0640710566fc679d47341" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceforpy_1a1eb4de80cbd0640710566fc679d47341" kindref="member">node_predf</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="namespaceforpy_1a10a1d7990606e86abc962e7b0353163d" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a10a1d7990606e86abc962e7b0353163d" kindref="member">EThresholdSelection</ref><sp/>{<sp/><ref refid="namespaceforpy_1a10a1d7990606e86abc962e7b0353163dab57c54b3dd17ba583e26f9aca593fe47" kindref="member">LessEqOnly</ref>,<sp/><ref refid="namespaceforpy_1a10a1d7990606e86abc962e7b0353163da2eb141c99962fb996b5e09cf7502b0e7" kindref="member">GreaterOnly</ref>,<sp/><ref refid="namespaceforpy_1a10a1d7990606e86abc962e7b0353163da130c5b3473c57faa76e2a1c54e26f88e" kindref="member">Both</ref><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FT&gt;</highlight></codeline>
<codeline lineno="119" refid="structforpy_1_1_split_opt_res" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_split_opt_res" kindref="compound">SplitOptRes</ref><sp/>{</highlight></codeline>
<codeline lineno="120" refid="structforpy_1_1_split_opt_res_1a1db328f11ca654f88195cfcf2a6432fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref><sp/><ref refid="structforpy_1_1_split_opt_res_1a1db328f11ca654f88195cfcf2a6432fd" kindref="member">split_idx</ref>;</highlight></codeline>
<codeline lineno="121" refid="structforpy_1_1_split_opt_res_1adeeedc6a2a13306e09133f93c82096e6" refkind="member"><highlight class="normal"><sp/><sp/>FT<sp/><ref refid="structforpy_1_1_split_opt_res_1adeeedc6a2a13306e09133f93c82096e6" kindref="member">thresh</ref>;</highlight></codeline>
<codeline lineno="122" refid="structforpy_1_1_split_opt_res_1a1fa302c9e8eda5cb010752953ad92b30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_split_opt_res_1a1fa302c9e8eda5cb010752953ad92b30" kindref="member">gain</ref>;</highlight></codeline>
<codeline lineno="123" refid="structforpy_1_1_split_opt_res_1a5b040fe05af809ea33834a4934afb6a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_split_opt_res_1a5b040fe05af809ea33834a4934afb6a7" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="structforpy_1_1_split_opt_res_1ac51bd250c68a1966f2a5db3facb385ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="structforpy_1_1_split_opt_res_1ac51bd250c68a1966f2a5db3facb385ed" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_split_opt_res" kindref="compound">SplitOptRes&lt;FT&gt;</ref><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;forpy::SplitOptRes_X[&lt;=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.thresh</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>gain:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.gain<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>valid:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.valid<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="structforpy_1_1_split_opt_res_1a1522cf22955bd088da67b2b85ceec639" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_split_opt_res_1a1522cf22955bd088da67b2b85ceec639" kindref="member">operator==</ref>(<ref refid="structforpy_1_1_split_opt_res" kindref="compound">SplitOptRes&lt;FT&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_split_opt_res_1a1db328f11ca654f88195cfcf2a6432fd" kindref="member">split_idx</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_split_opt_res_1a1db328f11ca654f88195cfcf2a6432fd" kindref="member">split_idx</ref><sp/>&amp;&amp;<sp/><ref refid="structforpy_1_1_split_opt_res_1adeeedc6a2a13306e09133f93c82096e6" kindref="member">thresh</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_split_opt_res_1adeeedc6a2a13306e09133f93c82096e6" kindref="member">thresh</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_split_opt_res_1a1fa302c9e8eda5cb010752953ad92b30" kindref="member">gain</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_split_opt_res_1a1fa302c9e8eda5cb010752953ad92b30" kindref="member">gain</ref><sp/>&amp;&amp;<sp/><ref refid="structforpy_1_1_split_opt_res_1a5b040fe05af809ea33834a4934afb6a7" kindref="member">valid</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_split_opt_res_1a5b040fe05af809ea33834a4934afb6a7" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>mu::variant&lt;SplitOptRes&lt;float&gt;,<sp/>SplitOptRes&lt;double&gt;,<sp/>SplitOptRes&lt;uint&gt;,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplitOptRes&lt;uint8_t&gt;&gt;</highlight></codeline>
<codeline lineno="139" refid="namespaceforpy_1a4495acd70bd8943f569d59a85c1f3dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceforpy_1a4495acd70bd8943f569d59a85c1f3dce" kindref="member">OptSplitV</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="namespaceforpy_1a6249c7b591a277475fb90fd4bde68421" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;id_t,<sp/>id_t&gt;<sp/><ref refid="namespaceforpy_1a6249c7b591a277475fb90fd4bde68421" kindref="member">interv_t</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structforpy_1_1_todo_mark" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref><sp/>{</highlight></codeline>
<codeline lineno="153" refid="structforpy_1_1_todo_mark_1ade9f2c9cbfae8d68472a192a26895d46" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark_1ade9f2c9cbfae8d68472a192a26895d46" kindref="member">TodoMark</ref>()<sp/>:<sp/><ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref>(0),<sp/><ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref>(0){};</highlight></codeline>
<codeline lineno="154" refid="structforpy_1_1_todo_mark_1ab360b230300623faf68054060053812c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark_1ab360b230300623faf68054060053812c" kindref="member">TodoMark</ref>(std::shared_ptr&lt;std::vector&lt;id_t&gt;&gt;<sp/><ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref>,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a6249c7b591a277475fb90fd4bde68421" kindref="member">interv_t</ref><sp/>&amp;<ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref><sp/>&amp;<ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref>,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;<ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref>(<ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref>),</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref>(<ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref>),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref>(<ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref>),</highlight></codeline>
<codeline lineno="160" refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref>(<ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref>){};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;std::vector&lt;id_t&gt;&gt;<sp/><ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref>;</highlight></codeline>
<codeline lineno="162" refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1a6249c7b591a277475fb90fd4bde68421" kindref="member">interv_t</ref><sp/><ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref>;</highlight></codeline>
<codeline lineno="163" refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref><sp/><ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref>;</highlight></codeline>
<codeline lineno="164" refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/><ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="165" refid="structforpy_1_1_todo_mark_1ac39007f666833f23e15e4c9599db357c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark_1ac39007f666833f23e15e4c9599db357c" kindref="member">operator==</ref>(<ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref><sp/>&amp;&amp;<sp/><ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref><sp/>==<sp/>rhs.<ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref><sp/>&amp;&amp;<sp/>*<ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref><sp/>==<sp/>*(rhs.<ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169" refid="structforpy_1_1_todo_mark_1a8ffe2f2ef81371ff8886e616dfe3e3c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="structforpy_1_1_todo_mark_1a8ffe2f2ef81371ff8886e616dfe3e3c2" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;forpy::TodoMark[node_id:<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.node_id<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>depth<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.depth<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="structforpy_1_1_todo_mark_1a18741ba1f395d5716afb2eec86eb59d9" kindref="member">MOVE_ASSIGN</ref>(<ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="178" refid="structforpy_1_1_todo_mark_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="structforpy_1_1_todo_mark_1ab2f44cbb59a08132f4c843e5225bba0e" kindref="member">cereal::access</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="180" refid="structforpy_1_1_todo_mark_1ade82804b7e4ec379f1d90bc30590b143" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark_1ade82804b7e4ec379f1d90bc30590b143" kindref="member">serialize</ref>(Archive<sp/>&amp;ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(<ref refid="structforpy_1_1_todo_mark_1ae40cbab36fc4133ed8c30dd3f64cd777" kindref="member">sample_ids</ref>),<sp/>CEREAL_NVP(<ref refid="structforpy_1_1_todo_mark_1a27f7b59f85268c46f8d70984136a7fac" kindref="member">interv</ref>),<sp/>CEREAL_NVP(<ref refid="structforpy_1_1_todo_mark_1a34ee922056e00d23240e504f38a5106e" kindref="member">node_id</ref>),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CEREAL_NVP(<ref refid="structforpy_1_1_todo_mark_1a54e569823952a5162e430af248753292" kindref="member">depth</ref>));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="structforpy_1_1_todo_mark_1a1fd92037e840a657646c6d9a3ff1e7d9" kindref="member">DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="namespaceforpy_1a8fb336e98d00a2b1cfd3b18a151b98cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;ptrdiff_t,<sp/>ptrdiff_t&gt;<sp/><ref refid="namespaceforpy_1a8fb336e98d00a2b1cfd3b18a151b98cf" kindref="member">regint_t</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;std::shared_ptr&lt;std::vector&lt;size_t&gt;&gt;,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;std::vector&lt;float&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="192" refid="namespaceforpy_1a381efbba198dac450ec9c75e7c4e7daa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceforpy_1a381efbba198dac450ec9c75e7c4e7daa" kindref="member">usage_map_t</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="namespaceforpy_1a607c9d7497c11a4354005711f5f99a12" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;std::shared_ptr&lt;std::vector&lt;id_t&gt;&gt;,<sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref>&gt;<sp/><ref refid="namespaceforpy_1a607c9d7497c11a4354005711f5f99a12" kindref="member">include_pair_t</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="namespaceforpy_1a5a7b10963eacab5123565f04b2279001" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a5a7b10963eacab5123565f04b2279001" kindref="member">ESearchType</ref><sp/>{<sp/><ref refid="namespaceforpy_1a5a7b10963eacab5123565f04b2279001ac1bb62b63c65be3760b715faad0bdf8d" kindref="member">DFS</ref>,<sp/><ref refid="namespaceforpy_1a5a7b10963eacab5123565f04b2279001a838fea3c1a3e8dd6c22fe9605a701668" kindref="member">BFS</ref><sp/>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="namespaceforpy_1ab343583e2b8ac0e16dbfaa28820e87fb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_set&lt;std::vector&lt;size_t&gt;,<sp/><ref refid="structforpy_1_1vector__hasher" kindref="compound">vector_hasher</ref>&gt;<sp/><ref refid="namespaceforpy_1ab343583e2b8ac0e16dbfaa28820e87fb" kindref="member">proposal_set_t</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-variable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="namespaceforpy_1addadb8195de7379333ffb1c464396e9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1addadb8195de7379333ffb1c464396e9f" kindref="member">GAIN_EPS</ref><sp/>=<sp/>1E-7;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a4a9ac2f76a00cbaa27aa5c24ff4074a5" kindref="member">MatCRef&lt;float&gt;</ref><sp/><ref refid="namespaceforpy_1aad0cb8fa714154df0cb301140e076229" kindref="member">FORPY_ZERO_MATR</ref>(<ref refid="namespaceforpy_1a96f4b931f57ef7b106a2137e9b92939c" kindref="member">Mat&lt;float&gt;::Zero</ref>(0,<sp/>1));</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_TYPES_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/types.h"/>
  </compounddef>
</doxygen>
