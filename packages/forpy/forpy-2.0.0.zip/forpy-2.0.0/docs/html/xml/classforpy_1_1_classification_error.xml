<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classforpy_1_1_classification_error" kind="class" language="C++" prot="public">
    <compoundname>forpy::ClassificationError</compoundname>
    <basecompoundref refid="classforpy_1_1_i_entropy_function" prot="public" virt="non-virtual">forpy::IEntropyFunction</basecompoundref>
    <includes refid="classificationerror_8h" local="no">classificationerror.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classforpy_1_1_classification_error_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="47" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classforpy_1_1_classification_error_1adae19444e903a035fb5a6058d7aeff4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const ClassificationError &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classforpy_1_1_classification_error" kindref="compound">ClassificationError</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="37" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" bodystart="37" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classforpy_1_1_classification_error_1a52c04d50cc1bcca727f59efe44895a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::ClassificationError::ClassificationError</definition>
        <argsstring>()</argsstring>
        <name>ClassificationError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_classification_error_1a2489d2ffcb2ac7edac1a5a8711bbf8a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::ClassificationError::~ClassificationError</definition>
        <argsstring>()</argsstring>
        <name>~ClassificationError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_classification_error_1a92e9e34e4d7cf1f0ee0f3de2c0da2c5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>float</type>
        <definition>float forpy::ClassificationError::operator()</definition>
        <argsstring>(const float *class_members_numbers, const size_t &amp;n, const float &amp;fsum) const</argsstring>
        <name>operator()</name>
        <reimplements refid="classforpy_1_1_i_entropy_function_1a5ce363a6a07f37355cafe18cc946745b">operator()</reimplements>
        <param>
          <type>const float *</type>
          <declname>class_members_numbers</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>fsum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="27" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" bodystart="27" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_classification_error_1af5e797f69ea710bfaef396c308d81b4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool forpy::ClassificationError::operator==</definition>
        <argsstring>(const IEntropyFunction &amp;rhs) const</argsstring>
        <name>operator==</name>
        <reimplements refid="classforpy_1_1_i_entropy_function_1a97e275c34b5a0df4d9293755563bad12">operator==</reimplements>
        <param>
          <type>const <ref refid="classforpy_1_1_i_entropy_function" kindref="compound">IEntropyFunction</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deep equality comparison. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="42" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classforpy_1_1_classification_error_1a883c6f013758917d504aa4fa644268ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::ClassificationError::DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(ClassificationError)</argsstring>
        <name>DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classforpy_1_1_classification_error" kindref="compound">ClassificationError</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_classification_error_1a5221a2bcefc0f16042ab8008dc65202d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::ClassificationError::serialize</definition>
        <argsstring>(Archive &amp;ar, const uint &amp;)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="49" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" bodystart="49" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Computes the classification error as <formula id="6">$1-\max(p_i)$</formula>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>forpy::ClassificationError</label>
        <link refid="classforpy_1_1_classification_error"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>forpy::IEntropyFunction</label>
        <link refid="classforpy_1_1_i_entropy_function"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>forpy::ClassificationError</label>
        <link refid="classforpy_1_1_classification_error"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>forpy::IEntropyFunction</label>
        <link refid="classforpy_1_1_i_entropy_function"/>
      </node>
    </collaborationgraph>
    <location file="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" line="22" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h" bodystart="22" bodyend="52"/>
    <listofallmembers>
      <member refid="classforpy_1_1_classification_error_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>cereal::access</name></member>
      <member refid="classforpy_1_1_classification_error_1a52c04d50cc1bcca727f59efe44895a44" prot="public" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>ClassificationError</name></member>
      <member refid="classforpy_1_1_classification_error_1a883c6f013758917d504aa4fa644268ed" prot="private" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classforpy_1_1_i_entropy_function_1a70fe1569ee2a5cab7c0b155631a4dea9" prot="protected" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>IEntropyFunction</name></member>
      <member refid="classforpy_1_1_classification_error_1a92e9e34e4d7cf1f0ee0f3de2c0da2c5a" prot="public" virt="virtual"><scope>forpy::ClassificationError</scope><name>operator()</name></member>
      <member refid="classforpy_1_1_i_entropy_function_1a993c16c7cf4f90b21dcd10bc4c29d01a" prot="public" virt="virtual" ambiguityscope="forpy::IEntropyFunction::"><scope>forpy::ClassificationError</scope><name>operator()</name></member>
      <member refid="classforpy_1_1_i_entropy_function_1a2f12be4c28fe3ea10e85ff0f62d8ed91" prot="public" virt="virtual" ambiguityscope="forpy::IEntropyFunction::"><scope>forpy::ClassificationError</scope><name>operator()</name></member>
      <member refid="classforpy_1_1_classification_error_1adae19444e903a035fb5a6058d7aeff4f" prot="public" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>operator&lt;&lt;</name></member>
      <member refid="classforpy_1_1_classification_error_1af5e797f69ea710bfaef396c308d81b4b" prot="public" virt="virtual"><scope>forpy::ClassificationError</scope><name>operator==</name></member>
      <member refid="classforpy_1_1_classification_error_1a5221a2bcefc0f16042ab8008dc65202d" prot="private" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>serialize</name></member>
      <member refid="classforpy_1_1_classification_error_1a2489d2ffcb2ac7edac1a5a8711bbf8a8" prot="public" virt="non-virtual"><scope>forpy::ClassificationError</scope><name>~ClassificationError</name></member>
      <member refid="classforpy_1_1_i_entropy_function_1a763fc026d02d50934931e690761beecf" prot="public" virt="virtual"><scope>forpy::ClassificationError</scope><name>~IEntropyFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
