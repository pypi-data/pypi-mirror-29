<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="regression__opt_8h" kind="file" language="C++">
    <compoundname>regression_opt.h</compoundname>
    <includes refid="global_8h" local="yes">../global.h</includes>
    <includes local="yes">../util/serialization/basics.h</includes>
    <includes refid="types_8h" local="yes">../types.h</includes>
    <includes refid="desk_8h" local="yes">../util/desk.h</includes>
    <includes refid="ithreshopt_8h" local="yes">./ithreshopt.h</includes>
    <includedby refid="threshold__optimizers_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/threshold_optimizers.h</includedby>
    <incdepgraph>
      <node id="1058">
        <label>functional</label>
      </node>
      <node id="1036">
        <label>iomanip</label>
      </node>
      <node id="1056">
        <label>./ithreshopt.h</label>
        <link refid="ithreshopt_8h"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
      </node>
      <node id="1053">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="1035">
        <label>glog/logging.h</label>
      </node>
      <node id="1047">
        <label>numeric</label>
      </node>
      <node id="1040">
        <label>string</label>
      </node>
      <node id="1039">
        <label>./version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="1045">
        <label>map</label>
      </node>
      <node id="1055">
        <label>../util/desk.h</label>
        <link refid="desk_8h"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
      </node>
      <node id="1050">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
      </node>
      <node id="1044">
        <label>Eigen/Dense</label>
      </node>
      <node id="1033">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h</label>
        <link refid="regression__opt_8h"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
      </node>
      <node id="1057">
        <label>../data_providers/idataprovider.h</label>
        <link refid="idataprovider_8h"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
      </node>
      <node id="1052">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
      </node>
      <node id="1049">
        <label>vector</label>
      </node>
      <node id="1048">
        <label>utility</label>
      </node>
      <node id="1042">
        <label>../util/serialization/basics.h</label>
      </node>
      <node id="1037">
        <label>iostream</label>
      </node>
      <node id="1034">
        <label>../global.h</label>
        <link refid="global_8h"/>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
      </node>
      <node id="1051">
        <label>cstddef</label>
      </node>
      <node id="1041">
        <label>csignal</label>
      </node>
      <node id="1038">
        <label>thread</label>
      </node>
      <node id="1043">
        <label>../types.h</label>
        <link refid="types_8h"/>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
      </node>
      <node id="1054">
        <label>./serialization/variant.h</label>
      </node>
      <node id="1046">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1061">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="1060">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/threshold_optimizers.h</label>
        <link refid="threshold__optimizers_8h"/>
        <childnode refid="1061" relation="include">
        </childnode>
      </node>
      <node id="1059">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h</label>
        <link refid="regression__opt_8h"/>
        <childnode refid="1060" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classforpy_1_1_regression_opt" prot="public">forpy::RegressionOpt</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="regression__opt_8h_1aebc15ce484de097a154483a48ce6387b" prot="public" static="no">
        <name>FORPY_THRESHOLD_OPTIMIZERS_REGOPT_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="regression__opt_8h_1a7d1265b71d6b5dcfdeff5e9261c3828e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(forpy::RegressionOpt)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classforpy_1_1_regression_opt" kindref="compound">forpy::RegressionOpt</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_THRESHOLD_OPTIMIZERS_REGOPT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="regression__opt_8h_1aebc15ce484de097a154483a48ce6387b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_THRESHOLD_OPTIMIZERS_REGOPT_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/basics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/desk.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ithreshopt_8h" kindref="compound">./ithreshopt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-variable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1aab5a9f6e85bd262f7e82b302a734221d" kindref="member">DLOG_ROPT_V</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="20" refid="namespaceforpy_1a5712e8222193e1de6e570fb60ba775bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a5712e8222193e1de6e570fb60ba775bf" kindref="member">LOG_ROPT_NID</ref><sp/>=<sp/>12043;</highlight></codeline>
<codeline lineno="21" refid="namespaceforpy_1a3bab5ba01d8a7b9a601367a47d432307" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a3bab5ba01d8a7b9a601367a47d432307" kindref="member">LOG_ROPT_ALLN</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"></codeline>
<codeline lineno="33"><highlight class="preprocessor">#ifdef<sp/>FORPY_SKLEARN_COMPAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a5d8c9406a3ccb899215b2ca27514e8f9" kindref="member">REGOPT_EPS</ref><sp/>=<sp/>1E-7;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespaceforpy_1a5d8c9406a3ccb899215b2ca27514e8f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a5d8c9406a3ccb899215b2ca27514e8f9" kindref="member">REGOPT_EPS</ref><sp/>=<sp/>1E-7f;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classforpy_1_1_regression_opt" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_regression_opt" kindref="compound">RegressionOpt</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_regression_opt_1a4e8f53a86758663dd5285ee15976ed7f" kindref="member">RegressionOpt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;<ref refid="classforpy_1_1_regression_opt_1a01a2dea92f4bd8b0b416915a7954e091" kindref="member">n_thresholds</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;<ref refid="classforpy_1_1_regression_opt_1a2aef79a7cabd2adf281e9962cbabc6bb" kindref="member">gain_threshold</ref><sp/>=<sp/>1E-7f);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;IThreshOpt&gt;<sp/><ref refid="classforpy_1_1_regression_opt_1a2bed450bdc2463e2ce23dc8cc91b6987" kindref="member">create_duplicate</ref>(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*random_seed*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;RegressionOpt&gt;(<ref refid="classforpy_1_1_regression_opt_1a01a2dea92f4bd8b0b416915a7954e091" kindref="member">n_thresholds</ref>,<sp/><ref refid="classforpy_1_1_regression_opt_1a2aef79a7cabd2adf281e9962cbabc6bb" kindref="member">gain_threshold</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a224a8c2231c00483365aa69abea262ce" kindref="member">check_annotations</ref>(<ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>*dprov);</highlight></codeline>
<codeline lineno="73" refid="classforpy_1_1_regression_opt_1a6c90046d49b2c75ac919a45d18286e1b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a6c90046d49b2c75ac919a45d18286e1b" kindref="member">transfer_or_run_check</ref>(<ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>*other,<sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>*dprov)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*ot_ropt<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classforpy_1_1_regression_opt" kindref="compound">RegressionOpt</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ot_ropt<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>ot_ropt-&gt;<ref refid="classforpy_1_1_regression_opt_1a224a8c2231c00483365aa69abea262ce" kindref="member">check_annotations</ref>(dprov);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a57cf7f2e09ffcf73d7a4359d203324f2" kindref="member">full_entropy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>&amp;dprov,<sp/><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref><sp/>*)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1ae0af60d8b537f64b22cc3ea54f1a668b" kindref="member">optimize</ref>(<ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref><sp/>*)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79" refid="classforpy_1_1_regression_opt_1a925883ac643e34757fe5db5206d02b09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a925883ac643e34757fe5db5206d02b09" kindref="member">get_gain_threshold_for</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;<sp/></highlight><highlight class="comment">/*node_id*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a2aef79a7cabd2adf281e9962cbabc6bb" kindref="member">gain_threshold</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classforpy_1_1_regression_opt_1aa5a8df46ff90b2f49a409b9253dd8971" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classforpy_1_1_regression_opt_1aa5a8df46ff90b2f49a409b9253dd8971" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt" kindref="compound">RegressionOpt</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*self*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;forpy::RegressionOpt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a81342b234aa1969a4d55681867b5db7c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_split_opt_res" kindref="compound">SplitOptRes&lt;float&gt;</ref><sp/>&amp;<ref refid="classforpy_1_1_regression_opt_1a342a1e4744889a3047967cfc05468a02" kindref="member">optimize__setup</ref>(<ref refid="structforpy_1_1_decider_desk" kindref="compound">DeciderDesk</ref><sp/>&amp;d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a49425df66cb069dc60f1b80493358d81" kindref="member">optimize__sort</ref>(<ref refid="structforpy_1_1_decider_desk" kindref="compound">DeciderDesk</ref><sp/>&amp;d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;std::vector&lt;float&gt;&gt;<sp/><ref refid="classforpy_1_1_regression_opt_1a0c35d6ab0444835a6967f532685c8e5e" kindref="member">optimize__thresholds</ref>(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref><sp/>*d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96" refid="classforpy_1_1_regression_opt_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_regression_opt_1ab2f44cbb59a08132f4c843e5225bba0e" kindref="member">cereal::access</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="98" refid="classforpy_1_1_regression_opt_1abcab8d123eff87be3b6913919a18d418" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1abcab8d123eff87be3b6913919a18d418" kindref="member">serialize</ref>(Archive<sp/>&amp;ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(cereal::make_nvp(</highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">,<sp/>cereal::base_class&lt;IThreshOpt&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CEREAL_NVP(<ref refid="classforpy_1_1_regression_opt_1a01a2dea92f4bd8b0b416915a7954e091" kindref="member">n_thresholds</ref>),<sp/>CEREAL_NVP(<ref refid="classforpy_1_1_regression_opt_1a2aef79a7cabd2adf281e9962cbabc6bb" kindref="member">gain_threshold</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classforpy_1_1_regression_opt_1a01a2dea92f4bd8b0b416915a7954e091" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a01a2dea92f4bd8b0b416915a7954e091" kindref="member">n_thresholds</ref>;</highlight></codeline>
<codeline lineno="104" refid="classforpy_1_1_regression_opt_1a2aef79a7cabd2adf281e9962cbabc6bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_regression_opt_1a2aef79a7cabd2adf281e9962cbabc6bb" kindref="member">gain_threshold</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_regression_opt_1a4bf6b0336b1953a9801ed81baf5d560e" kindref="member">DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classforpy_1_1_regression_opt" kindref="compound">RegressionOpt</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="regression__opt_8h_1a7d1265b71d6b5dcfdeff5e9261c3828e" kindref="member">CEREAL_REGISTER_TYPE</ref>(<ref refid="classforpy_1_1_regression_opt" kindref="compound">forpy::RegressionOpt</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_THRESHOLD_OPTIMIZERS_REGOPT_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/threshold_optimizers/regression_opt.h"/>
  </compounddef>
</doxygen>
