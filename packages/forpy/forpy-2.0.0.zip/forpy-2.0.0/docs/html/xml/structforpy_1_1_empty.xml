<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="structforpy_1_1_empty" kind="struct" language="C++" prot="public">
    <compoundname>forpy::Empty</compoundname>
    <includes refid="storage_8h" local="no">storage.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structforpy_1_1_empty_1a54975f9711a2a2309fb5de78b7ec41cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::Empty::serialize</definition>
        <argsstring>(Archive &amp;, const uint &amp;)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="69" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structforpy_1_1_empty_1aacfeac7440d3c9612bff805df2b371cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool forpy::Empty::operator==</definition>
        <argsstring>(const Empty &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structforpy_1_1_empty" kindref="compound">Empty</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="70" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structforpy_1_1_empty_1ad2c51f52c636ca85a9a6e088d8fa2bd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float *</type>
        <definition>float* forpy::Empty::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="71" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structforpy_1_1_empty_1a228c518bc7316b589817322ff5691add" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; forpy::Empty::innerStride</definition>
        <argsstring>() const</argsstring>
        <name>innerStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="74" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structforpy_1_1_empty_1a05405f53a777ee04b9af798099566ecf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; forpy::Empty::outerStride</definition>
        <argsstring>() const</argsstring>
        <name>outerStride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="77" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="77" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structforpy_1_1_empty_1ae82631e18998ff5a3860e981afbfedfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const Empty &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structforpy_1_1_empty" kindref="compound">Empty</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="80" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A struct to represent an empty variant. </para>    </briefdescription>
    <detaileddescription>
<para>This is necessary because the first variant type must be default constructible. For types for which this is not possible, this &apos;empty&apos; type can be used. </para>    </detaileddescription>
    <location file="/Users/classner/git/forpy/include/forpy/util/storage.h" line="67" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/util/storage.h" bodystart="67" bodyend="84"/>
    <listofallmembers>
      <member refid="structforpy_1_1_empty_1ad2c51f52c636ca85a9a6e088d8fa2bd6" prot="public" virt="non-virtual"><scope>forpy::Empty</scope><name>data</name></member>
      <member refid="structforpy_1_1_empty_1a228c518bc7316b589817322ff5691add" prot="public" virt="non-virtual"><scope>forpy::Empty</scope><name>innerStride</name></member>
      <member refid="structforpy_1_1_empty_1ae82631e18998ff5a3860e981afbfedfd" prot="public" virt="non-virtual"><scope>forpy::Empty</scope><name>operator&lt;&lt;</name></member>
      <member refid="structforpy_1_1_empty_1aacfeac7440d3c9612bff805df2b371cd" prot="public" virt="non-virtual"><scope>forpy::Empty</scope><name>operator==</name></member>
      <member refid="structforpy_1_1_empty_1a05405f53a777ee04b9af798099566ecf" prot="public" virt="non-virtual"><scope>forpy::Empty</scope><name>outerStride</name></member>
      <member refid="structforpy_1_1_empty_1a54975f9711a2a2309fb5de78b7ec41cd" prot="public" virt="non-virtual"><scope>forpy::Empty</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
