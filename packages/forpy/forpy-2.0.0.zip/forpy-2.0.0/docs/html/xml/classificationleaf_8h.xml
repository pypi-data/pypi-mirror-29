<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classificationleaf_8h" kind="file" language="C++">
    <compoundname>classificationleaf.h</compoundname>
    <includes refid="global_8h" local="yes">../global.h</includes>
    <includes local="yes">../util/serialization/basics.h</includes>
    <includes local="no">numeric</includes>
    <includes local="no">vector</includes>
    <includes refid="idataprovider_8h" local="yes">../data_providers/idataprovider.h</includes>
    <includes refid="types_8h" local="yes">../types.h</includes>
    <includes local="yes">../util/serialization/eigen.h</includes>
    <includes local="yes">../util/serialization/serialization.h</includes>
    <includes refid="storage_8h" local="yes">../util/storage.h</includes>
    <includes refid="ileaf_8h" local="yes">./ileaf.h</includes>
    <includedby refid="forest_8h" local="yes">/Users/classner/git/forpy/include/forpy/forest.h</includedby>
    <includedby refid="leafs_8h" local="yes">/Users/classner/git/forpy/include/forpy/leafs/leafs.h</includedby>
    <incdepgraph>
      <node id="788">
        <label>functional</label>
      </node>
      <node id="778">
        <label>iomanip</label>
      </node>
      <node id="802">
        <label>../threshold_optimizers/ithreshopt.h</label>
        <link refid="ithreshopt_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="803" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="777">
        <label>glog/logging.h</label>
      </node>
      <node id="785">
        <label>numeric</label>
      </node>
      <node id="782">
        <label>string</label>
      </node>
      <node id="781">
        <label>./version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="791">
        <label>map</label>
      </node>
      <node id="803">
        <label>../util/desk.h</label>
        <link refid="desk_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
      <node id="775">
        <label>/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h</label>
        <link refid="classificationleaf_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
        <childnode refid="800" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
        <childnode refid="801" relation="include">
        </childnode>
      </node>
      <node id="794">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
      </node>
      <node id="790">
        <label>Eigen/Dense</label>
      </node>
      <node id="787">
        <label>../data_providers/idataprovider.h</label>
        <link refid="idataprovider_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
      </node>
      <node id="796">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="797" relation="include">
        </childnode>
        <childnode refid="798" relation="include">
        </childnode>
      </node>
      <node id="786">
        <label>vector</label>
      </node>
      <node id="793">
        <label>utility</label>
      </node>
      <node id="784">
        <label>../util/serialization/basics.h</label>
      </node>
      <node id="779">
        <label>iostream</label>
      </node>
      <node id="776">
        <label>../global.h</label>
        <link refid="global_8h"/>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
      </node>
      <node id="795">
        <label>cstddef</label>
      </node>
      <node id="800">
        <label>../util/serialization/serialization.h</label>
      </node>
      <node id="801">
        <label>./ileaf.h</label>
        <link refid="ileaf_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="802" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
      <node id="783">
        <label>csignal</label>
      </node>
      <node id="780">
        <label>thread</label>
      </node>
      <node id="789">
        <label>../types.h</label>
        <link refid="types_8h"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
        <childnode refid="796" relation="include">
        </childnode>
      </node>
      <node id="798">
        <label>./serialization/variant.h</label>
      </node>
      <node id="799">
        <label>../util/serialization/eigen.h</label>
      </node>
      <node id="792">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="806">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="807">
        <label>/Users/classner/git/forpy/include/forpy/leafs/leafs.h</label>
        <link refid="leafs_8h"/>
        <childnode refid="806" relation="include">
        </childnode>
      </node>
      <node id="804">
        <label>/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h</label>
        <link refid="classificationleaf_8h"/>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
      </node>
      <node id="805">
        <label>/Users/classner/git/forpy/include/forpy/forest.h</label>
        <link refid="forest_8h"/>
        <childnode refid="806" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classforpy_1_1_classification_leaf" prot="public">forpy::ClassificationLeaf</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="classificationleaf_8h_1a00e563df6ae3842b6ab6b5d6e3405aea" prot="public" static="no">
        <name>FORPY_LEAFS_CLASSIFICATIONLEAF_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="classificationleaf_8h_1a6da17c6be1a130aa566e22219e8515e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CEREAL_REGISTER_TYPE</definition>
        <argsstring>(forpy::ClassificationLeaf)</argsstring>
        <name>CEREAL_REGISTER_TYPE</name>
        <param>
          <type><ref refid="classforpy_1_1_classification_leaf" kindref="compound">forpy::ClassificationLeaf</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_LEAFS_CLASSIFICATIONLEAF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="classificationleaf_8h_1a00e563df6ae3842b6ab6b5d6e3405aea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_LEAFS_CLASSIFICATIONLEAF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/basics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../data_providers/idataprovider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/eigen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/serialization.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/storage.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ileaf_8h" kindref="compound">./ileaf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="classforpy_1_1_classification_leaf" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_classification_leaf" kindref="compound">ClassificationLeaf</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classforpy_1_1_classification_leaf_1ae547b00850a1854c9ed7512bf7839a44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1ae547b00850a1854c9ed7512bf7839a44" kindref="member">ClassificationLeaf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;<ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref><sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref>(<ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref>),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_classification_leaf_1adc8ff72e0c6e9a9a8fb8d7bf8a23cf37" kindref="member">class_transl_ptr</ref>(nullptr),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_classification_leaf_1a2a0581398c367e490cbcb3e6d2a50a0b" kindref="member">true_max_class</ref>(0),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_classification_leaf_1a6d9ebb7aec987931f05161ae5cd58c27" kindref="member">stored_distributions</ref>(){};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ILeaf&gt;<sp/><ref refid="classforpy_1_1_classification_leaf_1a1c3233dd4931db451bf6d33413e6810d" kindref="member">create_duplicate</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;ClassificationLeaf&gt;(<ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="43" refid="classforpy_1_1_classification_leaf_1a36e74b9993f59d2612e22370c6f0b911" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a36e74b9993f59d2612e22370c6f0b911" kindref="member">is_compatible_with</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>&amp;<sp/></highlight><highlight class="comment">/*data_provider*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a36e74b9993f59d2612e22370c6f0b911" kindref="member">is_compatible_with</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>&amp;threshopt);</highlight></codeline>
<codeline lineno="47" refid="classforpy_1_1_classification_leaf_1a767bd3bc6afdc03711a3265693c435b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a767bd3bc6afdc03711a3265693c435b8" kindref="member">transfer_or_run_check</ref>(<ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref><sp/>*other,<sp/><ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref><sp/>*thresh_opt,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>*dprov)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*cl_ot<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classforpy_1_1_classification_leaf" kindref="compound">ClassificationLeaf</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(other);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cl_ot<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_ot-&gt;<ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref><sp/>=<sp/><ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_ot-&gt;class_transl_ptr<sp/>=<sp/><ref refid="classforpy_1_1_classification_leaf_1adc8ff72e0c6e9a9a8fb8d7bf8a23cf37" kindref="member">class_transl_ptr</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_ot-&gt;true_max_class<sp/>=<sp/><ref refid="classforpy_1_1_classification_leaf_1a2a0581398c367e490cbcb3e6d2a50a0b" kindref="member">true_max_class</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;<ref refid="classforpy_1_1_i_leaf_1a5e5dfa9cdb34c445d00be4187eee832a" kindref="member">is_compatible_with</ref>(*dprov);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;<ref refid="classforpy_1_1_i_leaf_1a5e5dfa9cdb34c445d00be4187eee832a" kindref="member">is_compatible_with</ref>(*thresh_opt);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1ab5f04b67d484634301d0b681c4db3412" kindref="member">make_leaf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref><sp/>&amp;todo_info,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref><sp/>&amp;data_provider,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref><sp/>*desk)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a950b6612ecb8bbfdefd9783f821d4899" kindref="member">get_result_columns</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n_trees<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;for_forest<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;Mat&gt;</ref><sp/><ref refid="classforpy_1_1_classification_leaf_1ab495ca9402d64549209a42a286c5bb3d" kindref="member">get_result_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;for_forest<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a979b942934c8b487abccb2e0d8078ee9" kindref="member">get_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref><sp/>&amp;node_id,<sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;MatRef&gt;</ref><sp/>&amp;target_v,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;for_forest)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a979b942934c8b487abccb2e0d8078ee9" kindref="member">get_result</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;<ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;Mat&gt;</ref>&gt;<sp/>&amp;leaf_results,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data&lt;MatRef&gt;</ref><sp/>&amp;target_v,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec&lt;float&gt;</ref><sp/>&amp;weights<sp/>=<sp/><ref refid="namespaceforpy_1a36398396324079cc112b2c14d72ef20d" kindref="member">Vec&lt;float&gt;</ref>(),</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;predict_proba<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72" refid="classforpy_1_1_classification_leaf_1a8ac3f32509d9caad64ef458c0884a30a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a8ac3f32509d9caad64ef458c0884a30a" kindref="member">ensure_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classforpy_1_1_classification_leaf_1a6d9ebb7aec987931f05161ae5cd58c27" kindref="member">stored_distributions</ref>.resize(n);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="75" refid="classforpy_1_1_classification_leaf_1a61144f17050448997ea009887d62a9ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a61144f17050448997ea009887d62a9ec" kindref="member">finalize_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n)<sp/>{<sp/><ref refid="classforpy_1_1_classification_leaf_1a8ac3f32509d9caad64ef458c0884a30a" kindref="member">ensure_capacity</ref>(n);<sp/>};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a4c5c9e02904ee0bf86b96569d6ae30b5" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_leaf" kindref="compound">ILeaf</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79" refid="classforpy_1_1_classification_leaf_1a335caddba2fed27f6033bd96ce56c36a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classforpy_1_1_classification_leaf_1a335caddba2fed27f6033bd96ce56c36a" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf" kindref="compound">ClassificationLeaf</ref><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;forpy::ClassificationLeaf[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">.stored_distributions.size()</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>stored]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Vec&lt;float&gt;&gt;<sp/>&amp;<ref refid="classforpy_1_1_classification_leaf_1ab61464e2db717e2bf986f98407eb7f83" kindref="member">get_stored_dists</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classforpy_1_1_classification_leaf_1ac173386e1574d2a65c2f002a2589777f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Mat&lt;float&gt;&gt;<sp/>*<ref refid="classforpy_1_1_classification_leaf_1ac173386e1574d2a65c2f002a2589777f" kindref="member">get_map</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">cereal::access;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="93" refid="classforpy_1_1_classification_leaf_1a139b6e7f472ee2d440ca794d6a300283" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_classification_leaf_1a139b6e7f472ee2d440ca794d6a300283" kindref="member">serialize</ref>(Archive<sp/>&amp;ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref>)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(cereal::make_nvp(</highlight><highlight class="stringliteral">&quot;base&quot;</highlight><highlight class="normal">,<sp/>cereal::base_class&lt;ILeaf&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CEREAL_NVP(<ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref>),<sp/>CEREAL_NVP(<ref refid="classforpy_1_1_classification_leaf_1a6d9ebb7aec987931f05161ae5cd58c27" kindref="member">stored_distributions</ref>));</highlight></codeline>
<codeline lineno="96" refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" refkind="member"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/><ref refid="classforpy_1_1_classification_leaf_1ae5a92893224d575e96f24ea8aa5728d5" kindref="member">n_classes</ref>;</highlight></codeline>
<codeline lineno="99" refid="classforpy_1_1_classification_leaf_1adc8ff72e0c6e9a9a8fb8d7bf8a23cf37" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;std::vector&lt;uint&gt;&gt;<sp/><ref refid="classforpy_1_1_classification_leaf_1adc8ff72e0c6e9a9a8fb8d7bf8a23cf37" kindref="member">class_transl_ptr</ref>;</highlight></codeline>
<codeline lineno="100" refid="classforpy_1_1_classification_leaf_1a2a0581398c367e490cbcb3e6d2a50a0b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/><ref refid="classforpy_1_1_classification_leaf_1a2a0581398c367e490cbcb3e6d2a50a0b" kindref="member">true_max_class</ref>;</highlight></codeline>
<codeline lineno="101" refid="classforpy_1_1_classification_leaf_1a6d9ebb7aec987931f05161ae5cd58c27" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;Vec&lt;float&gt;&gt;<sp/><ref refid="classforpy_1_1_classification_leaf_1a6d9ebb7aec987931f05161ae5cd58c27" kindref="member">stored_distributions</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="classificationleaf_8h_1a6da17c6be1a130aa566e22219e8515e5" kindref="member">CEREAL_REGISTER_TYPE</ref>(<ref refid="classforpy_1_1_classification_leaf" kindref="compound">forpy::ClassificationLeaf</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_LEAFS_CLASSIFICATIONLEAF_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/leafs/classificationleaf.h"/>
  </compounddef>
</doxygen>
