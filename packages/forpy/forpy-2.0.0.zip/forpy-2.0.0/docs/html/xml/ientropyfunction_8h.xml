<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="ientropyfunction_8h" kind="file" language="C++">
    <compoundname>ientropyfunction.h</compoundname>
    <includes refid="global_8h" local="yes">../global.h</includes>
    <includes local="yes">../util/serialization/basics.h</includes>
    <includes local="no">vector</includes>
    <includes refid="types_8h" local="yes">../types.h</includes>
    <includedby refid="fastclassopt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/fastclassopt.h</includedby>
    <includedby refid="shannonentropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h</includedby>
    <includedby refid="classification__opt_8h" local="yes">/Users/classner/git/forpy/include/forpy/threshold_optimizers/classification_opt.h</includedby>
    <includedby refid="inducedentropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/inducedentropy.h</includedby>
    <includedby refid="classificationerror_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h</includedby>
    <includedby refid="impurities_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/impurities.h</includedby>
    <includedby refid="renyientropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/renyientropy.h</includedby>
    <includedby refid="tsallisentropy_8h" local="yes">/Users/classner/git/forpy/include/forpy/impurities/tsallisentropy.h</includedby>
    <includedby refid="regressionleaf_8h" local="yes">/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h</includedby>
    <incdepgraph>
      <node id="545">
        <label>iomanip</label>
      </node>
      <node id="562">
        <label>mapbox/variant_cast.hpp</label>
      </node>
      <node id="544">
        <label>glog/logging.h</label>
      </node>
      <node id="557">
        <label>numeric</label>
      </node>
      <node id="549">
        <label>string</label>
      </node>
      <node id="548">
        <label>./version.h</label>
        <link refid="version_8h"/>
      </node>
      <node id="555">
        <label>map</label>
      </node>
      <node id="559">
        <label>./util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="560" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
      </node>
      <node id="554">
        <label>Eigen/Dense</label>
      </node>
      <node id="542">
        <label>/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h</label>
        <link refid="ientropyfunction_8h"/>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="551" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="553" relation="include">
        </childnode>
      </node>
      <node id="561">
        <label>./util/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="562" relation="include">
        </childnode>
        <childnode refid="563" relation="include">
        </childnode>
      </node>
      <node id="552">
        <label>vector</label>
      </node>
      <node id="558">
        <label>utility</label>
      </node>
      <node id="551">
        <label>../util/serialization/basics.h</label>
      </node>
      <node id="546">
        <label>iostream</label>
      </node>
      <node id="543">
        <label>../global.h</label>
        <link refid="global_8h"/>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
        <childnode refid="548" relation="include">
        </childnode>
        <childnode refid="549" relation="include">
        </childnode>
        <childnode refid="550" relation="include">
        </childnode>
      </node>
      <node id="560">
        <label>cstddef</label>
      </node>
      <node id="550">
        <label>csignal</label>
      </node>
      <node id="547">
        <label>thread</label>
      </node>
      <node id="553">
        <label>../types.h</label>
        <link refid="types_8h"/>
        <childnode refid="554" relation="include">
        </childnode>
        <childnode refid="555" relation="include">
        </childnode>
        <childnode refid="556" relation="include">
        </childnode>
        <childnode refid="557" relation="include">
        </childnode>
        <childnode refid="558" relation="include">
        </childnode>
        <childnode refid="552" relation="include">
        </childnode>
        <childnode refid="559" relation="include">
        </childnode>
        <childnode refid="561" relation="include">
        </childnode>
      </node>
      <node id="563">
        <label>./serialization/variant.h</label>
      </node>
      <node id="556">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="570">
        <label>/Users/classner/git/forpy/include/forpy/impurities/renyientropy.h</label>
        <link refid="renyientropy_8h"/>
        <childnode refid="571" relation="include">
        </childnode>
      </node>
      <node id="572">
        <label>/Users/classner/git/forpy/include/forpy/gains/entropygain.h</label>
        <link refid="entropygain_8h"/>
        <childnode refid="573" relation="include">
        </childnode>
      </node>
      <node id="575">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/classification_opt.h</label>
        <link refid="classification__opt_8h"/>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
      </node>
      <node id="577">
        <label>/Users/classner/git/forpy/include/forpy/impurities/classificationerror.h</label>
        <link refid="classificationerror_8h"/>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
      </node>
      <node id="567">
        <label>/Users/classner/git/forpy/include/forpy/forpy.h</label>
        <link refid="forpy_8h"/>
      </node>
      <node id="579">
        <label>/Users/classner/git/forpy/include/forpy/leafs/leafs.h</label>
        <link refid="leafs_8h"/>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="573">
        <label>/Users/classner/git/forpy/include/forpy/gains/gains.h</label>
        <link refid="gains_8h"/>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="565">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/fastclassopt.h</label>
        <link refid="fastclassopt_8h"/>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
      </node>
      <node id="568">
        <label>/Users/classner/git/forpy/include/forpy/threshold_optimizers/threshold_optimizers.h</label>
        <link refid="threshold__optimizers_8h"/>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="574">
        <label>/Users/classner/git/forpy/include/forpy/impurities/tsallisentropy.h</label>
        <link refid="tsallisentropy_8h"/>
        <childnode refid="571" relation="include">
        </childnode>
      </node>
      <node id="569">
        <label>/Users/classner/git/forpy/include/forpy/impurities/shannonentropy.h</label>
        <link refid="shannonentropy_8h"/>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
      </node>
      <node id="564">
        <label>/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h</label>
        <link refid="ientropyfunction_8h"/>
        <childnode refid="565" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
      </node>
      <node id="571">
        <label>/Users/classner/git/forpy/include/forpy/impurities/impurities.h</label>
        <link refid="impurities_8h"/>
        <childnode refid="572" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="578">
        <label>/Users/classner/git/forpy/include/forpy/leafs/regressionleaf.h</label>
        <link refid="regressionleaf_8h"/>
        <childnode refid="579" relation="include">
        </childnode>
      </node>
      <node id="566">
        <label>/Users/classner/git/forpy/include/forpy/forest.h</label>
        <link refid="forest_8h"/>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="576">
        <label>/Users/classner/git/forpy/include/forpy/impurities/inducedentropy.h</label>
        <link refid="inducedentropy_8h"/>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classforpy_1_1_i_entropy_function" prot="public">forpy::IEntropyFunction</innerclass>
    <innernamespace refid="namespaceforpy">forpy</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="ientropyfunction_8h_1a18def1ce84684dbad1369608a243a93c" prot="public" static="no">
        <name>FORPY_IMPURITIES_IENTROPYFUNCTION_H_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h" line="4" column="9" bodyfile="/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Author:<sp/>Christoph<sp/>Lassner.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORPY_IMPURITIES_IENTROPYFUNCTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="ientropyfunction_8h_1a18def1ce84684dbad1369608a243a93c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORPY_IMPURITIES_IENTROPYFUNCTION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/serialization/basics.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceforpy" kindref="compound">forpy</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-variable&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespaceforpy_1a725dc76ef6d1d57ccda845fdd1fa5943" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1a725dc76ef6d1d57ccda845fdd1fa5943" kindref="member">ENTROPY_EPS</ref><sp/>=<sp/>1E-7;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classforpy_1_1_i_entropy_function" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_i_entropy_function" kindref="compound">IEntropyFunction</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a763fc026d02d50934931e690761beecf" kindref="member">~IEntropyFunction</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classforpy_1_1_i_entropy_function_1a993c16c7cf4f90b21dcd10bc4c29d01a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a993c16c7cf4f90b21dcd10bc4c29d01a" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;class_members_numbers,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;fsum)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a993c16c7cf4f90b21dcd10bc4c29d01a" kindref="member">operator()</ref>(&amp;class_members_numbers[0],<sp/>class_members_numbers.size(),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsum);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a993c16c7cf4f90b21dcd10bc4c29d01a" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*class_members_numbers,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;fsum)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="global_8h_1a287409078f3b1637bf3eff5bb81ef767" kindref="member">VIRTUAL</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a993c16c7cf4f90b21dcd10bc4c29d01a" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;class_members_numbers)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a97e275c34b5a0df4d9293755563bad12" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function" kindref="compound">IEntropyFunction</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="global_8h_1a287409078f3b1637bf3eff5bb81ef767" kindref="member">VIRTUAL</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_i_entropy_function_1a70fe1569ee2a5cab7c0b155631a4dea9" kindref="member">IEntropyFunction</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71" refid="classforpy_1_1_i_entropy_function_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classforpy_1_1_i_entropy_function_1ab2f44cbb59a08132f4c843e5225bba0e" kindref="member">cereal::access</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="73" refid="classforpy_1_1_i_entropy_function_1a2b18592a03237e28ba519b39ca8851ea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classforpy_1_1_i_entropy_function_1a2b18592a03237e28ba519b39ca8851ea" kindref="member">serialize</ref>(Archive<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref><sp/>&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classforpy_1_1_i_entropy_function_1a87e8dece40ac0249a23b0ea6614bc993" kindref="member">DISALLOW_COPY_AND_ASSIGN</ref>(<ref refid="classforpy_1_1_i_entropy_function" kindref="compound">IEntropyFunction</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>forpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>FORPY_IMPURITIES_IENTROPYFUNCTION_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/classner/git/forpy/include/forpy/impurities/ientropyfunction.h"/>
  </compounddef>
</doxygen>
