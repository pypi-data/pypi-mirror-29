<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classforpy_1_1_i_decider" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>forpy::IDecider</compoundname>
    <derivedcompoundref refid="classforpy_1_1_fast_decider" prot="public" virt="non-virtual">forpy::FastDecider</derivedcompoundref>
    <includes refid="idecider_8h" local="no">idecider.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classforpy_1_1_i_decider_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="110" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a9c43b5883db0cc8a53d12af0f13da3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual forpy::IDecider::~IDecider</definition>
        <argsstring>()</argsstring>
        <name>~IDecider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1aef2f4d86f28b9521ffb691058231aaaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classforpy_1_1_i_decider" kindref="compound">IDecider</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;IDecider&gt; forpy::IDecider::create_duplicate</definition>
        <argsstring>(const uint &amp;random_seed) const VIRTUAL_PTR</argsstring>
        <name>create_duplicate</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a67e51e5b1c29fbf60860faa9b8c8ec68">create_duplicate</reimplementedby>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>random_seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an equivalent, but empty, duplicate. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1ad5b4d3ca5016e3d1c32d5dffbf4058a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void forpy::IDecider::make_node</definition>
        <argsstring>(const TodoMark &amp;todo_info, const uint &amp;min_samples_at_leaf, const IDataProvider &amp;data_provider, Desk *d) const VIRTUAL_VOID</argsstring>
        <name>make_node</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a3d05e3fd5701735e77efb65e2481dce1">make_node</reimplementedby>
        <param>
          <type>const <ref refid="structforpy_1_1_todo_mark" kindref="compound">TodoMark</ref> &amp;</type>
          <declname>todo_info</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
          <declname>min_samples_at_leaf</declname>
        </param>
        <param>
          <type>const <ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref> &amp;</type>
          <declname>data_provider</declname>
        </param>
        <param>
          <type><ref refid="structforpy_1_1_desk" kindref="compound">Desk</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Optimizes a classifier for the given data and stores the params. </para>        </briefdescription>
        <detaileddescription>
<para>This method must either set make_to_leaf to true or assure that at least the minimum amount of samples per leaf is contained in each of element_list_left and element_list_right. In the case that make_leaf is true, the list pointers may even be returned uninitialized.</para><para>If it is necessary to enforce additional growing constraints for the tree, this is the right place (e.g. have a minimum number of samples per node). The classifier manager can take these constraints into account and may return make_to_leaf accordingly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1adee37041bacecad8202b32183c72ab42" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool forpy::IDecider::is_compatible_with</definition>
        <argsstring>(const IDataProvider &amp;dprov) VIRTUAL(bool)</argsstring>
        <name>is_compatible_with</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1aa86d9abb1b2702291fc5555fd539ff1c">is_compatible_with</reimplementedby>
        <param>
          <type>const <ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref> &amp;</type>
          <declname>dprov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a1f40bdaafeafafb9f1465dc432981ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void forpy::IDecider::transfer_or_run_check</definition>
        <argsstring>(const std::shared_ptr&lt; IDecider &gt; &amp;other, IDataProvider *dprov) VIRTUAL_VOID</argsstring>
        <name>transfer_or_run_check</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1acc93b80b57c9fe93b66b8c0949f1c33d">transfer_or_run_check</reimplementedby>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classforpy_1_1_i_decider" kindref="compound">IDecider</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classforpy_1_1_i_data_provider" kindref="compound">IDataProvider</ref> *</type>
          <declname>dprov</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1ab028c21b3ddbf2381e0a9aeeee82b720" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void forpy::IDecider::ensure_capacity</definition>
        <argsstring>(const size_t &amp;n_samples) VIRTUAL_VOID</argsstring>
        <name>ensure_capacity</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1ae63a08fe363546bd5b660c480e58b2fc">ensure_capacity</reimplementedby>
        <param>
          <type>const size_t &amp;</type>
          <declname>n_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a73b3b353b7a4a285f57eaf6be4f0df72" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void forpy::IDecider::finalize_capacity</definition>
        <argsstring>(const size_t &amp;size) VIRTUAL_VOID</argsstring>
        <name>finalize_capacity</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1ae525593966b44964aa0690aad90cf62d">finalize_capacity</reimplementedby>
        <param>
          <type>const size_t &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a031a8efd9b13282eb4466e4a82d47cd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool forpy::IDecider::decide</definition>
        <argsstring>(const id_t &amp;node_id, const Data&lt; MatCRef &gt; &amp;data, const std::function&lt; void(void *)&gt; &amp;dptf=nullptr) const VIRTUAL(bool)</argsstring>
        <name>decide</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a1f3ad502d63b3ff3764826ac0590289b">decide</reimplementedby>
        <param>
          <type>const <ref refid="namespaceforpy_1a324c9643e02b76477c3a99a48773be8c" kindref="member">id_t</ref> &amp;</type>
          <declname>node_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1a724d37691de11a57b50b9935b5550a89" kindref="member">Data</ref>&lt; <ref refid="namespaceforpy_1a4a9ac2f76a00cbaa27aa5c24ff4074a5" kindref="member">MatCRef</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::function&lt; void(void *)&gt; &amp;</type>
          <declname>dptf</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Makes a decision for a node with already optimized parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The classifier parameters must have been optimized for the node_id before this method is called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The node id of the node for which the decision should be made. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dptf</parametername>
</parameternamelist>
<parameterdescription>
<para>Feature transformation function; currently unused. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true, if the decision goes to left, false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a88dbf8036bcf68312011743ffc821646" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool forpy::IDecider::supports_weights</definition>
        <argsstring>() const VIRTUAL(bool)</argsstring>
        <name>supports_weights</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a1ee1ea0966f7839935d837d04aa9ac6e">supports_weights</reimplementedby>
        <briefdescription>
<para>Whether this classifier manager supports sample weights during training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1ab69daae427d6bf2de46d0ddaa4cff851" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t forpy::IDecider::get_data_dim</definition>
        <argsstring>() const VIRTUAL(size_t)</argsstring>
        <name>get_data_dim</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a94866bb04b4e741c86e269573a29beb4">get_data_dim</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the input dimension of the feature selection provider. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a09cb4f288700500b09973798635c4825" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void forpy::IDecider::set_data_dim</definition>
        <argsstring>(const size_t &amp;val) VIRTUAL_VOID</argsstring>
        <name>set_data_dim</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a73c104731adf64816cdfa32d78f153b5">set_data_dim</reimplementedby>
        <param>
          <type>const size_t &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a5d181bbb00717066c9902572d6e550af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classforpy_1_1_i_thresh_opt" kindref="compound">IThreshOpt</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;IThreshOpt&gt; forpy::IDecider::get_threshopt</definition>
        <argsstring>() const VIRTUAL_PTR</argsstring>
        <name>get_threshopt</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a1f479e3186a72c7b0da12f6ce6bb651e">get_threshopt</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a9b6167ef333634bd58acb5e619643820" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool forpy::IDecider::operator==</definition>
        <argsstring>(const IDecider &amp;rhs) const VIRTUAL(bool)</argsstring>
        <name>operator==</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a2ec7bb7c730aa188f168f9a5c16b54a0">operator==</reimplementedby>
        <param>
          <type>const <ref refid="classforpy_1_1_i_decider" kindref="compound">IDecider</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a2763e055cea08b350f03d95bd33971ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::pair&lt; const std::vector&lt; size_t &gt; *, const mu::variant&lt; std::vector&lt; float &gt;, std::vector&lt; double &gt;, std::vector&lt; uint32_t &gt;, std::vector&lt; uint8_t &gt; &gt; * &gt;</type>
        <definition>virtual std::pair&lt;const std::vector&lt;size_t&gt; *, const mu::variant&lt;std::vector&lt;float&gt;, std::vector&lt;double&gt;, std::vector&lt;uint32_t&gt;, std::vector&lt;uint8_t&gt; &gt; *&gt; forpy::IDecider::get_maps</definition>
        <argsstring>() const =0</argsstring>
        <name>get_maps</name>
        <reimplementedby refid="classforpy_1_1_fast_decider_1a2242294fea19611e426f208deb02932c">get_maps</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a9ae8bfccf6ca473038089c3f12d6e8e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::IDecider::IDecider</definition>
        <argsstring>()</argsstring>
        <name>IDecider</name>
        <briefdescription>
<para><ref refid="structforpy_1_1_empty" kindref="compound">Empty</ref> constructor to allow inheritance though DISALLOW_COPY_AND_ASSIGN is applied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classforpy_1_1_i_decider_1ac652a387bf586015676e593d3120293d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void forpy::IDecider::serialize</definition>
        <argsstring>(Archive &amp;, const uint &amp;)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
        </param>
        <param>
          <type>const <ref refid="namespaceforpy_1ad05e34c62859518b61b76b5085e913d8" kindref="member">uint</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="112" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classforpy_1_1_i_decider_1a042f1744289536d5f82167f38395e17f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>forpy::IDecider::DISALLOW_COPY_AND_ASSIGN</definition>
        <argsstring>(IDecider)</argsstring>
        <name>DISALLOW_COPY_AND_ASSIGN</name>
        <param>
          <type><ref refid="classforpy_1_1_i_decider" kindref="compound">IDecider</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for the decider. It does the optimization of the deciding classifier for each node and stores the parameters. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input_dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the data to classify. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>annotation_dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype of the annotations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feature_dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>The datatype in which features are calculated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="98">
        <label>forpy::IDecider</label>
        <link refid="classforpy_1_1_i_decider"/>
      </node>
      <node id="99">
        <label>forpy::FastDecider</label>
        <link refid="classforpy_1_1_fast_decider"/>
        <childnode refid="98" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" line="31" column="1" bodyfile="/Users/classner/git/forpy/include/forpy/deciders/idecider.h" bodystart="31" bodyend="115"/>
    <listofallmembers>
      <member refid="classforpy_1_1_i_decider_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" virt="non-virtual"><scope>forpy::IDecider</scope><name>cereal::access</name></member>
      <member refid="classforpy_1_1_i_decider_1aef2f4d86f28b9521ffb691058231aaaf" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>create_duplicate</name></member>
      <member refid="classforpy_1_1_i_decider_1a031a8efd9b13282eb4466e4a82d47cd0" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>decide</name></member>
      <member refid="classforpy_1_1_i_decider_1a042f1744289536d5f82167f38395e17f" prot="private" virt="non-virtual"><scope>forpy::IDecider</scope><name>DISALLOW_COPY_AND_ASSIGN</name></member>
      <member refid="classforpy_1_1_i_decider_1ab028c21b3ddbf2381e0a9aeeee82b720" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>ensure_capacity</name></member>
      <member refid="classforpy_1_1_i_decider_1a73b3b353b7a4a285f57eaf6be4f0df72" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>finalize_capacity</name></member>
      <member refid="classforpy_1_1_i_decider_1ab69daae427d6bf2de46d0ddaa4cff851" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>get_data_dim</name></member>
      <member refid="classforpy_1_1_i_decider_1a2763e055cea08b350f03d95bd33971ae" prot="public" virt="pure-virtual"><scope>forpy::IDecider</scope><name>get_maps</name></member>
      <member refid="classforpy_1_1_i_decider_1a5d181bbb00717066c9902572d6e550af" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>get_threshopt</name></member>
      <member refid="classforpy_1_1_i_decider_1a9ae8bfccf6ca473038089c3f12d6e8e8" prot="protected" virt="non-virtual"><scope>forpy::IDecider</scope><name>IDecider</name></member>
      <member refid="classforpy_1_1_i_decider_1adee37041bacecad8202b32183c72ab42" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>is_compatible_with</name></member>
      <member refid="classforpy_1_1_i_decider_1ad5b4d3ca5016e3d1c32d5dffbf4058a4" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>make_node</name></member>
      <member refid="classforpy_1_1_i_decider_1a9b6167ef333634bd58acb5e619643820" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>operator==</name></member>
      <member refid="classforpy_1_1_i_decider_1ac652a387bf586015676e593d3120293d" prot="private" virt="non-virtual"><scope>forpy::IDecider</scope><name>serialize</name></member>
      <member refid="classforpy_1_1_i_decider_1a09cb4f288700500b09973798635c4825" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>set_data_dim</name></member>
      <member refid="classforpy_1_1_i_decider_1a88dbf8036bcf68312011743ffc821646" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>supports_weights</name></member>
      <member refid="classforpy_1_1_i_decider_1a1f40bdaafeafafb9f1465dc432981ce5" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>transfer_or_run_check</name></member>
      <member refid="classforpy_1_1_i_decider_1a9c43b5883db0cc8a53d12af0f13da3b3" prot="public" virt="virtual"><scope>forpy::IDecider</scope><name>~IDecider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
