Metadata-Version: 1.2
Name: nbtoolbelt
Version: 2018.2.dev0
Summary: Tools to work with Jupyter notebooks
Home-page: https://gitlab.tue.nl/jupyter-projects/nbtoolbelt
Author: Tom Verhoeff
Author-email: t.verhoeff@tue.nl
License: MIT License
Description: `nbtoolbelt <https://gitlab.tue.nl/jupyter-projects/nbtoolbelt>`__ - Tools to Work with Jupyter Notebooks
        =========================================================================================================
        
        -  ``validate``: validate notebooks
        -  ``head``: show head or tail of notebooks
        -  ``dump``: dump notebook info and source on terminal
        -  ``stat``\ s: summarize notebooks with statistics
        -  ``view``: view notebook, including all embedded images, LaTeX, and
           HTML in a browser
        -  ``cat``: catenate multiple notebooks
        -  ``clean``: clean notebooks by removing specified elements
        -  ``run``: execute notebooks, with pre/post cleaning
        -  ``split``: split notebooks into MarkDown, code, and raw
        -  ``punch``: punch holes into notebooks and fill them (for creating
           exercises)
        
        Available as library functions and as configurable command-line scripts.
        
        Installation
        ------------
        
        .. code:: bash
        
            pip install nbtoolbelt
        
        Documentation
        -------------
        
        Documentation is available on `Read the
        Docs <https://nbtoolbelt.readthedocs.io>`__.
        
        On the command line, you can use the options ``-h`` or ``--help``.
        
        Usage
        -----
        
        On the command line:
        
        .. code:: bash
        
            nbtb [-h] [options] tool [options] nb.ipynb ...
        
        As library: see documentation
        
        Testing
        -------
        
        .. code:: bash
        
            pip install nbtoolbelt[test]
        
        ``nbtoolbelt`` comes with a set of automatic test cases for ``pytest``.
        
        Developing
        ----------
        
        Some useful commands, and where to run them:
        
        -  In ``nbtoolbelt/docs/``,
        
           -  clean build directory: ``make clean``
           -  create html documentation tree: ``make html``
           -  create pdf documentation: ``make latexpdf``
           -  determine size of documentation:
              :literal:`wc `find . -name '*.rst'\``
        
        -  In ``nbtoolbelt/test/``,
        
           -  run all test cases: ``pytest .``
        
        -  In ``nbtoolbelt/``,
        
           -  test package configuration: ``python setup.py check -r -s``
           -  create source distribution and wheel:
              ``python setup.py sdist bdist_wheel``
        
        -  In ``nbtoolbelt/dist/``
        
           -  create digital signature: ``gpg --detach-sign -a ...``
           -  upload to PyPI: ``twine upload ...``
        
        -  In ``nbtoolbelt/src/``,
        
           -  determine size of code: :literal:`wc `find . -name '*.py'\``
        
        License
        -------
        
        Copyright (c) 2017 - Eindhoven University of Technology, The Netherlands
        
        This software is made available under the terms of the `MIT
        License <LICENSE.txt>`__.
        
        Resources
        ---------
        
        -  `Python <https://python.org/>`__: Python 3
        -  `Jupyter <https://jupyter.org/>`__
        -  `Jupyter notebook format <https://github.com/jupyter/nbformat/>`__
        
           -  `Documentation <https://nbformat.readthedocs.io/en/latest/format_description.html>`__
           -  Includes a format validator based on JSON schemas, such as
              `nbformat.v4.schema.json <https://github.com/jupyter/nbformat/blob/master/nbformat/v4/nbformat.v4.schema.json>`__
        
        -  `JSON Schema <http://json-schema.org/>`__
        -  `./jq <https://stedolan.github.io/jq/>`__: a lightweight and flexible
           command-line JSON processor
        -  `Python 3 Patterns, Recipes and
           Idioms <https://python-3-patterns-idioms-test.readthedocs.io/en/latest/index.html>`__
        
Keywords: Interactive,Interpreter,Shell
Platform: Linux
Platform: Mac OS X
Platform: Windows
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.5
Classifier: Framework :: Jupyter
Requires-Python: >=3.5
