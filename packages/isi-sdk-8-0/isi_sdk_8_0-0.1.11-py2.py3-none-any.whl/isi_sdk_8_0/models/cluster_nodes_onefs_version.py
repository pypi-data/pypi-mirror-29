# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class ClusterNodesOnefsVersion(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        ClusterNodesOnefsVersion - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'bugfix': 'int',
            'maintenance': 'int',
            'major': 'int',
            'minor': 'int',
            'version': 'str'
        }

        self.attribute_map = {
            'bugfix': 'bugfix',
            'maintenance': 'maintenance',
            'major': 'major',
            'minor': 'minor',
            'version': 'version'
        }

        self._bugfix = None
        self._maintenance = None
        self._major = None
        self._minor = None
        self._version = None

    @property
    def bugfix(self):
        """
        Gets the bugfix of this ClusterNodesOnefsVersion.


        :return: The bugfix of this ClusterNodesOnefsVersion.
        :rtype: int
        """
        return self._bugfix

    @bugfix.setter
    def bugfix(self, bugfix):
        """
        Sets the bugfix of this ClusterNodesOnefsVersion.


        :param bugfix: The bugfix of this ClusterNodesOnefsVersion.
        :type: int
        """
        
        self._bugfix = bugfix

    @property
    def maintenance(self):
        """
        Gets the maintenance of this ClusterNodesOnefsVersion.


        :return: The maintenance of this ClusterNodesOnefsVersion.
        :rtype: int
        """
        return self._maintenance

    @maintenance.setter
    def maintenance(self, maintenance):
        """
        Sets the maintenance of this ClusterNodesOnefsVersion.


        :param maintenance: The maintenance of this ClusterNodesOnefsVersion.
        :type: int
        """
        
        self._maintenance = maintenance

    @property
    def major(self):
        """
        Gets the major of this ClusterNodesOnefsVersion.


        :return: The major of this ClusterNodesOnefsVersion.
        :rtype: int
        """
        return self._major

    @major.setter
    def major(self, major):
        """
        Sets the major of this ClusterNodesOnefsVersion.


        :param major: The major of this ClusterNodesOnefsVersion.
        :type: int
        """
        
        self._major = major

    @property
    def minor(self):
        """
        Gets the minor of this ClusterNodesOnefsVersion.


        :return: The minor of this ClusterNodesOnefsVersion.
        :rtype: int
        """
        return self._minor

    @minor.setter
    def minor(self, minor):
        """
        Sets the minor of this ClusterNodesOnefsVersion.


        :param minor: The minor of this ClusterNodesOnefsVersion.
        :type: int
        """
        
        self._minor = minor

    @property
    def version(self):
        """
        Gets the version of this ClusterNodesOnefsVersion.
        hex representation of the OneFS version integer.

        :return: The version of this ClusterNodesOnefsVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """
        Sets the version of this ClusterNodesOnefsVersion.
        hex representation of the OneFS version integer.

        :param version: The version of this ClusterNodesOnefsVersion.
        :type: str
        """
        
        self._version = version

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

