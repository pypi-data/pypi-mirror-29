# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems
import re


class SummaryClientClientItem(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        SummaryClientClientItem - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            '_class': 'str',
            '_in': 'float',
            'in_avg': 'float',
            'in_max': 'float',
            'in_min': 'float',
            'local_addr': 'str',
            'local_name': 'str',
            'node': 'int',
            'num_operations': 'int',
            'operation_rate': 'float',
            'out': 'float',
            'out_avg': 'float',
            'out_max': 'float',
            'out_min': 'float',
            'protocol': 'str',
            'remote_addr': 'str',
            'remote_name': 'str',
            'time': 'int',
            'time_avg': 'float',
            'time_max': 'float',
            'time_min': 'float',
            'user': 'GroupMember'
        }

        self.attribute_map = {
            '_class': 'class',
            '_in': 'in',
            'in_avg': 'in_avg',
            'in_max': 'in_max',
            'in_min': 'in_min',
            'local_addr': 'local_addr',
            'local_name': 'local_name',
            'node': 'node',
            'num_operations': 'num_operations',
            'operation_rate': 'operation_rate',
            'out': 'out',
            'out_avg': 'out_avg',
            'out_max': 'out_max',
            'out_min': 'out_min',
            'protocol': 'protocol',
            'remote_addr': 'remote_addr',
            'remote_name': 'remote_name',
            'time': 'time',
            'time_avg': 'time_avg',
            'time_max': 'time_max',
            'time_min': 'time_min',
            'user': 'user'
        }

        self.__class = None
        self.__in = None
        self._in_avg = None
        self._in_max = None
        self._in_min = None
        self._local_addr = None
        self._local_name = None
        self._node = None
        self._num_operations = None
        self._operation_rate = None
        self._out = None
        self._out_avg = None
        self._out_max = None
        self._out_min = None
        self._protocol = None
        self._remote_addr = None
        self._remote_name = None
        self._time = None
        self._time_avg = None
        self._time_max = None
        self._time_min = None
        self._user = None

    @property
    def _class(self):
        """
        Gets the _class of this SummaryClientClientItem.
        The class of the operation.

        :return: The _class of this SummaryClientClientItem.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """
        Sets the _class of this SummaryClientClientItem.
        The class of the operation.

        :param _class: The _class of this SummaryClientClientItem.
        :type: str
        """
        
        self.__class = _class

    @property
    def _in(self):
        """
        Gets the _in of this SummaryClientClientItem.
        Rate of input (in bytes/second) for an operation since the last time isi statistics collected the data.

        :return: The _in of this SummaryClientClientItem.
        :rtype: float
        """
        return self.__in

    @_in.setter
    def _in(self, _in):
        """
        Sets the _in of this SummaryClientClientItem.
        Rate of input (in bytes/second) for an operation since the last time isi statistics collected the data.

        :param _in: The _in of this SummaryClientClientItem.
        :type: float
        """
        
        self.__in = _in

    @property
    def in_avg(self):
        """
        Gets the in_avg of this SummaryClientClientItem.
        Average input (received) bytes for an operation, in bytes.

        :return: The in_avg of this SummaryClientClientItem.
        :rtype: float
        """
        return self._in_avg

    @in_avg.setter
    def in_avg(self, in_avg):
        """
        Sets the in_avg of this SummaryClientClientItem.
        Average input (received) bytes for an operation, in bytes.

        :param in_avg: The in_avg of this SummaryClientClientItem.
        :type: float
        """
        
        self._in_avg = in_avg

    @property
    def in_max(self):
        """
        Gets the in_max of this SummaryClientClientItem.
        Maximum input (received) bytes for an operation, in bytes.

        :return: The in_max of this SummaryClientClientItem.
        :rtype: float
        """
        return self._in_max

    @in_max.setter
    def in_max(self, in_max):
        """
        Sets the in_max of this SummaryClientClientItem.
        Maximum input (received) bytes for an operation, in bytes.

        :param in_max: The in_max of this SummaryClientClientItem.
        :type: float
        """
        
        self._in_max = in_max

    @property
    def in_min(self):
        """
        Gets the in_min of this SummaryClientClientItem.
        Minimum input (received) bytes for an operation, in bytes.

        :return: The in_min of this SummaryClientClientItem.
        :rtype: float
        """
        return self._in_min

    @in_min.setter
    def in_min(self, in_min):
        """
        Sets the in_min of this SummaryClientClientItem.
        Minimum input (received) bytes for an operation, in bytes.

        :param in_min: The in_min of this SummaryClientClientItem.
        :type: float
        """
        
        self._in_min = in_min

    @property
    def local_addr(self):
        """
        Gets the local_addr of this SummaryClientClientItem.
        The IP address (in dotted-quad form) of the host receiving the operation request.

        :return: The local_addr of this SummaryClientClientItem.
        :rtype: str
        """
        return self._local_addr

    @local_addr.setter
    def local_addr(self, local_addr):
        """
        Sets the local_addr of this SummaryClientClientItem.
        The IP address (in dotted-quad form) of the host receiving the operation request.

        :param local_addr: The local_addr of this SummaryClientClientItem.
        :type: str
        """
        
        self._local_addr = local_addr

    @property
    def local_name(self):
        """
        Gets the local_name of this SummaryClientClientItem.
        The resolved text name of the LocalAddr, if resolution can be performed.

        :return: The local_name of this SummaryClientClientItem.
        :rtype: str
        """
        return self._local_name

    @local_name.setter
    def local_name(self, local_name):
        """
        Sets the local_name of this SummaryClientClientItem.
        The resolved text name of the LocalAddr, if resolution can be performed.

        :param local_name: The local_name of this SummaryClientClientItem.
        :type: str
        """
        
        self._local_name = local_name

    @property
    def node(self):
        """
        Gets the node of this SummaryClientClientItem.
        The node on which the operation was performed.

        :return: The node of this SummaryClientClientItem.
        :rtype: int
        """
        return self._node

    @node.setter
    def node(self, node):
        """
        Sets the node of this SummaryClientClientItem.
        The node on which the operation was performed.

        :param node: The node of this SummaryClientClientItem.
        :type: int
        """
        
        self._node = node

    @property
    def num_operations(self):
        """
        Gets the num_operations of this SummaryClientClientItem.
        The number of times an operation has been performed.

        :return: The num_operations of this SummaryClientClientItem.
        :rtype: int
        """
        return self._num_operations

    @num_operations.setter
    def num_operations(self, num_operations):
        """
        Sets the num_operations of this SummaryClientClientItem.
        The number of times an operation has been performed.

        :param num_operations: The num_operations of this SummaryClientClientItem.
        :type: int
        """
        
        self._num_operations = num_operations

    @property
    def operation_rate(self):
        """
        Gets the operation_rate of this SummaryClientClientItem.
        The rate (in ops/second) at which an operation has been performed.

        :return: The operation_rate of this SummaryClientClientItem.
        :rtype: float
        """
        return self._operation_rate

    @operation_rate.setter
    def operation_rate(self, operation_rate):
        """
        Sets the operation_rate of this SummaryClientClientItem.
        The rate (in ops/second) at which an operation has been performed.

        :param operation_rate: The operation_rate of this SummaryClientClientItem.
        :type: float
        """
        
        self._operation_rate = operation_rate

    @property
    def out(self):
        """
        Gets the out of this SummaryClientClientItem.
        Rate of output (in bytes/second) for an operation since the last time isi statistics collected the data.

        :return: The out of this SummaryClientClientItem.
        :rtype: float
        """
        return self._out

    @out.setter
    def out(self, out):
        """
        Sets the out of this SummaryClientClientItem.
        Rate of output (in bytes/second) for an operation since the last time isi statistics collected the data.

        :param out: The out of this SummaryClientClientItem.
        :type: float
        """
        
        self._out = out

    @property
    def out_avg(self):
        """
        Gets the out_avg of this SummaryClientClientItem.
        Average output (sent) bytes for an operation, in bytes.

        :return: The out_avg of this SummaryClientClientItem.
        :rtype: float
        """
        return self._out_avg

    @out_avg.setter
    def out_avg(self, out_avg):
        """
        Sets the out_avg of this SummaryClientClientItem.
        Average output (sent) bytes for an operation, in bytes.

        :param out_avg: The out_avg of this SummaryClientClientItem.
        :type: float
        """
        
        self._out_avg = out_avg

    @property
    def out_max(self):
        """
        Gets the out_max of this SummaryClientClientItem.
        Maximum output (sent) bytes for an operation, in bytes.

        :return: The out_max of this SummaryClientClientItem.
        :rtype: float
        """
        return self._out_max

    @out_max.setter
    def out_max(self, out_max):
        """
        Sets the out_max of this SummaryClientClientItem.
        Maximum output (sent) bytes for an operation, in bytes.

        :param out_max: The out_max of this SummaryClientClientItem.
        :type: float
        """
        
        self._out_max = out_max

    @property
    def out_min(self):
        """
        Gets the out_min of this SummaryClientClientItem.
        Minimum output (sent) bytes for an operation, in bytes.

        :return: The out_min of this SummaryClientClientItem.
        :rtype: float
        """
        return self._out_min

    @out_min.setter
    def out_min(self, out_min):
        """
        Sets the out_min of this SummaryClientClientItem.
        Minimum output (sent) bytes for an operation, in bytes.

        :param out_min: The out_min of this SummaryClientClientItem.
        :type: float
        """
        
        self._out_min = out_min

    @property
    def protocol(self):
        """
        Gets the protocol of this SummaryClientClientItem.
        The protocol of the operation.

        :return: The protocol of this SummaryClientClientItem.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """
        Sets the protocol of this SummaryClientClientItem.
        The protocol of the operation.

        :param protocol: The protocol of this SummaryClientClientItem.
        :type: str
        """
        
        self._protocol = protocol

    @property
    def remote_addr(self):
        """
        Gets the remote_addr of this SummaryClientClientItem.
        The IP address (in dotted-quad form) of the host sending the operation request.

        :return: The remote_addr of this SummaryClientClientItem.
        :rtype: str
        """
        return self._remote_addr

    @remote_addr.setter
    def remote_addr(self, remote_addr):
        """
        Sets the remote_addr of this SummaryClientClientItem.
        The IP address (in dotted-quad form) of the host sending the operation request.

        :param remote_addr: The remote_addr of this SummaryClientClientItem.
        :type: str
        """
        
        self._remote_addr = remote_addr

    @property
    def remote_name(self):
        """
        Gets the remote_name of this SummaryClientClientItem.
        The resolved text name of the RemoteAddr, if resolution can be performed.

        :return: The remote_name of this SummaryClientClientItem.
        :rtype: str
        """
        return self._remote_name

    @remote_name.setter
    def remote_name(self, remote_name):
        """
        Sets the remote_name of this SummaryClientClientItem.
        The resolved text name of the RemoteAddr, if resolution can be performed.

        :param remote_name: The remote_name of this SummaryClientClientItem.
        :type: str
        """
        
        self._remote_name = remote_name

    @property
    def time(self):
        """
        Gets the time of this SummaryClientClientItem.
        Unix Epoch time in seconds of the request.

        :return: The time of this SummaryClientClientItem.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time):
        """
        Sets the time of this SummaryClientClientItem.
        Unix Epoch time in seconds of the request.

        :param time: The time of this SummaryClientClientItem.
        :type: int
        """
        
        self._time = time

    @property
    def time_avg(self):
        """
        Gets the time_avg of this SummaryClientClientItem.
        The average elapsed time (in microseconds) taken to complete an operation.

        :return: The time_avg of this SummaryClientClientItem.
        :rtype: float
        """
        return self._time_avg

    @time_avg.setter
    def time_avg(self, time_avg):
        """
        Sets the time_avg of this SummaryClientClientItem.
        The average elapsed time (in microseconds) taken to complete an operation.

        :param time_avg: The time_avg of this SummaryClientClientItem.
        :type: float
        """
        
        self._time_avg = time_avg

    @property
    def time_max(self):
        """
        Gets the time_max of this SummaryClientClientItem.
        The maximum elapsed time (in microseconds) taken to complete an operation.

        :return: The time_max of this SummaryClientClientItem.
        :rtype: float
        """
        return self._time_max

    @time_max.setter
    def time_max(self, time_max):
        """
        Sets the time_max of this SummaryClientClientItem.
        The maximum elapsed time (in microseconds) taken to complete an operation.

        :param time_max: The time_max of this SummaryClientClientItem.
        :type: float
        """
        
        self._time_max = time_max

    @property
    def time_min(self):
        """
        Gets the time_min of this SummaryClientClientItem.
        The minimum elapsed time (in microseconds) taken to complete an operation.

        :return: The time_min of this SummaryClientClientItem.
        :rtype: float
        """
        return self._time_min

    @time_min.setter
    def time_min(self, time_min):
        """
        Sets the time_min of this SummaryClientClientItem.
        The minimum elapsed time (in microseconds) taken to complete an operation.

        :param time_min: The time_min of this SummaryClientClientItem.
        :type: float
        """
        
        self._time_min = time_min

    @property
    def user(self):
        """
        Gets the user of this SummaryClientClientItem.
        User issuing the operation.

        :return: The user of this SummaryClientClientItem.
        :rtype: GroupMember
        """
        return self._user

    @user.setter
    def user(self, user):
        """
        Sets the user of this SummaryClientClientItem.
        User issuing the operation.

        :param user: The user of this SummaryClientClientItem.
        :type: GroupMember
        """
        
        self._user = user

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other

