CHANGES
=======

1.3.0
-----

* Zuul: Remove project name
* Disable anonymous result upload
* Make run-in-docker script use Xenial
* Update node packages and styling
* Add support for new doc PTI jobs
* Use Chrome only for UI tests
* Specification for subunit data API
* Convert legacy tox jobs in-tree
* add token checking and creating into result update script
* Do not use “-y” for package install
* Use assertRegex instead of assertRegexpMatches
* Fix authentication via openid when py35
* Add debug environment to tox
* Add name scheme update script for alembic version table
* refstack result update script bugfix
* Include tools folder in tox pep8 env
* Assert style fix
* fix refstack.conf.sample typo
* [Trivialfix]Fix typos
* small rst stylefix on subunit data upload spec
* run-in-docker starts refstack over https, fix docs
* Set a custom alembic\_version for refstack
* Create spec for optional subunit data import

1.2.6
-----

* Add UI support for interop schema 2.0
* Update Refstack docs for documentation migration

1.2.5
-----

* add verification status logging to update-rs-db.py
* Add 'rm -f .testrepository/times.dbm' command in testenv
* Add a script to update the internal RefStack DB
* Remove IPython from RefStack container

1.2.4
-----

* Change doc references from DefCore to Interop Working Group
* Add docs to about page
* Re-organize RefStack document links
* Optimize the link address
* Use openstackdocstheme
* Fix py35 func tests
* Replace six.iteritems with dict.items
* Spec for adding RefStack docs to the website natively

1.2.3
-----

* fix a typo in template.rst
* Add openid fix migration script
* Adding Python 3.5 to setup metadata
* Added sphnix build folder location
* Enable py35 functional test env

1.2.2
-----

* Update the logo to the new OpenStack logo

1.2.1
-----

* modify test-requirement according to requirements project
* Fix typo and minor edit modal issue
* Allow adding cpid to null product version
* Update RefStack website with RefStack mascot
* Added tox target which checks requirements.txt
* Update coverage job
* Switch to cryptography from pycrypto
* Prepare for using standard python tests
* Show message when vendor/product is created
* Add ability to edit products in UI
* Rename cover tox environment to fix gate failure
* RefStack specs directory update
* Add a check for nonexistent capabilities
* Remove support for py33
* Add tool for coverage check
* Use upper-constraints for tox envs
* Add ability to auto-associate tests
* Add authentication with Json Web Tokens
* Replace mention of easy\_install with pip
* Show team and repo badges on README

1.2.0
-----

* Add document describing the newly added vendor and product features
* Add additional columns to user results table
* Add ability to edit test meta on report page
* Only Foundation admins can update the 'name' fields of official vendors
* Fix issue with metadata saving
* Remove registration decline message on approved vendor
* Show vendor products on vendor page
* Remove cfg import unused
* Disallow creation of product version with empty version name
* Rename key name from 'reason' to 'registration\_decline\_reason'
* Remove logging import unused
* Docstrings should not start with a space
* Add UI enhancements
* Minor fix in docker scripts
* Disallow deleting the null version of a product
* Add ability in UI to associate test to product/version
* Add tests to product page
* Fix invalid and duplicate links
* Add verification\_status field to test
* Fix typo: remove redundant 'the'
* Specification to mark a test result as "used for verification"
* Fix functional base request functions
* Add ability to associate product version to test
* Add product versions UI
* Set up a correct home page for the project
* Specification to associate test results to vendor products
* Make functional gate job work on Xenial
* Fixing some alignment issues in the quickstart instructions
* Add API for product versions
* Add missing dependencies for Ubuntu 14/16
* Specitication to support product model with multi-versions
* Update documentation to install Node.js v4
* Fix two typos

1.1.4
-----

* Enable support for DefCore schema 1.6
* Adding mechanism to build documentation via sphinx
* Restrict test result metadata keys
* Fix specs format to improve rendered documentation
* Fix gate jobs

1.1.3
-----

* Adding basic editing functionality for vendors
* Default guideline to latest approved guideline
* Disable the Catalog tabs on the UI
* Add next.json to DefCore guideline list
* rename product\_id to product\_ref\_id
* Add products UI base
* Move implemented specs from the approved directory to the implemented directory
* Add 'cancel' registration feature
* Add vendor UI
* Add products REST API

1.1.2
-----

* Add preliminary support for schema version 1.5
* REST API specification for product management
* Add vendors REST API

1.1.1
-----

* Fix user-displayed test list URL

1.1.0
-----

* Update test list UI to use API
* Implement guideline test list API endpoint
* Add/refactor functional API tests
* REST API spec to retrieve DefCore Guideline files and test lists

1.0.3
-----

* Handle the cases guideline download failure with Test list download

1.0.2
-----

* Show test aliases in results report
* Refactor capabilities
* Add user management REST API
* Hide 'Download' button when no test to download
* Add link to pubkey/signature instructions
* Make profile endpoint not error out
* REST API specification for vendor registration
* Add option to view/download test lists
* Fix Product model
* Update angular bootstrap components
* Fix link error for RefStack PyPI
* REST API specification for vendor user management
* add 'is\_admin' flag to profile result

1.0.1
-----

* fix cleaning up auth dict on sign out
* update angular bootstrap lib version
* Remove version from setup.cfg

1.0.0
-----

* Implement organization and product tables
* Update to the organization and product tables
* fix sqlimpl.\_to\_dict for empty list in attributes
* Fix docs instructions for test upload
* Fix warning message when RefStack server starts up
* Add database tables to support vendor/product registration
* Fix broken links
* Create group table
* Fix pubkey preview truncating last character
* Specification to add user/group support in RefStack
* Remove unused JS from UI
* Use obfuscated versions of JavaScript libraries
* Replace assertEqual(True/False, \*) -> assertTrue/False(\*)
* Replace assertEqual(None, \*) with assertIsNone in tests
* Update information displayed on  RefStack UI
* Use cloud access URL to generate CPID
* Deprecated tox -downloadcache option removed
* Re-organize the RefStack specs directory
* RefStack should allow associating specific guideline/target
* Associate results to user instead of key
* Fix 'Profile' and 'My Results' in navigator bar
* refstack should display error message returned from openstack openid
* RefStack UI should display DefCore guideline status
* Add support for defcore schema 1.4
* Set test results paragraph messages
* Set pool\_recycle for beaker sessions
* Add link to OpenStack interop
* Improve logout
* Update for hosting RefStack server at OpenStack Infrastructure
* Add instructions for uploading data with validated users
* Change beaker session backend to database
* Force no caching for Angular $http requests
* Fix failing pep gate
* Check for RSA key existence before accepting uploading data
* RefStack should check for empty test results
* Update eslint and update angular style to match
* Fix functional tests
* Refstack pop up window should remain open before users click close
* Remove old capabilities assets
* Fix refreshing while not logged-in issue
* Update to reflect project movement from stackforge to openstack
* Update .gitreview for project rename
* Rename 'Failed' to 'Not Passed'
* Fix results header links
* Improve authentication alerts
* Delete legacy files and folders
* Rename "Refstack" to "RefStack"
* Handle signout properly
* Add confirmation dialogs
* Refactoring error handling in Refstack API
* Change flagged test reference key
* Allow users to see full passed test list
* Add documentation for run-in-docker script
* Add ability to select subset of tests
* Share and delete signed test results
* Add filter for signed test results and related UI
* Update installation documentation
* Add endpoint and UI for public keys uploading
* Fix the link to the wiki page in about.html
* Add compliance status string
* Update README files
* Show how many non-flagged tests were passed
* Add capabilities schema version handling
* Fix failing python tests in gate
* Added PEP 0257 check
* Add authentication through openstackid.org
* Local Refstack in Docker
* Added test-auto-watch target
* Add JSDoc inline comments to JS files
* Update to use pip install instead of python setup.py install
* npm run test is now a single-run
* Added Chromium Tests
* Added PhantomJS test execution
* Consolidated project files
* Show releases for selected capabilities version
* Added JavaScript Style Linting
* Added karma into node PATH
* minor clean of responsive css - amended padding and margins of text content to ensure lined up with logo correctly - floated logo right to maintain correct position responsively - swapped position of logo and text content to make logo sit on top text at mob - added BEM style classes to target new styles and overwrite bootstrap
* Fix unit tests failing gate
* Updated the README.rst to fix the link to the wiki page
* Simplify to run Refstack in development mode
* Update view in report page when version changes
* Use Refstack API to get capabilities and versions
* Move requests cache into memory
* Add API endpoint for retrieving capabilities
* Update readme files with the latest information
* Fix to store idempotent\_id (UUID) in the database
* Add WSGI file
* Refstack should work with MySQL in utf-8 charset
* Add results and test report page
* Return url with test results
* Added non-interactive config flag to bower install
* Remove files that are now mastered in openstack/defcore
* Add CORS hook to api application
* Added groundwork for the refstack user-interface
* Add support for uploading signed test results
* Adjust html and js to use new capabilities format
* Create endpoint for listing of all uploads id without auth
* Add Test Records Retrieval API to Refstack v1 API
* Add unit tests for untested code
* Repair tests coverage utility
* Cleanup .gitignore and remove refstack.cfg
* Add unit tests for validators and database
* Increase test coverage for database migration
* Improve API functional tests
* Rename test uid field to "uuid"
* Remove unused README file in the doc directory
* Improve database creation for testing
* Update readme to current information
* Remove XML tests in the havancore.json file
* Remove unused code from project
* Add oslo.log library
* Add database connection example to README file
* Switch from oslo.\* libs to oslo\_\*
* Add config auto generator
* Add validation for incomming test results
* Add oslo libraries and command-line utility
* Update refstack.md file to reflect the latest changes
* Test Results JSON Schema
* Remove request body from response header
* Move alembic part in refstack/db/migrations
* Add GET test results and add report page output
* Add tests to the "volume" section in havanacore.json
* API with DB
* Add test uids into REST API spec
* Add API prototype on Pecan
* DB schema for Refstack API v1
* Removed tcup files from repository
* Remove old Flask Refstack application
* Report page prototype
* Approved by the OpenStack Board Dec 2014
* api spec without event methods
* Workflow documentation is now in infra-manual
* Added Swift Designated Sections based on discussion with John Dickinson,     Swift PTL, about required and optional compontents
* Add capabilitiees to junocore.json
* Add capabilitiees to icehousecore.json
* Added tests to the havanacore.json
* HTML page updated to display updated capabilities
* Add base icehouse capabilities file so we can start collecting new / removing old capabilties based on a comparison with havana
* Minor change needed for Capabilities to include status (allows approval of changes BEFORE board approval for early versions of the file) need for workflow
* Work toward Python 3.4 support and testing
* Remove code to trigger test from web ui functionality
* Complete Havana capabilities as passed by the Board in July 2014
* Removed test tools from Refstack
* Remove templated config creation
* py33 tests fixed
* Identifies code that should either be deprecated or moved
* Remove useless mkdir in tcup Dockerfile
* removing tester code
* small change removing need for ui for this feature
* added formating for result input
* seperate refstack tester from refstack
* Use keystone uuid with cloud id
* Use fully qualified test id in the coretests.json file
* spec for ability to upload a complete tempest config
* API v1 spec
* Add instruction to install test requirements
* tcup default to printing documentation if run without tcup.py
* Only pass env variable names to docker run
* removed creative commons lic from template
* Report Visualization Spec and Mocks
* Define Reports for DefCore
* added py33 and removed py26 from tox.ini
* removed gear from requirments list
* Add cross reference line based on updated template
* house keeping .. these are not used anymore
* Simple HTML page that renders the capablities.json file
* Simplify Uploads by only sending Pass results
* proposed spec for v1 api
* added base unittest
* Refactor json for coretests to include criteria information
* updated run\_tempest\_manually.md based on Forrest comments updated tcup.md with latest instructions. adding instructions to run\_tempest\_manually.md
* Add a gitreview setup
* Add a LICENSE
* Hide artifacts of the sdist run
* Remove executable flags
* Controlled JSON files for Defcore management
* add more troubleshooting info:
* TCUP spec for base user facing functionality
* add debug flag to tcup
* WIP simplified tester
* Temporary fix for get-script to use the new execute\_test
* Minor fixes for subunit processing code
* conversion of execute\_test.py into cli
* modified to seperate callback url from test id
* added better error handling and response codes to post\_result method
* added update-test-status method to api
* Add ALT\_USER to cloud model
* Now that we can execute\_tests, we want to give some more information about debug options in the TCUP file and documentation
* Add ability to build basic configuration from environment variables if they are passed
* Add elevated logging if DEBUG env variable set
* flake8 compliance
* Basics of TCUP that is used OUTSIDE of RefStack to run RefStack
* Updates to gearman spec based on raymonds notes
* refinment of specs readme
* updated spec with more detail
* adding spec for refstack-org-gearman-tester
* Display test results
* adding specs folder with readme and template
* more house keeping
* small changes to refstack readme
* small changes requested by forrest in gearman code
* Add subunit data processor
* Remove passwords from docker file
* Improve logger messages
* Add discovery methods
* added base gearman code for client side
* house keeping.. we dont use this
* minor changes to the readme
* actually fixed the refstack doc page
* formatting doc change in refstack
* Docs Refactor
* Updated Docker template to use the latest version of pip
* Update for test related operations
* Display existing tests on the web page
* Updated to keyword arguments
* Use values from DB instead of config file for tempest config
* Use the same user for tempest test user and alt user
* updated post-result method
* Modified the database structure
* Add JSON config file
* Check in the tempest\_tester
* Add a module
* Add new API to web.py
* Removing reference to openstack-ops team
* modified requirements to include jinja2
* Add Docker build file template
* general house cleaning and repair of web.py imports
* added tox.ini
* Dockerfile from @d\_qoi working to build container
* Merge
* Cleaned up a basic tcup dockerfile
* house keeping
* pep8 cleanup
* pep8 fixes
* added lic header
* scorecard template
* Fixin syntax in ==
* Adding a todo
* remove meta so alembic doesn't require refstack
* get rid of this useless fabfile
* add admin for apikey and migration
* add a basic api based on flask-restless
* update db calls to use session
* update flask-admin and move it to a module
* move db back to flask-sqlalchemy
* use local dir for config by default
* update deployment
* more cleaning
* get rid of some unused bits and whitespace
* whitespace
* random changes
* move bootstrap css local
* fixed lack of init
* moved jquery and bootstrap locally rather than cdn
* more refined testerworker stucture
* added base worker class
* added confirm dialog for delete cloud
* Add edit and delete cloud added to web ui
* whitespace
* added alemic migration for relationship
* okay .. really this time.. added relationship
* added user relationship to cloud .
* better vendor layout
* added try
* whitespace
* fixed vendor import
* added favicon.. cuz why not
* git ignore
* vendor csv importer
* added contact name to the vendor table
* fixed margins on home page
* added contact name to the vendor table
* whitespace
* admin css compatibiltiy
* ui cleanup
* override for admin base template so that it looks like the rest of the site
* enabled tooltips in main dashboard
* add cloud button
* profile tweaks
* clean up
* split profile view and profile edit into seperate routes and templates
* spruced up top nav
* initical superfiscial update of templates and css
* added for later use
* updated index view to show dashboard when the user is logged in
* added label to cloud and removed constructor
* redid alembic migration from scratch.. its was getting too messy
* slight edit to the index content
* added su feild to user
* fixed create profile to use new model layout
* local test run complete
* arg
* modified testr config
* added correct config write stuff
* renamed file
* whitespace
* added write\_config function to test class
* renamed init to init\_repo and made it more robust
* added config comand to cli
* cleanup
* made the ui abstract class actually work
* cleaned out excess print
* moved scratch out of readme
* fixed comment
* added testrepository ui wrapper
* removed whitespace and added init and run functions
* added testr wrapping code
* added stuff
* added notes
* fixed typos
* whitespace
* switched to new models
* ignored my debug code
* whitespace
* removed client.py created client dir
* added notes
* fixed whitespace
* completed  tempest auto config thing
* added logic for a failed state.
* rewording
* reworded print statement
* whitespace
* added code for status,  tests, cancel and start
* added init overrides to Test and TestStatus
* unused file
* added email verified column and some notes
* fixed whitespace
* modified command structure
* added feilds and manually fixed migration scripts
* squash
* squash
* added additional schema and migration
* cli cloud stuff
* moved some stuff around
* deleted file with - in name
* renamed files
* fixed naming convention
* added tempest config output method
* lots of new stuff .. start of tempest config generator
* added some files
* more refinement
* added lic to all python files and split up code into more than one file
* Mostly got this file passing flake8 tests
* first commit
* Update web.py
* Freeze pip reqs
* Go directly to launchpad, do not pass go
* Admin views are auth'd against the openid accounts
* Adding Users model to alembic, and the openid templates
* Fixin requirements versions again
* Removing postgres library req
* fixed git reqs luine
* Fixed requirements
* Adding cloud model
* Added schema migrations and an admin view
* Ypto
* Ypto
* Fixin spaces
* Adding sqlalchemy bindings and models
* Moving schema.sql to the module
* Adding sql init to fabfile
* Removing silly dead req
* Run pip install from fabfile
* Adding sqlite db for the data store
* A little more detail
* Adding toast css
* Sudo required for uwsgi update
* change to test uwsgi test
* Don't run the app, let the wsgi layer do that
* Adding uwsgi config
* Added reqs and a wsgi file, will deploy using uwsgi
* Basic flask app, need to hup nginx and start a wsgi server in a minute
* Update README.md
* Initial commit
