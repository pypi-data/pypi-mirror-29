Metadata-Version: 1.1
Name: DimensionTabler
Version: 0.1.6
Summary: Builds dimension tables with configurable/variable grainularity.Keeps those tables up-to-date. This makes reporting queries performant and doable. I use it with grafana.
Home-page: https://github.com/LaggAt/DimensionTabler
Author: Florian Lagg
Author-email: github@florian.lagg.at
License: GPL v3
Description-Content-Type: UNKNOWN
Description: DimensionTabler
        ===============
        
        Builds dimension tables with configurable/variable grainularity. Keeps
        those tables up-to-date. This makes reporting queries performant and
        doable. I use it with `grafana <https://grafana.com/>`__.
        
        Btw: this is a bad “denglish” name, suggest a better one.
        
        I’m interested, some details please
        -----------------------------------
        
        Let’s do an example. We do gather tickers for a bunch of
        cryptocurrencies. We do that every minute for the top 10 currencies.
        This makes 864k lines per day.
        
        Now we want to show them on a graph using grafana - great this works.
        later we join more and more information into this graph (e.g. balance we
        hold on each coin), the query gets slower and slower, and finally times
        out.
        
        Here DimensionTabler jumps in. We want to be able to see long term
        ticker graphs, and we want to be able to see short term graphs in more
        detail. Let’s put this in a table:
        
        +-------------+-------------+-------------+-------------+-------------+
        | Ticker date | granularity | original    | dim.table   | reduced to  |
        |             |             | count       | count       | %           |
        +=============+=============+=============+=============+=============+
        | last 24     | every       | every       | 1,440       | 0%          |
        | hours       | ticker      | minute =    |             |             |
        |             | value       | 1,440       |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        | last 7 days | 15 minutes  | (6 days) =  | /15’ = +576 | 20%         |
        |             |             | +8,640      |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        | last 30     | 1 hour      | +33,120     | +552        | 5.9%        |
        | days        |             |             |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        | last 90     | 4 hours     | +86,400     | +360        | 2.3%        |
        | days        |             |             |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        | before 90   |             |             |             |             |
        | days:       |             |             |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        | … stat for  | 1 day       | +396,000    | +275        | 0.6%        |
        | 1 year      |             |             |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        | … for       | 1 day       | +4,730,400  | +3,285      | 0.1%        |
        | another 9   |             |             |             |             |
        | years       |             |             |             |             |
        +-------------+-------------+-------------+-------------+-------------+
        
        So for 10 years our graph sql result counts 6,488 lines, the unfiltered
        result has 5,256,000 lines. Just by ignoring really unneded detail.
        DimensionTabler keeps this up-to-date and applies given rules.
        
        Usage
        -----
        
        See
        `Example.py <https://github.com/LaggAt/DimensionTabler/blob/master/Example.py>`__
        
        Donate
        ------
        
        Support me with bitcoins:
        
        .. figure:: https://i.imgur.com/ltpF0A4m.png
           :alt: Imgur
        
           Imgur
        
        1MiToswzMsrhQEfmZbLQT8PHC68E5JhJzh
        
        Thanks.
        
Keywords: dimension tables database grafana bi business intelligence
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 2.7
Classifier: Topic :: Utilities
Classifier: Topic :: Database
Classifier: Topic :: Office/Business :: Financial
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
