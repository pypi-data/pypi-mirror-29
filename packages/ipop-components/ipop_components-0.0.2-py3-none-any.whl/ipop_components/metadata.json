{
  "src/components/Button.react.js": {
    "description": "",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "n_clicks": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.integer"
        },
        "required": false,
        "description": "An integer that represents the number of times\nthat this element has been clicked on.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_clicks_previous": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.integer"
        },
        "required": false,
        "description": "An integer that represents the number of times\nthat this element has been clicked on prior to click event.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "key": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A unique identifier for the component, used to improve\nperformance by React.js while rendering components\nSee https://reactjs.org/docs/lists-and-keys.html for more info"
      },
      "autoFocus": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The element should be automatically focused after the page loaded."
      },
      "disabled": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Indicates whether the user can interact with the element."
      },
      "form": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Indicates the form that is the owner of the element."
      },
      "formAction": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Indicates the action of the element, overriding the action defined in the <form>."
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Name of the element. For example used by the server to identify the fields in form submits."
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines the type of the element."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines a default value which will be displayed in the element on page load."
      },
      "accessKey": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines a keyboard shortcut to activate or add focus to the element."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Often used with CSS to style elements with common properties."
      },
      "contentEditable": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Indicates whether the element's content is editable."
      },
      "contextMenu": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines the ID of a <menu> element which will serve as the element's context menu."
      },
      "dir": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)"
      },
      "draggable": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines whether the element can be dragged."
      },
      "hidden": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Prevents rendering of given element, while keeping child elements, e.g. script elements, active."
      },
      "lang": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Defines the language used in the element."
      },
      "spellCheck": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Indicates whether spell checking is allowed for the element."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Defines CSS styles which will override styles previously set."
      },
      "tabIndex": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Overrides the browser's default tab order and follows the one specified instead."
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Text to be displayed in a tooltip when hovering over the element."
      },
      "fireEvent": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "A callback for firing events to dash."
      },
      "dashEvents": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'click'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": ""
      }
    }
  },
  "src/components/ExampleComponent.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "ExampleComponent",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this compnent in Dash callbacks"
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "A label that will be printed when this component is rendered."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The value displayed in the input"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called whenever any of the\nproperties change"
      }
    }
  },
  "src/components/ReactResumableJs.react.js": {
    "description": "",
    "displayName": "ReactResumableJs",
    "methods": [
      {
        "name": "toggleHovered",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "removeFile",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": null
          },
          {
            "name": "file",
            "type": null
          },
          {
            "name": "index",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "cancelUpload",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "pauseUpload",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "startUpload",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "maxFiles": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Maximum number of files that can be uploaded in one session",
        "defaultValue": {
          "value": "undefined",
          "computed": true
        }
      },
      "maxFileSize": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Maximum size per file",
        "defaultValue": {
          "value": "1024 * 1024",
          "computed": false
        }
      },
      "service": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The service to send the files to",
        "defaultValue": {
          "value": "'localhost:8050'",
          "computed": false
        }
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style attributes to add to the upload div",
        "defaultValue": {
          "value": "{\n    'height': '100%',\n    'width': '100%',\n    'borderStyle': 'solid',\n    'borderColor': 'black',\n    'padding': '5px'\n}",
          "computed": false
        }
      },
      "style_active": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style when div is hovered over",
        "defaultValue": {
          "value": "{\n    'height': '100%',\n    'width': '100%',\n    'borderStyle': 'solid',\n    'borderColor': 'grey',\n    'backgroundColor': '#ec6',\n    'padding': '5px'\n}",
          "computed": false
        }
      },
      "style_complete": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style when upload is completed",
        "defaultValue": {
          "value": "{\n    'height': '100%',\n    'width': '100%',\n    'borderStyle': 'solid',\n    'borderColor': 'black',\n    'padding': '5px',\n    'backgroundColor': '#008000'\n}",
          "computed": false
        }
      },
      "textLabel": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The string to display in the label",
        "defaultValue": {
          "value": "'Click Here to Select a File'",
          "computed": false
        }
      },
      "completedMessage": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Message to display when complete upload",
        "defaultValue": {
          "value": "'Complete! '",
          "computed": false
        }
      },
      "fileNames": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "The names of the files",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-supplied function for updating props"
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "User supplied id of this component",
        "defaultValue": {
          "value": "'default-uploader-id'",
          "computed": false
        }
      }
    }
  }
}