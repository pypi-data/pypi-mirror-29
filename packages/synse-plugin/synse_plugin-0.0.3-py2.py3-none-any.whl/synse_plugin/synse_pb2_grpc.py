# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import synse_pb2 as synse__pb2


class InternalApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Read = channel.unary_stream(
        '/synse.InternalApi/Read',
        request_serializer=synse__pb2.ReadRequest.SerializeToString,
        response_deserializer=synse__pb2.ReadResponse.FromString,
        )
    self.Write = channel.unary_unary(
        '/synse.InternalApi/Write',
        request_serializer=synse__pb2.WriteRequest.SerializeToString,
        response_deserializer=synse__pb2.Transactions.FromString,
        )
    self.Metainfo = channel.unary_stream(
        '/synse.InternalApi/Metainfo',
        request_serializer=synse__pb2.MetainfoRequest.SerializeToString,
        response_deserializer=synse__pb2.MetainfoResponse.FromString,
        )
    self.TransactionCheck = channel.unary_unary(
        '/synse.InternalApi/TransactionCheck',
        request_serializer=synse__pb2.TransactionId.SerializeToString,
        response_deserializer=synse__pb2.WriteResponse.FromString,
        )


class InternalApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Read(self, request, context):
    """Read from the specified device(s).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Write(self, request, context):
    """Write to the specified device(s).
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Metainfo(self, request, context):
    """Get the metainformation from the background process that describes
    all of the available devices which that process owns
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TransactionCheck(self, request, context):
    """Check on the state of a write transaction.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_InternalApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Read': grpc.unary_stream_rpc_method_handler(
          servicer.Read,
          request_deserializer=synse__pb2.ReadRequest.FromString,
          response_serializer=synse__pb2.ReadResponse.SerializeToString,
      ),
      'Write': grpc.unary_unary_rpc_method_handler(
          servicer.Write,
          request_deserializer=synse__pb2.WriteRequest.FromString,
          response_serializer=synse__pb2.Transactions.SerializeToString,
      ),
      'Metainfo': grpc.unary_stream_rpc_method_handler(
          servicer.Metainfo,
          request_deserializer=synse__pb2.MetainfoRequest.FromString,
          response_serializer=synse__pb2.MetainfoResponse.SerializeToString,
      ),
      'TransactionCheck': grpc.unary_unary_rpc_method_handler(
          servicer.TransactionCheck,
          request_deserializer=synse__pb2.TransactionId.FromString,
          response_serializer=synse__pb2.WriteResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'synse.InternalApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
