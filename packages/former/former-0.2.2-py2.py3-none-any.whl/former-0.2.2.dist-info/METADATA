Metadata-Version: 2.0
Name: former
Version: 0.2.2
Summary: Create AWS CloudFormation yml for any resource
Home-page: https://github.com/flomotlik/former
Author: Florian Motlik
Author-email: flo@flomotlik.me
License: MIT
Description-Content-Type: UNKNOWN
Keywords: cloudformation,aws,cloud
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Topic :: Utilities
Classifier: License :: Public Domain
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Requires-Dist: requests
Requires-Dist: pyyaml

Former
======

CloudFormation supports lots of different AWS Resources with many
parameters. Remembering all of them is a pain and slows down development
dramatically.

To make this faster ``Former`` lets you create a full CF resource
example for any supported Resource. It parses the `CloudFormation
Resource
Specification <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html>`__
to get the definition for all resources.

Example
-------

You can create an example for any aws resource by calling former with
the service and resource name. In the following example we're creating
an ``AWS::IAM::User`` Resource:

.. code:: bash

    root@e41871e1eb3e:/app# former iam user
    Resources:
      AWSIAMUser:
        Parameters:
          Groups:
          - String
          LoginProfile:
            Password: String - Required
            PasswordResetRequired: Boolean
          ManagedPolicyArns:
          - String
          Path: String
          Policies:
          - PolicyDocument: Json - Required
            PolicyName: String - Required
          UserName: String
        Type: AWS::IAM::User

Some Resources also have a subtype (e.g. LoginProfile for the
IAM::User). If you only want to show the subtype you can add it as a
third parameter:

.. code:: bash

    root@e41871e1eb3e:/app# former iam user loginprofile
    Resources:
      AWSIAMUserLoginProfile:
        Parameters:
          Password: String - Required
          PasswordResetRequired: Boolean
        Type: AWS::IAM::User.LoginProfile

Of course this is not valid CloudFormation as the ``LoginProfile`` is
not a valid CF Resource. But it helps when you want to get a quick
overview for a subtype.

Options
-------

-  ``--json`` Print output in json instead of yaml



