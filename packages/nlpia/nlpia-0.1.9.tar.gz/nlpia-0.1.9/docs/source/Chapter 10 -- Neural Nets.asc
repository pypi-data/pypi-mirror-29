== Let's see this go

* now please

[source,python]
def example_func(arg):
    print("Go big or go home.")
    a = 42
    return


== Let's write a book.

Language's true power is not necessarily in the words themselves, but between or even beneath the words.  With a firm(ish) grasp on the actual words and multiple clever ways to string them together, how do we get beneath them?  How do we find meaning, emontion from that text and do something with it.  Adn even more ambitious, how do we impart that to machine generated text.

Even the phrase machine-generated text itself inspires a certain dread of a hollow, tinned voice issuing a chopped list of words that maky get a point across but little more than that.  What is missing?  The tone, the flow, the character that you expect someone to express in even the most passing of engagements.  Those elements exist in between the words, underneath the words in patterns of how they are constructed.  As a person communicates, they will underlay patterns in their text and speech.  Truly great writers and speakers will actively manipulate these patterns, to great effect.  And the how we that we recognize them is the same reason that what the machines sound so terrible.  The patterns aren't there.
