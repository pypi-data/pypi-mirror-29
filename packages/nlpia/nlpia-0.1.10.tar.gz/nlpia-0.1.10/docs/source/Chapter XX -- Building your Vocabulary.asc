= Build your Vocabulary - Natural Language Processing 101
:chapter: 1

// TODO add intro bullets





== NLP Pipelines

=== Text Segmentation
Text segmentation often refers to segmenting a blob of text into chunks of individual sentences, is the first step in a conventional natural language pipeline. It is often overlooked and low performing segmenter can easily limit the performance of your entire NLP pipeline since the errors of this stage will trickle through the pipeline (unlike major tax ideas).

Breaking text into sentences sounds simple and straightforward for most languages. For example, in the English language, sentences can be segmented by periods followed by a whitespace or a newline character which is then followed by a capitalized character. However, things can get complicated as the example illustrates:

[source,text]
Example 1
The regulations affect major metropolitan areas in the U.S. Reported by the New York Times, the new legislation ...

[source,text]
Example 2
The regulation includes e.g. DOD restrictions of the color of honey buckets. These restrictions include ...

Any rule-based segmenter or any decent regular expressions like the example below can easily handle the first example but would fail on the second example.

[source,python]
    List of regex to seg sentences

For more complicated segmentation rules, a binary classifier or statistical segmentation is recommended. Binary classifiers, e.g. based on decision trees, a perceptron or a recurrent neural network (please reference Chapter X for more details) can be trained and predict whether the period in a sentence corresponds to the end of the sentence or an abbreviation. Statistical segmenter split the text into sentences based words followed by a period with a high probability of being an end-of-sentence (EOS) word. For example, `day.` has a 97% chance of being an EOS word, whereas `U.S.` only has a 25% chance of representating an EOS term.

Text segmentation is often domain specific. Corpuses can have different rules and statistics of EOS terms. Machine learning approaches are recommeded for a more general approach.


=== Tokenization of Text Segments

How to Foo is easy to do. Here's how.
