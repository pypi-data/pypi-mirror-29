[tox]
envlist =
    clean,
    check,
    {py27,py35},

[testenv]
basepython =
    pypy: {env:TOXPYTHON:pypy}
    py27: {env:TOXPYTHON:python2.7}
    py34: {env:TOXPYTHON:python3.4}
    py35: {env:TOXPYTHON:python3.5}
    py36: {env:TOXPYTHON:python3.6}
    {clean,check,report,coveralls,codecov}: python3
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
	mock
    pytest
    pytest-cov
    coverage
    reportlab
    mako
commands =
    {posargs:py.test --cov=mlx.json_to_mako --cov-report=term-missing -vv tests/}
    json-to-mako -h
    json-to-mako --version
    python -c 'import mlx.json_to_mako;print(mlx.json_to_mako.__version__)'
    python -m mlx.json_to_mako -h
    python -m mlx.json_to_mako --version
    python -m mlx.json_to_mako --input example/family.json --input example/work.json --template example/address-book.mako --output example/address-book.html

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    mako
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir} -u
    flake8 mlx tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage


