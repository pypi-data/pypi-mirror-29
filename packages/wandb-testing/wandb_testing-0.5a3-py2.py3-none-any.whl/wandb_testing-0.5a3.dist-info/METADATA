Metadata-Version: 2.0
Name: wandb-testing
Version: 0.5a3
Summary: A CLI and library for interacting with the Weights and Biases API.
Home-page: https://github.com/wandb/client
Author: Chris Van Pelt
Author-email: vanpelt@gmail.co
License: MIT license
Keywords: wandb
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: Click (>=6.0)
Requires-Dist: GitPython (>=2.1.8)
Requires-Dist: daemonocle (>=1.0.1)
Requires-Dist: flask-cors (>=3.0.3)
Requires-Dist: flask-graphql (>=1.4.0)
Requires-Dist: gql (>=0.1.0)
Requires-Dist: graphene (>=2.0.0)
Requires-Dist: nvidia-ml-py3 (>=7.352.0)
Requires-Dist: psutil (>=5.2.2)
Requires-Dist: pusherclient (>=0.3.0)
Requires-Dist: requests (>=2.0.0)
Requires-Dist: shortuuid (>=0.5.0)
Requires-Dist: six (>=1.10.0)
Requires-Dist: watchdog (>=0.8.3)
Requires-Dist: whaaaaat (>=0.5.2)

<div align="center">
  <img src="https://app.wandb.ai/logo.svg" width="350" /><br><br>
</div>

# Weights and Biases [![ci](https://circleci.com/gh/wandb/client.svg?style=svg)](https://circleci.com/gh/wandb/client) [![pypi](https://img.shields.io/pypi/v/wandb.svg)](https://pypi.python.org/pypi/wandb)

The **Weights and Biases** client is an open source library, CLI (wandb), and local web application for organizing and analyzing your machine learning experiments. Think of it as a framework-agnostic lightweight TensorBoard that persists additional information such as the state of your code, system metrics, and configuration parameters.

## Local Features

* Store config parameters used in a training run
* Associate version control with your training runs
* Search, compare, and visualize training runs
* Analyze system usage metrics alongside runs

## Cloud Features

* Persist runs forever
* Collaborate with team members
* Run parameter sweeps

## Quickstart

```shell
pip install wandb
```

In your training script:

```python
import wandb
# Your custom arguments defined here
args = ...

run = wandb.init()
run.config.update(args)
run.config["custom"] = "parameter"

def training_loop():
    while True:
        # Do some machine learning
        epoch, loss, val_loss = ...
        run.history.add({"epoch": epoch, "loss": loss, "val_loss": val_loss})
```

Running your script will save run data in a directory named _wandb_ relative to your training script. To view your runs, call `wandb board` from the same directory as your training script.

![Runs screenshot](docs/screenshot.jpg?raw=true)

## Cloud Usage

[Signup](https://app.wandb.ai/login?invited) for an account, then run `wandb init` from the directory with your training script. You can checkin _wandb/settings_ to version control to enable other users on your team to share experiments. Run your script with `wandb run my_script.py` and all metadata will be synced to the cloud.

## Detailed Usage

Framework specific and detailed usage can be found in our [documentation](http://docs.wandb.com/).

## Development

See https://github.com/wandb/client/blob/master/DEVELOPMENT.md


