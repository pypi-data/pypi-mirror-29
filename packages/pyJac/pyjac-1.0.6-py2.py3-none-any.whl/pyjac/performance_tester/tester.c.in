void read_initial_conditions(const char* filename, int NUM, double** y_host, double** variable_host);
    #include "jacob.h"
    #include "timer.h"
    #include "header.h"
    #include <stdio.h>
    int main (int argc, char *argv[])
    {
        int num_odes = 1;
        if (sscanf(argv[1], "%i", &num_odes) !=1 || (num_odes <= 0))
        {
            exit(-1);
        }
        int num_threads = 1;
        if (sscanf(argv[2], "%i", &num_threads) !=1 || (num_threads <= 0))
        {
            exit(-1);
        }
        omp_set_num_threads(num_threads);
        double* y_host;
        double* var_host;
        read_initial_conditions("$datafile", num_odes, &y_host, &var_host);

        StartTimer();
        #pragma omp parallel for
        for(int tid = 0; tid < num_odes; ++tid)
        {
            double jac[NSP * NSP] = {0};
            eval_jacob(0, var_host[tid], &y_host[tid * NN], jac);
        }
        double runtime = GetTimer();
        printf("%d,%.15le\n", num_odes, runtime);
        free(y_host);
        free(var_host);
        return 0;
    }