Metadata-Version: 1.1
Name: django-payload-validator
Version: 1.0.0
Summary: validator for django payload
Home-page: https://github.com/gladsonvm/django_payload_validator
Author: Gladson V Manuel
Author-email: gladsonvm@gmail.com
License: MIT
Description-Content-Type: UNKNOWN
Description: # Django payload validator
        This package can validate data provided as payload in request body. This is similar to django forms, but only difference being this works on json data provided throuogh body of a request rather than HTML forms.
        
        ### installation
        
        - #### from pypi
           - ```pip install django-payload-validator```
        - #### from this github repo
           - ```pip install -e git+https://github.com/gladsonvm/django_payload_validator.git#egg=django_payload_validator```
        
        ### Usage
        
        ```
        class TeamCreateView(JsonCreateView):
            model = <model>
            validation_rule = <validation_rule>
        ```
        
        ### Example
        
        ```
        class TeamCreateView(JsonCreateView):
            model = Team
            validation_rule = create_team
        ```
        
        ### Concepts:
        
        - ##### validation_rule
           - A validation rule defines all fields those are meant to be validated.
           - Validation rule is a dictionary which defines 
              * fields
                * all fields those are meant to be validated as a dict. Each fields must define its `type`. If a field is mandatory, then set `required` param to true in field declaration. 
              * auto populated fields
                * Fields those are not obtained from request data and must be updated in database.
              * excluded fields
                * Fields that should not be displayed in response. 
              
           example:
           ```
           create_team = {
            'fields': {
                'name': {'type': str, 'required': True},
                'description': {'type': str, 'required': True},
                'team_type': {'type': str, 'required': True, 'allowed_values': ['tech', 'management', 'business', 'marketing']},
                'members': {'type': list}
                },
            'auto_populate_fields': {'created_by': 'request.user', 'last_updated_by': 'request.user'},
            'excluded_fields': ['members']
            }
           ```
           
           
        
Keywords: django payload validator intended audience is dev
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Framework :: Django
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
