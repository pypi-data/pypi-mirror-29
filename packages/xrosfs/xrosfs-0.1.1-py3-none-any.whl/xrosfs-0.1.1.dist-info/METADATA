Metadata-Version: 2.0
Name: xrosfs
Version: 0.1.1
Summary: Mount a Running Docker Container File Sytem via FUSE
Home-page: https://github.com/hankei6km/xrosfs
Author: hankei6km
Author-email: hankei6km@gmail.com
License: MIT
Description-Content-Type: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Topic :: System :: Filesystems
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Environment :: Console
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Dist: docker
Requires-Dist: fusepy

XrosFS
======

Mount a Running Docker Container File Sytem via FUSE.

-  No requirement to install additional agents to container side. it's
   only required to have permitted to ``docker exec`` command.
-  Docker container
   `xros-over-sshfs <https://hub.docker.com/r/hankei6km/xros-over-sshfs/>`__
   that mount other containers file system automatically by XrosFS with
   autofs and sshfs is released.

Requirements
------------

Docker Host Side
~~~~~~~~~~~~~~~~

-  Python 3.5 or later
-  FUSE 2.6 (or later)
-  Permitted to execute ``$ docker exec``

Docker Container Side
~~~~~~~~~~~~~~~~~~~~~

-  Shell (``ash`` or ``bash``) and some commands(\ ``test``, ``stat``,
   ``dd`` ``base64`` etc.) (Usually, they are already installed plain
   image of alpine, debian etc.)

Installation
------------

.. code:: bash

    pip install xrosfs

Usage
-----

Mount ``/`` of ``container1`` to ``~/mnt``.

.. code:: bash

    $ xrosfs container1:/ ~/mnt

In above step, xrosfs connect to ``container1`` as ``root`` user. Pass
``user@container1:/`` to xrosfs, if you want to connect as other users.

Known Issues
------------

-  Can't access to file that had ``\n`` included filename.
-  Bad response time in operates.
-  Some operations methods are not full implemented
   yet(\ ``flush(fsync)`` ``utimens`` etc.).

License
-------

Copyright (c) 2018 hankei6km

Licensed under the MIT License. See LICENSE.txt in the project root.


