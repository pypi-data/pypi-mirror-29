import os, sys
current_path = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_path + '/../') 
import json
import unittest
from carpalrouting.geofence import GeoTools, GeoArea
from carpalrouting.models import Coordinates, Driver, Location
from carpalrouting.grouping import DriverGrouping, LocationGrouping


class TestGeoFencing(unittest.TestCase):
    def setUp(self):
        self._edge_locations = [[-33.910457,150.851173], 
                                [-34.035102,151.1002], 
                                [-33.75181,150.694366], 
                                [-33.88371,151.209604], 
                                [-33.816315,151.002659]]

    def test_single_point_in_polygon(self):
        self.assertFalse(GeoTools.is_point_in_area(edge_coordinates=self._edge_locations,
                                                   coordinates=[-33.9182, 151.0350]))

        self.assertTrue(GeoTools.is_point_in_area(edge_coordinates=self._edge_locations,
                                                  coordinates=[-33.8634, 150.8836]))

    def test_group_locations_by_polygon_groups(self):
        drivers = [
            {
                'id': 981,
                'time_slots': [[30000, 42000], [53000, 61600]],
                'capacity': 100,
                'speed': 20
            },{
                'id': 1000,
                'time_slots': [[30000, 42000], [53000, 61600]],
                'capacity': 16,
                'speed': 5
            }]
            
        edge_locations = {'edge 1': [-33.910457,150.851173], 
                          'edge 2': [-34.035102,151.1002], 
                          'edge 3': [-33.75181,150.694366], 
                          'edge 4': [-33.88371,151.209604], 
                          'edge 5': [-33.816315,151.002659]}

        locations = {'pickup1':[
            {
                'coordinates': [-33.8815474, 150.9625217],
                'delivery_window': [54800, 72000],
                'capacity': 7.8,
                'order_time': 30660
            },{
                'coordinates': [-33.8322542, 151.0548105],
                'delivery_window': [12400, 39600],
                'capacity': 15.8,
                'order_time': 33600
            },{
                'coordinates': [-33.881716, 150.9136746],
                'delivery_window': [22400, 39600],
                'capacity': 3.8,
                'order_time': 45000
            },{
                'coordinates': [-33.9545249, 150.9406193],
                'delivery_window': [54000, 61200],
                'capacity': 35.5,
                'order_time': 55800
            },{
                'coordinates': [-33.9375904, 150.8350134],
                'delivery_window': [44000, 61200],
                'capacity': 15.5,
                'order_time': 35800
            },{
                'coordinates': [-33.8800401, 151.1104426],
                'delivery_window': [44000, 61200],
                'capacity': 25,
                'order_time': 45800
            },{
                'coordinates': [-33.7171208, 151.0952565],
                'delivery_window': [54000, 81200],
                'capacity': 10,
                'order_time': 55800
            },{
                'coordinates': [-33.9545249, 150.9406193],
                'delivery_window': [36000, 41200],
                'capacity': 35.5,
                'order_time': 55800
            }]}

        pickup_location = {
            'address': '4D-4E Clarence St, Belfield NSW 2191, Australia',
            'coordinates': [-33.893568,151.0701167],
            'delivery_window': [12000, 24000],
            'capacity': 0,
            'order_time': 0
        }        
        # edge_location_groups = [[[-33.910457,150.851173], 
        #                          [-34.035102,151.1002], 
        #                          [-33.75181,150.694366], 
        #                          [-33.88371,151.209604], 
        #                          [-33.816315,151.002659]]]

        # locations = [Coordinates(item[0], item[1]) for item in [[-33.8815474, 150.9625217],[-33.8322542, 151.0548105], [-33.7564669, 151.0328082], 
        #                                                         [-33.8279612, 151.0849191], [-33.90412269999999, 150.8713687], [-33.7081342, 151.0266973], 
        #                                                         [-33.8990327, 151.127098], [-33.7431262, 151.0000827], [-33.8035082, 151.2917572], 
        #                                                         [-33.6735124, 150.9170453], [-33.833124, 151.0114904], [-33.8075237, 150.7871679], 
        #                                                         [-33.9027067, 150.8499054], [-33.8942252, 151.2640789], [-33.6983064, 151.2608468], 
        #                                                         [-33.7722761, 151.0627094], [-33.7214488, 151.1419943], [-33.9340193, 151.049283], 
        #                                                         [-33.8821928, 151.099745], [-33.9136689, 151.0914597], [-33.881716, 150.9136746], 
        #                                                         [-33.8916748, 151.1033708], [-33.9419613, 150.8600558], [-33.7190922, 150.7287177], 
        #                                                         [-33.6248897, 151.3251941], [-33.9199685, 151.164588], [-33.9932811, 151.1423019], 
        #                                                         [-33.7025279, 151.1209383], [-34.0661302, 150.7614243], [-33.8566053, 150.921382], 
        #                                                         [-33.9375904, 150.8350134], [-33.7802448, 151.1284224], [-33.8190505, 150.928082],
        #                                                         [-33.876433, 151.1035393], [-33.6979233, 150.9483174], [-33.7991638, 150.7737788], 
        #                                                         [-33.7991638, 150.7737788], [-33.8016286, 150.9241274], [-33.8339631, 151.0848507], 
        #                                                         [40.7176045, -80.2995224], [-33.8303587, 151.0055139], [-33.8273137, 151.0872011], 
        #                                                         [-33.6940438,150.979319], [-33.942172, 151.0996659], [-33.8737363, 151.2819765], 
        #                                                         [-33.8384025, 150.9934711], [-33.7722547, 150.8796777], [-33.891516, 151.0229012], 
        #                                                         [-33.9629768, 150.9514408], [-33.8242142, 150.9923843], [-33.8944139, 151.0576885], 
        #                                                         [-33.8647992, 151.0648098], [-33.8253016, 151.201657], [-33.7293929, 150.8636139], 
        #                                                         [-33.74676940000001, 150.9028037], [-33.7765622, 151.2930504], [-33.8899732, 151.2048472], 
        #                                                         [-33.865437, 151.0637953], [-33.9184137, 150.8647152], [-33.8920179, 151.2463212], 
        #                                                         [-33.7428613, 150.951755], [-33.9311462, 151.1854873], [-33.7760081, 151.0269004], 
        #                                                         [-33.7874349, 150.9208021], [-33.8844141, 151.2023147], [-33.8663485, 151.2021377], 
        #                                                         [-34.0690245, 151.1371807], [-33.7129739, 151.0815245], [-34.0389101, 151.0117584], 
        #                                                         [-33.8778057, 150.870938], [39.8642001, -88.9608767], [-33.7950816, 151.0450271], 
        #                                                         [-33.8936629, 150.8881166], [-33.7911569, 150.6798537], [-33.8631282, 151.0290516], 
        #                                                         [-33.8809245, 151.088366], [-33.8764307, 151.0872326], [-33.8153714, 150.9189062], 
        #                                                         [-33.7527491, 151.0259901], [-34.0280024, 150.8616444], [-33.8500755, 151.281027], 
        #                                                         [-33.6968311, 150.9056106], [-33.8773813, 151.2163633], [-33.7923558, 151.0531365], 
        #                                                         [-33.7120079, 150.9221415], [-33.899218, 150.9529345], [-33.7746413, 151.1850288], 
        #                                                         [-34.0213662, 151.2011717], [-33.7785293, 151.0564844], [-33.7967314, 151.1387143], 
        #                                                         [-33.8863005, 151.1976135], [-33.9253063, 151.1866968], [-33.8206471, 150.9575145], 
        #                                                         [-34.0049466, 150.88009], [-33.8421825, 151.2329102], [-33.8430065, 150.9790404], 
        #                                                         [-33.8352555, 151.0387274], [-33.8751661, 151.1043838], [-33.7223104, 151.0486238], 
        #                                                         [-33.86428430000001, 151.0112531], [-33.8890274, 150.9842585], [-33.9460008, 150.8734704], 
        #                                                         [-33.9169204, 151.0963596], [-33.9114822, 150.9921814], [-33.9236836, 151.0380709], 
        #                                                         [-33.7957599, 151.277032], [-33.9462292, 150.8834584], [-33.9867052, 151.1373676], 
        #                                                         [-33.8920633,151.2477516], [-33.9866864, 151.2334632], [-33.7813473, 151.1251407], 
        #                                                         [-33.9489922, 150.8469648], [40.2178097, -76.4096218], [-33.7399454, 150.9008197], 
        #                                                         [-33.9250116, 151.189391], [-33.7841171, 150.9263627], [-33.9149033, 151.0636693], 
        #                                                         [-33.8793793, 151.1658601],[-33.8362722, 150.9902298], [-33.6936097, 150.9326487], 
        #                                                         [-33.8518483, 151.0466589], [-33.9130419, 151.0959647], [-33.7403983, 151.2266504], 
        #                                                         [-33.8337536, 151.0072434], [-33.9054054, 151.1267197], [-33.9175679, 151.2255712], 
        #                                                         [-33.865437, 151.0637953], [-33.9666751, 150.9741103], [-33.8208591, 151.1144037], 
        #                                                         [-33.9598935, 151.1142283], [-33.784205, 151.1212742], [-33.9254492, 151.1867258], 
        #                                                         [-33.893568, 151.0788714], [-33.905316, 151.1296994], [-33.8929407, 150.862418], 
        #                                                         [-33.8873526, 151.2013197], [-34.0548486, 151.1516176], [-33.7951812, 151.180348]]]

        schedules = DriverGrouping().group_drivers_by_time_slot(drivers=[Driver(id=item.get('id'),
                                                                                time_slots=item.get('time_slots'),
                                                                                capacity=item.get('capacity'),
                                                                                speed=item.get('speed')) for item in drivers])
        
        processed, unprocessed  = GeoTools.group_locations(edge_coordinates=edge_locations,                                                                       
                                                           delivery_locations=locations.get('pickup1'),
                                                           pickup_location=pickup_location,
                                                           schedules={k:v for k,v in schedules.items()})

        
        self.assertEqual(len(list(processed.items())), 1)
        self.assertEqual(len(list(unprocessed.items())), 1)

       